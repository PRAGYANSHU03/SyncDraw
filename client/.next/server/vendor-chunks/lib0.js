"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lib0";
exports.ids = ["vendor-chunks/lib0"];
exports.modules = {

/***/ "(ssr)/./node_modules/lib0/array.js":
/*!************************************!*\
  !*** ./node_modules/lib0/array.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendTo: () => (/* binding */ appendTo),\n/* harmony export */   bubblesortItem: () => (/* binding */ bubblesortItem),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   equalFlat: () => (/* binding */ equalFlat),\n/* harmony export */   every: () => (/* binding */ every),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   fold: () => (/* binding */ fold),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   some: () => (/* binding */ some),\n/* harmony export */   unfold: () => (/* binding */ unfold),\n/* harmony export */   unique: () => (/* binding */ unique),\n/* harmony export */   uniqueBy: () => (/* binding */ uniqueBy)\n/* harmony export */ });\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set.js */ \"(ssr)/./node_modules/lib0/set.js\");\n/**\n * Utility module to work with Arrays.\n *\n * @module array\n */ \n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */ const last = (arr)=>arr[arr.length - 1];\n/**\n * @template C\n * @return {Array<C>}\n */ const create = ()=>/** @type {Array<C>} */ [];\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */ const copy = (a)=>/** @type {Array<D>} */ a.slice();\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */ const appendTo = (dest, src)=>{\n    for(let i = 0; i < src.length; i++){\n        dest.push(src[i]);\n    }\n};\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */ const from = Array.from;\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */ const every = (arr, f)=>{\n    for(let i = 0; i < arr.length; i++){\n        if (!f(arr[i], i, arr)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */ const some = (arr, f)=>{\n    for(let i = 0; i < arr.length; i++){\n        if (f(arr[i], i, arr)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */ const equalFlat = (a, b)=>a.length === b.length && every(a, (item, index)=>item === b[index]);\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */ const flatten = (arr)=>fold(arr, /** @type {Array<ELEM>} */ [], (acc, val)=>acc.concat(val));\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */ const unfold = (len, f)=>{\n    const array = new Array(len);\n    for(let i = 0; i < len; i++){\n        array[i] = f(i, array);\n    }\n    return array;\n};\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */ const fold = (arr, seed, folder)=>arr.reduce(folder, seed);\nconst isArray = Array.isArray;\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */ const unique = (arr)=>from(_set_js__WEBPACK_IMPORTED_MODULE_0__.from(arr));\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */ const uniqueBy = (arr, mapper)=>{\n    /**\n   * @type {Set<M>}\n   */ const happened = _set_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    /**\n   * @type {Array<T>}\n   */ const result = [];\n    for(let i = 0; i < arr.length; i++){\n        const el = arr[i];\n        const mapped = mapper(el);\n        if (!happened.has(mapped)) {\n            happened.add(mapped);\n            result.push(el);\n        }\n    }\n    return result;\n};\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */ const map = (arr, mapper)=>{\n    /**\n   * @type {Array<any>}\n   */ const res = Array(arr.length);\n    for(let i = 0; i < arr.length; i++){\n        res[i] = mapper(/** @type {any} */ arr[i], i, /** @type {any} */ arr);\n    }\n    return /** @type {any} */ res;\n};\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */ const bubblesortItem = (arr, i, compareFn)=>{\n    const n = arr[i];\n    let j = i;\n    // try to sort to the right\n    while(j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0){\n        arr[j] = arr[j + 1];\n        arr[++j] = n;\n    }\n    if (i === j && j > 0) {\n        // sort to the left\n        while(j > 0 && compareFn(arr[j - 1], n) > 0){\n            arr[j] = arr[j - 1];\n            arr[--j] = n;\n        }\n    }\n    return j;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9hcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFOEI7QUFFL0I7Ozs7OztDQU1DLEdBQ00sTUFBTUMsT0FBT0MsQ0FBQUEsTUFBT0EsR0FBRyxDQUFDQSxJQUFJQyxNQUFNLEdBQUcsRUFBRTtBQUU5Qzs7O0NBR0MsR0FDTSxNQUFNQyxTQUFTLElBQU0scUJBQXFCLEdBQUksRUFBRSxDQUFDO0FBRXhEOzs7O0NBSUMsR0FDTSxNQUFNQyxPQUFPQyxDQUFBQSxJQUFLLHFCQUFxQixHQUFJQSxFQUFFQyxLQUFLLEdBQUc7QUFFNUQ7Ozs7OztDQU1DLEdBQ00sTUFBTUMsV0FBVyxDQUFDQyxNQUFNQztJQUM3QixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUQsSUFBSVAsTUFBTSxFQUFFUSxJQUFLO1FBQ25DRixLQUFLRyxJQUFJLENBQUNGLEdBQUcsQ0FBQ0MsRUFBRTtJQUNsQjtBQUNGLEVBQUM7QUFFRDs7Ozs7OztDQU9DLEdBQ00sTUFBTUUsT0FBT0MsTUFBTUQsSUFBSTtBQUU5Qjs7Ozs7Ozs7OztDQVVDLEdBQ00sTUFBTUUsUUFBUSxDQUFDYixLQUFLYztJQUN6QixJQUFLLElBQUlMLElBQUksR0FBR0EsSUFBSVQsSUFBSUMsTUFBTSxFQUFFUSxJQUFLO1FBQ25DLElBQUksQ0FBQ0ssRUFBRWQsR0FBRyxDQUFDUyxFQUFFLEVBQUVBLEdBQUdULE1BQU07WUFDdEIsT0FBTztRQUNUO0lBQ0Y7SUFDQSxPQUFPO0FBQ1QsRUFBQztBQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLE1BQU1lLE9BQU8sQ0FBQ2YsS0FBS2M7SUFDeEIsSUFBSyxJQUFJTCxJQUFJLEdBQUdBLElBQUlULElBQUlDLE1BQU0sRUFBRVEsSUFBSztRQUNuQyxJQUFJSyxFQUFFZCxHQUFHLENBQUNTLEVBQUUsRUFBRUEsR0FBR1QsTUFBTTtZQUNyQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVCxFQUFDO0FBRUQ7Ozs7OztDQU1DLEdBQ00sTUFBTWdCLFlBQVksQ0FBQ1osR0FBR2EsSUFBTWIsRUFBRUgsTUFBTSxLQUFLZ0IsRUFBRWhCLE1BQU0sSUFBSVksTUFBTVQsR0FBRyxDQUFDYyxNQUFNQyxRQUFVRCxTQUFTRCxDQUFDLENBQUNFLE1BQU0sRUFBQztBQUV4Rzs7OztDQUlDLEdBQ00sTUFBTUMsVUFBVXBCLENBQUFBLE1BQU9xQixLQUFLckIsS0FBSyx3QkFBd0IsR0FBSSxFQUFFLEVBQUcsQ0FBQ3NCLEtBQUtDLE1BQVFELElBQUlFLE1BQU0sQ0FBQ0QsTUFBSztBQUV2Rzs7Ozs7Q0FLQyxHQUNNLE1BQU1FLFNBQVMsQ0FBQ0MsS0FBS1o7SUFDMUIsTUFBTWEsUUFBUSxJQUFJZixNQUFNYztJQUN4QixJQUFLLElBQUlqQixJQUFJLEdBQUdBLElBQUlpQixLQUFLakIsSUFBSztRQUM1QmtCLEtBQUssQ0FBQ2xCLEVBQUUsR0FBR0ssRUFBRUwsR0FBR2tCO0lBQ2xCO0lBQ0EsT0FBT0E7QUFDVCxFQUFDO0FBRUQ7Ozs7OztDQU1DLEdBQ00sTUFBTU4sT0FBTyxDQUFDckIsS0FBSzRCLE1BQU1DLFNBQVc3QixJQUFJOEIsTUFBTSxDQUFDRCxRQUFRRCxNQUFLO0FBRTVELE1BQU1HLFVBQVVuQixNQUFNbUIsT0FBTztBQUVwQzs7OztDQUlDLEdBQ00sTUFBTUMsU0FBU2hDLENBQUFBLE1BQU9XLEtBQUtiLHlDQUFRLENBQUNFLE1BQUs7QUFFaEQ7Ozs7OztDQU1DLEdBQ00sTUFBTWlDLFdBQVcsQ0FBQ2pDLEtBQUtrQztJQUM1Qjs7R0FFQyxHQUNELE1BQU1DLFdBQVdyQywyQ0FBVTtJQUMzQjs7R0FFQyxHQUNELE1BQU1zQyxTQUFTLEVBQUU7SUFDakIsSUFBSyxJQUFJM0IsSUFBSSxHQUFHQSxJQUFJVCxJQUFJQyxNQUFNLEVBQUVRLElBQUs7UUFDbkMsTUFBTTRCLEtBQUtyQyxHQUFHLENBQUNTLEVBQUU7UUFDakIsTUFBTTZCLFNBQVNKLE9BQU9HO1FBQ3RCLElBQUksQ0FBQ0YsU0FBU0ksR0FBRyxDQUFDRCxTQUFTO1lBQ3pCSCxTQUFTSyxHQUFHLENBQUNGO1lBQ2JGLE9BQU8xQixJQUFJLENBQUMyQjtRQUNkO0lBQ0Y7SUFDQSxPQUFPRDtBQUNULEVBQUM7QUFFRDs7Ozs7O0NBTUMsR0FDTSxNQUFNSyxNQUFNLENBQUN6QyxLQUFLa0M7SUFDdkI7O0dBRUMsR0FDRCxNQUFNUSxNQUFNOUIsTUFBTVosSUFBSUMsTUFBTTtJQUM1QixJQUFLLElBQUlRLElBQUksR0FBR0EsSUFBSVQsSUFBSUMsTUFBTSxFQUFFUSxJQUFLO1FBQ25DaUMsR0FBRyxDQUFDakMsRUFBRSxHQUFHeUIsT0FBTyxnQkFBZ0IsR0FBSWxDLEdBQUcsQ0FBQ1MsRUFBRSxFQUFHQSxHQUFHLGdCQUFnQixHQUFJVDtJQUN0RTtJQUNBLE9BQU8sZ0JBQWdCLEdBQUkwQztBQUM3QixFQUFDO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBaUJDLEdBQ00sTUFBTUMsaUJBQWlCLENBQUMzQyxLQUFLUyxHQUFHbUM7SUFDckMsTUFBTUMsSUFBSTdDLEdBQUcsQ0FBQ1MsRUFBRTtJQUNoQixJQUFJcUMsSUFBSXJDO0lBQ1IsMkJBQTJCO0lBQzNCLE1BQU9xQyxJQUFJLElBQUk5QyxJQUFJQyxNQUFNLElBQUkyQyxVQUFVQyxHQUFHN0MsR0FBRyxDQUFDOEMsSUFBSSxFQUFFLElBQUksRUFBRztRQUN6RDlDLEdBQUcsQ0FBQzhDLEVBQUUsR0FBRzlDLEdBQUcsQ0FBQzhDLElBQUksRUFBRTtRQUNuQjlDLEdBQUcsQ0FBQyxFQUFFOEMsRUFBRSxHQUFHRDtJQUNiO0lBQ0EsSUFBSXBDLE1BQU1xQyxLQUFLQSxJQUFJLEdBQUc7UUFDcEIsbUJBQW1CO1FBQ25CLE1BQU9BLElBQUksS0FBS0YsVUFBVTVDLEdBQUcsQ0FBQzhDLElBQUksRUFBRSxFQUFFRCxLQUFLLEVBQUc7WUFDNUM3QyxHQUFHLENBQUM4QyxFQUFFLEdBQUc5QyxHQUFHLENBQUM4QyxJQUFJLEVBQUU7WUFDbkI5QyxHQUFHLENBQUMsRUFBRThDLEVBQUUsR0FBR0Q7UUFDYjtJQUNGO0lBQ0EsT0FBT0M7QUFDVCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvYXJyYXkuanM/ZDU4NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgbW9kdWxlIHRvIHdvcmsgd2l0aCBBcnJheXMuXG4gKlxuICogQG1vZHVsZSBhcnJheVxuICovXG5cbmltcG9ydCAqIGFzIHNldCBmcm9tICcuL3NldC5qcydcblxuLyoqXG4gKiBSZXR1cm4gdGhlIGxhc3QgZWxlbWVudCBvZiBhbiBhcnJheS4gVGhlIGVsZW1lbnQgbXVzdCBleGlzdFxuICpcbiAqIEB0ZW1wbGF0ZSBMXG4gKiBAcGFyYW0ge0FycmF5TGlrZTxMPn0gYXJyXG4gKiBAcmV0dXJuIHtMfVxuICovXG5leHBvcnQgY29uc3QgbGFzdCA9IGFyciA9PiBhcnJbYXJyLmxlbmd0aCAtIDFdXG5cbi8qKlxuICogQHRlbXBsYXRlIENcbiAqIEByZXR1cm4ge0FycmF5PEM+fVxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKCkgPT4gLyoqIEB0eXBlIHtBcnJheTxDPn0gKi8gKFtdKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBEXG4gKiBAcGFyYW0ge0FycmF5PEQ+fSBhXG4gKiBAcmV0dXJuIHtBcnJheTxEPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNvcHkgPSBhID0+IC8qKiBAdHlwZSB7QXJyYXk8RD59ICovIChhLnNsaWNlKCkpXG5cbi8qKlxuICogQXBwZW5kIGVsZW1lbnRzIGZyb20gc3JjIHRvIGRlc3RcbiAqXG4gKiBAdGVtcGxhdGUgTVxuICogQHBhcmFtIHtBcnJheTxNPn0gZGVzdFxuICogQHBhcmFtIHtBcnJheTxNPn0gc3JjXG4gKi9cbmV4cG9ydCBjb25zdCBhcHBlbmRUbyA9IChkZXN0LCBzcmMpID0+IHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzcmMubGVuZ3RoOyBpKyspIHtcbiAgICBkZXN0LnB1c2goc3JjW2ldKVxuICB9XG59XG5cbi8qKlxuICogVHJhbnNmb3JtcyBzb21ldGhpbmcgYXJyYXktbGlrZSB0byBhbiBhY3R1YWwgQXJyYXkuXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtBcnJheUxpa2U8VD58SXRlcmFibGU8VD59IGFycmF5bGlrZVxuICogQHJldHVybiB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb20gPSBBcnJheS5mcm9tXG5cbi8qKlxuICogVHJ1ZSBpZmYgY29uZGl0aW9uIGhvbGRzIG9uIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIEFycmF5LlxuICpcbiAqIEBmdW5jdGlvblxuICogQHRlbXBsYXRlIElURU1cbiAqIEB0ZW1wbGF0ZSB7QXJyYXlMaWtlPElURU0+fSBBUlJcbiAqXG4gKiBAcGFyYW0ge0FSUn0gYXJyXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKElURU0sIG51bWJlciwgQVJSKTpib29sZWFufSBmXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgZXZlcnkgPSAoYXJyLCBmKSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFmKGFycltpXSwgaSwgYXJyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlXG59XG5cbi8qKlxuICogVHJ1ZSBpZmYgY29uZGl0aW9uIGhvbGRzIG9uIHNvbWUgZWxlbWVudCBpbiB0aGUgQXJyYXkuXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUgU1xuICogQHRlbXBsYXRlIHtBcnJheUxpa2U8Uz59IEFSUlxuICogQHBhcmFtIHtBUlJ9IGFyclxuICogQHBhcmFtIHtmdW5jdGlvbihTLCBudW1iZXIsIEFSUik6Ym9vbGVhbn0gZlxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IHNvbWUgPSAoYXJyLCBmKSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGYoYXJyW2ldLCBpLCBhcnIpKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgRUxFTVxuICpcbiAqIEBwYXJhbSB7QXJyYXlMaWtlPEVMRU0+fSBhXG4gKiBAcGFyYW0ge0FycmF5TGlrZTxFTEVNPn0gYlxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVxdWFsRmxhdCA9IChhLCBiKSA9PiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgZXZlcnkoYSwgKGl0ZW0sIGluZGV4KSA9PiBpdGVtID09PSBiW2luZGV4XSlcblxuLyoqXG4gKiBAdGVtcGxhdGUgRUxFTVxuICogQHBhcmFtIHtBcnJheTxBcnJheTxFTEVNPj59IGFyclxuICogQHJldHVybiB7QXJyYXk8RUxFTT59XG4gKi9cbmV4cG9ydCBjb25zdCBmbGF0dGVuID0gYXJyID0+IGZvbGQoYXJyLCAvKiogQHR5cGUge0FycmF5PEVMRU0+fSAqLyAoW10pLCAoYWNjLCB2YWwpID0+IGFjYy5jb25jYXQodmFsKSlcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtudW1iZXJ9IGxlblxuICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIsIEFycmF5PFQ+KTpUfSBmXG4gKiBAcmV0dXJuIHtBcnJheTxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHVuZm9sZCA9IChsZW4sIGYpID0+IHtcbiAgY29uc3QgYXJyYXkgPSBuZXcgQXJyYXkobGVuKVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyYXlbaV0gPSBmKGksIGFycmF5KVxuICB9XG4gIHJldHVybiBhcnJheVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdGVtcGxhdGUgUkVTVUxUXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBhcnJcbiAqIEBwYXJhbSB7UkVTVUxUfSBzZWVkXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFJFU1VMVCwgVCwgbnVtYmVyKTpSRVNVTFR9IGZvbGRlclxuICovXG5leHBvcnQgY29uc3QgZm9sZCA9IChhcnIsIHNlZWQsIGZvbGRlcikgPT4gYXJyLnJlZHVjZShmb2xkZXIsIHNlZWQpXG5cbmV4cG9ydCBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBhcnJcbiAqIEByZXR1cm4ge0FycmF5PFQ+fVxuICovXG5leHBvcnQgY29uc3QgdW5pcXVlID0gYXJyID0+IGZyb20oc2V0LmZyb20oYXJyKSlcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHRlbXBsYXRlIE1cbiAqIEBwYXJhbSB7QXJyYXlMaWtlPFQ+fSBhcnJcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVCk6TX0gbWFwcGVyXG4gKiBAcmV0dXJuIHtBcnJheTxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHVuaXF1ZUJ5ID0gKGFyciwgbWFwcGVyKSA9PiB7XG4gIC8qKlxuICAgKiBAdHlwZSB7U2V0PE0+fVxuICAgKi9cbiAgY29uc3QgaGFwcGVuZWQgPSBzZXQuY3JlYXRlKClcbiAgLyoqXG4gICAqIEB0eXBlIHtBcnJheTxUPn1cbiAgICovXG4gIGNvbnN0IHJlc3VsdCA9IFtdXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgZWwgPSBhcnJbaV1cbiAgICBjb25zdCBtYXBwZWQgPSBtYXBwZXIoZWwpXG4gICAgaWYgKCFoYXBwZW5lZC5oYXMobWFwcGVkKSkge1xuICAgICAgaGFwcGVuZWQuYWRkKG1hcHBlZClcbiAgICAgIHJlc3VsdC5wdXNoKGVsKVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtBcnJheUxpa2U8YW55Pn0gQVJSXG4gKiBAdGVtcGxhdGUge2Z1bmN0aW9uKEFSUiBleHRlbmRzIEFycmF5TGlrZTxpbmZlciBUPiA/IFQgOiBuZXZlciwgbnVtYmVyLCBBUlIpOmFueX0gTUFQUEVSXG4gKiBAcGFyYW0ge0FSUn0gYXJyXG4gKiBAcGFyYW0ge01BUFBFUn0gbWFwcGVyXG4gKiBAcmV0dXJuIHtBcnJheTxNQVBQRVIgZXh0ZW5kcyBmdW5jdGlvbiguLi5hbnkpOiBpbmZlciBNID8gTSA6IG5ldmVyPn1cbiAqL1xuZXhwb3J0IGNvbnN0IG1hcCA9IChhcnIsIG1hcHBlcikgPT4ge1xuICAvKipcbiAgICogQHR5cGUge0FycmF5PGFueT59XG4gICAqL1xuICBjb25zdCByZXMgPSBBcnJheShhcnIubGVuZ3RoKVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIHJlc1tpXSA9IG1hcHBlcigvKiogQHR5cGUge2FueX0gKi8gKGFycltpXSksIGksIC8qKiBAdHlwZSB7YW55fSAqLyAoYXJyKSlcbiAgfVxuICByZXR1cm4gLyoqIEB0eXBlIHthbnl9ICovIChyZXMpXG59XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBidWJibGUtc29ydHMgYSBzaW5nbGUgaXRlbSB0byB0aGUgY29ycmVjdCBwb3NpdGlvbi4gVGhlIHNvcnQgaGFwcGVucyBpbi1wbGFjZSBhbmRcbiAqIG1pZ2h0IGJlIHVzZWZ1bCB0byBlbnN1cmUgdGhhdCBhIHNpbmdsZSBpdGVtIGlzIGF0IHRoZSBjb3JyZWN0IHBvc2l0aW9uIGluIGFuIG90aGVyd2lzZSBzb3J0ZWRcbiAqIGFycmF5LlxuICpcbiAqIEBleGFtcGxlXG4gKiAgY29uc3QgYXJyID0gWzMsIDIsIDVdXG4gKiAgYXJyLnNvcnQoKGEsIGIpID0+IGEgLSBiKVxuICogIGFyciAvLyA9PiBbMiwgMywgNV1cbiAqICBhcnIuc3BsaWNlKDEsIDAsIDcpXG4gKiAgYXJyYXkuYnViYmxlU29ydEl0ZW0oYXJyLCAxLCAoYSwgYikgPT4gYSAtIGIpXG4gKiAgYXJyIC8vID0+IFsyLCAzLCA1LCA3XVxuICpcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBhcnJcbiAqIEBwYXJhbSB7bnVtYmVyfSBpXG4gKiBAcGFyYW0geyhhOlQsYjpUKSA9PiBudW1iZXJ9IGNvbXBhcmVGblxuICovXG5leHBvcnQgY29uc3QgYnViYmxlc29ydEl0ZW0gPSAoYXJyLCBpLCBjb21wYXJlRm4pID0+IHtcbiAgY29uc3QgbiA9IGFycltpXVxuICBsZXQgaiA9IGlcbiAgLy8gdHJ5IHRvIHNvcnQgdG8gdGhlIHJpZ2h0XG4gIHdoaWxlIChqICsgMSA8IGFyci5sZW5ndGggJiYgY29tcGFyZUZuKG4sIGFycltqICsgMV0pID4gMCkge1xuICAgIGFycltqXSA9IGFycltqICsgMV1cbiAgICBhcnJbKytqXSA9IG5cbiAgfVxuICBpZiAoaSA9PT0gaiAmJiBqID4gMCkgeyAvLyBubyBjaGFuZ2UgeWV0XG4gICAgLy8gc29ydCB0byB0aGUgbGVmdFxuICAgIHdoaWxlIChqID4gMCAmJiBjb21wYXJlRm4oYXJyW2ogLSAxXSwgbikgPiAwKSB7XG4gICAgICBhcnJbal0gPSBhcnJbaiAtIDFdXG4gICAgICBhcnJbLS1qXSA9IG5cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGpcbn1cbiJdLCJuYW1lcyI6WyJzZXQiLCJsYXN0IiwiYXJyIiwibGVuZ3RoIiwiY3JlYXRlIiwiY29weSIsImEiLCJzbGljZSIsImFwcGVuZFRvIiwiZGVzdCIsInNyYyIsImkiLCJwdXNoIiwiZnJvbSIsIkFycmF5IiwiZXZlcnkiLCJmIiwic29tZSIsImVxdWFsRmxhdCIsImIiLCJpdGVtIiwiaW5kZXgiLCJmbGF0dGVuIiwiZm9sZCIsImFjYyIsInZhbCIsImNvbmNhdCIsInVuZm9sZCIsImxlbiIsImFycmF5Iiwic2VlZCIsImZvbGRlciIsInJlZHVjZSIsImlzQXJyYXkiLCJ1bmlxdWUiLCJ1bmlxdWVCeSIsIm1hcHBlciIsImhhcHBlbmVkIiwicmVzdWx0IiwiZWwiLCJtYXBwZWQiLCJoYXMiLCJhZGQiLCJtYXAiLCJyZXMiLCJidWJibGVzb3J0SXRlbSIsImNvbXBhcmVGbiIsIm4iLCJqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/binary.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/binary.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BIT1: () => (/* binding */ BIT1),\n/* harmony export */   BIT10: () => (/* binding */ BIT10),\n/* harmony export */   BIT11: () => (/* binding */ BIT11),\n/* harmony export */   BIT12: () => (/* binding */ BIT12),\n/* harmony export */   BIT13: () => (/* binding */ BIT13),\n/* harmony export */   BIT14: () => (/* binding */ BIT14),\n/* harmony export */   BIT15: () => (/* binding */ BIT15),\n/* harmony export */   BIT16: () => (/* binding */ BIT16),\n/* harmony export */   BIT17: () => (/* binding */ BIT17),\n/* harmony export */   BIT18: () => (/* binding */ BIT18),\n/* harmony export */   BIT19: () => (/* binding */ BIT19),\n/* harmony export */   BIT2: () => (/* binding */ BIT2),\n/* harmony export */   BIT20: () => (/* binding */ BIT20),\n/* harmony export */   BIT21: () => (/* binding */ BIT21),\n/* harmony export */   BIT22: () => (/* binding */ BIT22),\n/* harmony export */   BIT23: () => (/* binding */ BIT23),\n/* harmony export */   BIT24: () => (/* binding */ BIT24),\n/* harmony export */   BIT25: () => (/* binding */ BIT25),\n/* harmony export */   BIT26: () => (/* binding */ BIT26),\n/* harmony export */   BIT27: () => (/* binding */ BIT27),\n/* harmony export */   BIT28: () => (/* binding */ BIT28),\n/* harmony export */   BIT29: () => (/* binding */ BIT29),\n/* harmony export */   BIT3: () => (/* binding */ BIT3),\n/* harmony export */   BIT30: () => (/* binding */ BIT30),\n/* harmony export */   BIT31: () => (/* binding */ BIT31),\n/* harmony export */   BIT32: () => (/* binding */ BIT32),\n/* harmony export */   BIT4: () => (/* binding */ BIT4),\n/* harmony export */   BIT5: () => (/* binding */ BIT5),\n/* harmony export */   BIT6: () => (/* binding */ BIT6),\n/* harmony export */   BIT7: () => (/* binding */ BIT7),\n/* harmony export */   BIT8: () => (/* binding */ BIT8),\n/* harmony export */   BIT9: () => (/* binding */ BIT9),\n/* harmony export */   BITS0: () => (/* binding */ BITS0),\n/* harmony export */   BITS1: () => (/* binding */ BITS1),\n/* harmony export */   BITS10: () => (/* binding */ BITS10),\n/* harmony export */   BITS11: () => (/* binding */ BITS11),\n/* harmony export */   BITS12: () => (/* binding */ BITS12),\n/* harmony export */   BITS13: () => (/* binding */ BITS13),\n/* harmony export */   BITS14: () => (/* binding */ BITS14),\n/* harmony export */   BITS15: () => (/* binding */ BITS15),\n/* harmony export */   BITS16: () => (/* binding */ BITS16),\n/* harmony export */   BITS17: () => (/* binding */ BITS17),\n/* harmony export */   BITS18: () => (/* binding */ BITS18),\n/* harmony export */   BITS19: () => (/* binding */ BITS19),\n/* harmony export */   BITS2: () => (/* binding */ BITS2),\n/* harmony export */   BITS20: () => (/* binding */ BITS20),\n/* harmony export */   BITS21: () => (/* binding */ BITS21),\n/* harmony export */   BITS22: () => (/* binding */ BITS22),\n/* harmony export */   BITS23: () => (/* binding */ BITS23),\n/* harmony export */   BITS24: () => (/* binding */ BITS24),\n/* harmony export */   BITS25: () => (/* binding */ BITS25),\n/* harmony export */   BITS26: () => (/* binding */ BITS26),\n/* harmony export */   BITS27: () => (/* binding */ BITS27),\n/* harmony export */   BITS28: () => (/* binding */ BITS28),\n/* harmony export */   BITS29: () => (/* binding */ BITS29),\n/* harmony export */   BITS3: () => (/* binding */ BITS3),\n/* harmony export */   BITS30: () => (/* binding */ BITS30),\n/* harmony export */   BITS31: () => (/* binding */ BITS31),\n/* harmony export */   BITS32: () => (/* binding */ BITS32),\n/* harmony export */   BITS4: () => (/* binding */ BITS4),\n/* harmony export */   BITS5: () => (/* binding */ BITS5),\n/* harmony export */   BITS6: () => (/* binding */ BITS6),\n/* harmony export */   BITS7: () => (/* binding */ BITS7),\n/* harmony export */   BITS8: () => (/* binding */ BITS8),\n/* harmony export */   BITS9: () => (/* binding */ BITS9)\n/* harmony export */ });\n/* eslint-env browser */ /**\n * Binary data constants.\n *\n * @module binary\n */ /**\n * n-th bit activated.\n *\n * @type {number}\n */ const BIT1 = 1;\nconst BIT2 = 2;\nconst BIT3 = 4;\nconst BIT4 = 8;\nconst BIT5 = 16;\nconst BIT6 = 32;\nconst BIT7 = 64;\nconst BIT8 = 128;\nconst BIT9 = 256;\nconst BIT10 = 512;\nconst BIT11 = 1024;\nconst BIT12 = 2048;\nconst BIT13 = 4096;\nconst BIT14 = 8192;\nconst BIT15 = 16384;\nconst BIT16 = 32768;\nconst BIT17 = 65536;\nconst BIT18 = 1 << 17;\nconst BIT19 = 1 << 18;\nconst BIT20 = 1 << 19;\nconst BIT21 = 1 << 20;\nconst BIT22 = 1 << 21;\nconst BIT23 = 1 << 22;\nconst BIT24 = 1 << 23;\nconst BIT25 = 1 << 24;\nconst BIT26 = 1 << 25;\nconst BIT27 = 1 << 26;\nconst BIT28 = 1 << 27;\nconst BIT29 = 1 << 28;\nconst BIT30 = 1 << 29;\nconst BIT31 = 1 << 30;\nconst BIT32 = 1 << 31;\n/**\n * First n bits activated.\n *\n * @type {number}\n */ const BITS0 = 0;\nconst BITS1 = 1;\nconst BITS2 = 3;\nconst BITS3 = 7;\nconst BITS4 = 15;\nconst BITS5 = 31;\nconst BITS6 = 63;\nconst BITS7 = 127;\nconst BITS8 = 255;\nconst BITS9 = 511;\nconst BITS10 = 1023;\nconst BITS11 = 2047;\nconst BITS12 = 4095;\nconst BITS13 = 8191;\nconst BITS14 = 16383;\nconst BITS15 = 32767;\nconst BITS16 = 65535;\nconst BITS17 = BIT18 - 1;\nconst BITS18 = BIT19 - 1;\nconst BITS19 = BIT20 - 1;\nconst BITS20 = BIT21 - 1;\nconst BITS21 = BIT22 - 1;\nconst BITS22 = BIT23 - 1;\nconst BITS23 = BIT24 - 1;\nconst BITS24 = BIT25 - 1;\nconst BITS25 = BIT26 - 1;\nconst BITS26 = BIT27 - 1;\nconst BITS27 = BIT28 - 1;\nconst BITS28 = BIT29 - 1;\nconst BITS29 = BIT30 - 1;\nconst BITS30 = BIT31 - 1;\n/**\n * @type {number}\n */ const BITS31 = 0x7FFFFFFF;\n/**\n * @type {number}\n */ const BITS32 = 0xFFFFFFFF;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9iaW5hcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzQkFBc0IsR0FFdEI7Ozs7Q0FJQyxHQUVEOzs7O0NBSUMsR0FDTSxNQUFNQSxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEdBQUU7QUFDZixNQUFNQyxPQUFPLEdBQUU7QUFDZixNQUFNQyxPQUFPLEdBQUU7QUFDZixNQUFNQyxPQUFPLElBQUc7QUFDaEIsTUFBTUMsT0FBTyxJQUFHO0FBQ2hCLE1BQU1DLFFBQVEsSUFBRztBQUNqQixNQUFNQyxRQUFRLEtBQUk7QUFDbEIsTUFBTUMsUUFBUSxLQUFJO0FBQ2xCLE1BQU1DLFFBQVEsS0FBSTtBQUNsQixNQUFNQyxRQUFRLEtBQUk7QUFDbEIsTUFBTUMsUUFBUSxNQUFLO0FBQ25CLE1BQU1DLFFBQVEsTUFBSztBQUNuQixNQUFNQyxRQUFRLE1BQUs7QUFDbkIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFFNUI7Ozs7Q0FJQyxHQUNNLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsR0FBRTtBQUNoQixNQUFNQyxRQUFRLEdBQUU7QUFDaEIsTUFBTUMsUUFBUSxHQUFFO0FBQ2hCLE1BQU1DLFFBQVEsSUFBRztBQUNqQixNQUFNQyxRQUFRLElBQUc7QUFDakIsTUFBTUMsUUFBUSxJQUFHO0FBQ2pCLE1BQU1DLFNBQVMsS0FBSTtBQUNuQixNQUFNQyxTQUFTLEtBQUk7QUFDbkIsTUFBTUMsU0FBUyxLQUFJO0FBQ25CLE1BQU1DLFNBQVMsS0FBSTtBQUNuQixNQUFNQyxTQUFTLE1BQUs7QUFDcEIsTUFBTUMsU0FBUyxNQUFLO0FBQ3BCLE1BQU1DLFNBQVMsTUFBSztBQUNwQixNQUFNQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQy9COztDQUVDLEdBQ00sTUFBTWlDLFNBQVMsV0FBVTtBQUNoQzs7Q0FFQyxHQUNNLE1BQU1DLFNBQVMsV0FBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bmNkcmF3LWNsaWVudC8uL25vZGVfbW9kdWxlcy9saWIwL2JpbmFyeS5qcz9kMTkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuXG4vKipcbiAqIEJpbmFyeSBkYXRhIGNvbnN0YW50cy5cbiAqXG4gKiBAbW9kdWxlIGJpbmFyeVxuICovXG5cbi8qKlxuICogbi10aCBiaXQgYWN0aXZhdGVkLlxuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBCSVQxID0gMVxuZXhwb3J0IGNvbnN0IEJJVDIgPSAyXG5leHBvcnQgY29uc3QgQklUMyA9IDRcbmV4cG9ydCBjb25zdCBCSVQ0ID0gOFxuZXhwb3J0IGNvbnN0IEJJVDUgPSAxNlxuZXhwb3J0IGNvbnN0IEJJVDYgPSAzMlxuZXhwb3J0IGNvbnN0IEJJVDcgPSA2NFxuZXhwb3J0IGNvbnN0IEJJVDggPSAxMjhcbmV4cG9ydCBjb25zdCBCSVQ5ID0gMjU2XG5leHBvcnQgY29uc3QgQklUMTAgPSA1MTJcbmV4cG9ydCBjb25zdCBCSVQxMSA9IDEwMjRcbmV4cG9ydCBjb25zdCBCSVQxMiA9IDIwNDhcbmV4cG9ydCBjb25zdCBCSVQxMyA9IDQwOTZcbmV4cG9ydCBjb25zdCBCSVQxNCA9IDgxOTJcbmV4cG9ydCBjb25zdCBCSVQxNSA9IDE2Mzg0XG5leHBvcnQgY29uc3QgQklUMTYgPSAzMjc2OFxuZXhwb3J0IGNvbnN0IEJJVDE3ID0gNjU1MzZcbmV4cG9ydCBjb25zdCBCSVQxOCA9IDEgPDwgMTdcbmV4cG9ydCBjb25zdCBCSVQxOSA9IDEgPDwgMThcbmV4cG9ydCBjb25zdCBCSVQyMCA9IDEgPDwgMTlcbmV4cG9ydCBjb25zdCBCSVQyMSA9IDEgPDwgMjBcbmV4cG9ydCBjb25zdCBCSVQyMiA9IDEgPDwgMjFcbmV4cG9ydCBjb25zdCBCSVQyMyA9IDEgPDwgMjJcbmV4cG9ydCBjb25zdCBCSVQyNCA9IDEgPDwgMjNcbmV4cG9ydCBjb25zdCBCSVQyNSA9IDEgPDwgMjRcbmV4cG9ydCBjb25zdCBCSVQyNiA9IDEgPDwgMjVcbmV4cG9ydCBjb25zdCBCSVQyNyA9IDEgPDwgMjZcbmV4cG9ydCBjb25zdCBCSVQyOCA9IDEgPDwgMjdcbmV4cG9ydCBjb25zdCBCSVQyOSA9IDEgPDwgMjhcbmV4cG9ydCBjb25zdCBCSVQzMCA9IDEgPDwgMjlcbmV4cG9ydCBjb25zdCBCSVQzMSA9IDEgPDwgMzBcbmV4cG9ydCBjb25zdCBCSVQzMiA9IDEgPDwgMzFcblxuLyoqXG4gKiBGaXJzdCBuIGJpdHMgYWN0aXZhdGVkLlxuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBCSVRTMCA9IDBcbmV4cG9ydCBjb25zdCBCSVRTMSA9IDFcbmV4cG9ydCBjb25zdCBCSVRTMiA9IDNcbmV4cG9ydCBjb25zdCBCSVRTMyA9IDdcbmV4cG9ydCBjb25zdCBCSVRTNCA9IDE1XG5leHBvcnQgY29uc3QgQklUUzUgPSAzMVxuZXhwb3J0IGNvbnN0IEJJVFM2ID0gNjNcbmV4cG9ydCBjb25zdCBCSVRTNyA9IDEyN1xuZXhwb3J0IGNvbnN0IEJJVFM4ID0gMjU1XG5leHBvcnQgY29uc3QgQklUUzkgPSA1MTFcbmV4cG9ydCBjb25zdCBCSVRTMTAgPSAxMDIzXG5leHBvcnQgY29uc3QgQklUUzExID0gMjA0N1xuZXhwb3J0IGNvbnN0IEJJVFMxMiA9IDQwOTVcbmV4cG9ydCBjb25zdCBCSVRTMTMgPSA4MTkxXG5leHBvcnQgY29uc3QgQklUUzE0ID0gMTYzODNcbmV4cG9ydCBjb25zdCBCSVRTMTUgPSAzMjc2N1xuZXhwb3J0IGNvbnN0IEJJVFMxNiA9IDY1NTM1XG5leHBvcnQgY29uc3QgQklUUzE3ID0gQklUMTggLSAxXG5leHBvcnQgY29uc3QgQklUUzE4ID0gQklUMTkgLSAxXG5leHBvcnQgY29uc3QgQklUUzE5ID0gQklUMjAgLSAxXG5leHBvcnQgY29uc3QgQklUUzIwID0gQklUMjEgLSAxXG5leHBvcnQgY29uc3QgQklUUzIxID0gQklUMjIgLSAxXG5leHBvcnQgY29uc3QgQklUUzIyID0gQklUMjMgLSAxXG5leHBvcnQgY29uc3QgQklUUzIzID0gQklUMjQgLSAxXG5leHBvcnQgY29uc3QgQklUUzI0ID0gQklUMjUgLSAxXG5leHBvcnQgY29uc3QgQklUUzI1ID0gQklUMjYgLSAxXG5leHBvcnQgY29uc3QgQklUUzI2ID0gQklUMjcgLSAxXG5leHBvcnQgY29uc3QgQklUUzI3ID0gQklUMjggLSAxXG5leHBvcnQgY29uc3QgQklUUzI4ID0gQklUMjkgLSAxXG5leHBvcnQgY29uc3QgQklUUzI5ID0gQklUMzAgLSAxXG5leHBvcnQgY29uc3QgQklUUzMwID0gQklUMzEgLSAxXG4vKipcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBCSVRTMzEgPSAweDdGRkZGRkZGXG4vKipcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBCSVRTMzIgPSAweEZGRkZGRkZGXG4iXSwibmFtZXMiOlsiQklUMSIsIkJJVDIiLCJCSVQzIiwiQklUNCIsIkJJVDUiLCJCSVQ2IiwiQklUNyIsIkJJVDgiLCJCSVQ5IiwiQklUMTAiLCJCSVQxMSIsIkJJVDEyIiwiQklUMTMiLCJCSVQxNCIsIkJJVDE1IiwiQklUMTYiLCJCSVQxNyIsIkJJVDE4IiwiQklUMTkiLCJCSVQyMCIsIkJJVDIxIiwiQklUMjIiLCJCSVQyMyIsIkJJVDI0IiwiQklUMjUiLCJCSVQyNiIsIkJJVDI3IiwiQklUMjgiLCJCSVQyOSIsIkJJVDMwIiwiQklUMzEiLCJCSVQzMiIsIkJJVFMwIiwiQklUUzEiLCJCSVRTMiIsIkJJVFMzIiwiQklUUzQiLCJCSVRTNSIsIkJJVFM2IiwiQklUUzciLCJCSVRTOCIsIkJJVFM5IiwiQklUUzEwIiwiQklUUzExIiwiQklUUzEyIiwiQklUUzEzIiwiQklUUzE0IiwiQklUUzE1IiwiQklUUzE2IiwiQklUUzE3IiwiQklUUzE4IiwiQklUUzE5IiwiQklUUzIwIiwiQklUUzIxIiwiQklUUzIyIiwiQklUUzIzIiwiQklUUzI0IiwiQklUUzI1IiwiQklUUzI2IiwiQklUUzI3IiwiQklUUzI4IiwiQklUUzI5IiwiQklUUzMwIiwiQklUUzMxIiwiQklUUzMyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/binary.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/broadcastchannel.js":
/*!***********************************************!*\
  !*** ./node_modules/lib0/broadcastchannel.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   publish: () => (/* binding */ publish),\n/* harmony export */   subscribe: () => (/* binding */ subscribe),\n/* harmony export */   unsubscribe: () => (/* binding */ unsubscribe)\n/* harmony export */ });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map.js */ \"(ssr)/./node_modules/lib0/map.js\");\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./set.js */ \"(ssr)/./node_modules/lib0/set.js\");\n/* harmony import */ var _buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer.js */ \"(ssr)/./node_modules/lib0/buffer.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage.js */ \"(ssr)/./node_modules/lib0/storage.js\");\n/* eslint-env browser */ /**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */ // @todo before next major: use Uint8Array instead as buffer object\n\n\n\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */ /**\n * @type {Map<string, Channel>}\n */ const channels = new Map();\n/* c8 ignore start */ class LocalStoragePolyfill {\n    /**\n   * @param {string} room\n   */ constructor(room){\n        this.room = room;\n        /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */ this.onmessage = null;\n        /**\n     * @param {any} e\n     */ this._onChange = (e)=>e.key === room && this.onmessage !== null && this.onmessage({\n                data: _buffer_js__WEBPACK_IMPORTED_MODULE_0__.fromBase64(e.newValue || \"\")\n            });\n        _storage_js__WEBPACK_IMPORTED_MODULE_1__.onChange(this._onChange);\n    }\n    /**\n   * @param {ArrayBuffer} buf\n   */ postMessage(buf) {\n        _storage_js__WEBPACK_IMPORTED_MODULE_1__.varStorage.setItem(this.room, _buffer_js__WEBPACK_IMPORTED_MODULE_0__.toBase64(_buffer_js__WEBPACK_IMPORTED_MODULE_0__.createUint8ArrayFromArrayBuffer(buf)));\n    }\n    close() {\n        _storage_js__WEBPACK_IMPORTED_MODULE_1__.offChange(this._onChange);\n    }\n}\n/* c8 ignore stop */ // Use BroadcastChannel or Polyfill\n/* c8 ignore next */ const BC = typeof BroadcastChannel === \"undefined\" ? LocalStoragePolyfill : BroadcastChannel;\n/**\n * @param {string} room\n * @return {Channel}\n */ const getChannel = (room)=>_map_js__WEBPACK_IMPORTED_MODULE_2__.setIfUndefined(channels, room, ()=>{\n        const subs = _set_js__WEBPACK_IMPORTED_MODULE_3__.create();\n        const bc = new BC(room);\n        /**\n     * @param {{data:ArrayBuffer}} e\n     */ /* c8 ignore next */ bc.onmessage = (e)=>subs.forEach((sub)=>sub(e.data, \"broadcastchannel\"));\n        return {\n            bc,\n            subs\n        };\n    });\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */ const subscribe = (room, f)=>{\n    getChannel(room).subs.add(f);\n    return f;\n};\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */ const unsubscribe = (room, f)=>{\n    const channel = getChannel(room);\n    const unsubscribed = channel.subs.delete(f);\n    if (unsubscribed && channel.subs.size === 0) {\n        channel.bc.close();\n        channels.delete(room);\n    }\n    return unsubscribed;\n};\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */ const publish = (room, data, origin = null)=>{\n    const c = getChannel(room);\n    c.bc.postMessage(data);\n    c.subs.forEach((sub)=>sub(data, origin));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9icm9hZGNhc3RjaGFubmVsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzQkFBc0IsR0FFdEI7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUVELG1FQUFtRTtBQUVwQztBQUNBO0FBQ007QUFDRTtBQUV2Qzs7OztDQUlDLEdBRUQ7O0NBRUMsR0FDRCxNQUFNSSxXQUFXLElBQUlDO0FBRXJCLG1CQUFtQixHQUNuQixNQUFNQztJQUNKOztHQUVDLEdBQ0RDLFlBQWFDLElBQUksQ0FBRTtRQUNqQixJQUFJLENBQUNBLElBQUksR0FBR0E7UUFDWjs7S0FFQyxHQUNELElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCOztLQUVDLEdBQ0QsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLENBQUFBLElBQUtBLEVBQUVDLEdBQUcsS0FBS0osUUFBUSxJQUFJLENBQUNDLFNBQVMsS0FBSyxRQUFRLElBQUksQ0FBQ0EsU0FBUyxDQUFDO2dCQUFFSSxNQUFNWCxrREFBaUIsQ0FBQ1MsRUFBRUksUUFBUSxJQUFJO1lBQUk7UUFDOUhaLGlEQUFnQixDQUFDLElBQUksQ0FBQ08sU0FBUztJQUNqQztJQUVBOztHQUVDLEdBQ0RPLFlBQWFDLEdBQUcsRUFBRTtRQUNoQmYsbURBQWtCLENBQUNpQixPQUFPLENBQUMsSUFBSSxDQUFDWixJQUFJLEVBQUVOLGdEQUFlLENBQUNBLHVFQUFzQyxDQUFDZ0I7SUFDL0Y7SUFFQUssUUFBUztRQUNQcEIsa0RBQWlCLENBQUMsSUFBSSxDQUFDTyxTQUFTO0lBQ2xDO0FBQ0Y7QUFDQSxrQkFBa0IsR0FFbEIsbUNBQW1DO0FBQ25DLGtCQUFrQixHQUNsQixNQUFNZSxLQUFLLE9BQU9DLHFCQUFxQixjQUFjcEIsdUJBQXVCb0I7QUFFNUU7OztDQUdDLEdBQ0QsTUFBTUMsYUFBYW5CLENBQUFBLE9BQ2pCUixtREFBa0IsQ0FBQ0ksVUFBVUksTUFBTTtRQUNqQyxNQUFNcUIsT0FBTzVCLDJDQUFVO1FBQ3ZCLE1BQU04QixLQUFLLElBQUlOLEdBQUdqQjtRQUNsQjs7S0FFQyxHQUNELGtCQUFrQixHQUNsQnVCLEdBQUd0QixTQUFTLEdBQUdFLENBQUFBLElBQUtrQixLQUFLRyxPQUFPLENBQUNDLENBQUFBLE1BQU9BLElBQUl0QixFQUFFRSxJQUFJLEVBQUU7UUFDcEQsT0FBTztZQUNMa0I7WUFBSUY7UUFDTjtJQUNGO0FBRUY7Ozs7OztDQU1DLEdBQ00sTUFBTUssWUFBWSxDQUFDMUIsTUFBTTJCO0lBQzlCUixXQUFXbkIsTUFBTXFCLElBQUksQ0FBQ08sR0FBRyxDQUFDRDtJQUMxQixPQUFPQTtBQUNULEVBQUM7QUFFRDs7Ozs7O0NBTUMsR0FDTSxNQUFNRSxjQUFjLENBQUM3QixNQUFNMkI7SUFDaEMsTUFBTUcsVUFBVVgsV0FBV25CO0lBQzNCLE1BQU0rQixlQUFlRCxRQUFRVCxJQUFJLENBQUNXLE1BQU0sQ0FBQ0w7SUFDekMsSUFBSUksZ0JBQWdCRCxRQUFRVCxJQUFJLENBQUNZLElBQUksS0FBSyxHQUFHO1FBQzNDSCxRQUFRUCxFQUFFLENBQUNSLEtBQUs7UUFDaEJuQixTQUFTb0MsTUFBTSxDQUFDaEM7SUFDbEI7SUFDQSxPQUFPK0I7QUFDVCxFQUFDO0FBRUQ7Ozs7Ozs7Q0FPQyxHQUNNLE1BQU1HLFVBQVUsQ0FBQ2xDLE1BQU1LLE1BQU04QixTQUFTLElBQUk7SUFDL0MsTUFBTUMsSUFBSWpCLFdBQVduQjtJQUNyQm9DLEVBQUViLEVBQUUsQ0FBQ2QsV0FBVyxDQUFDSjtJQUNqQitCLEVBQUVmLElBQUksQ0FBQ0csT0FBTyxDQUFDQyxDQUFBQSxNQUFPQSxJQUFJcEIsTUFBTThCO0FBQ2xDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC9icm9hZGNhc3RjaGFubmVsLmpzP2U1ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBicm93c2VyICovXG5cbi8qKlxuICogSGVscGVycyBmb3IgY3Jvc3MtdGFiIGNvbW11bmljYXRpb24gdXNpbmcgYnJvYWRjYXN0Y2hhbm5lbCB3aXRoIExvY2FsU3RvcmFnZSBmYWxsYmFjay5cbiAqXG4gKiBgYGBqc1xuICogLy8gSW4gYnJvd3NlciB3aW5kb3cgQTpcbiAqIGJyb2FkY2FzdGNoYW5uZWwuc3Vic2NyaWJlKCdteSBldmVudHMnLCBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuICogYnJvYWRjYXN0Y2hhbm5lbC5wdWJsaXNoKCdteSBldmVudHMnLCAnSGVsbG8gd29ybGQhJykgLy8gPT4gQTogJ0hlbGxvIHdvcmxkIScgZmlyZXMgc3luY2hyb25vdXNseSBpbiBzYW1lIHRhYlxuICpcbiAqIC8vIEluIGJyb3dzZXIgd2luZG93IEI6XG4gKiBicm9hZGNhc3RjaGFubmVsLnB1Ymxpc2goJ215IGV2ZW50cycsICdoZWxsbyBmcm9tIHRhYiBCJykgLy8gPT4gQTogJ2hlbGxvIGZyb20gdGFiIEInXG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlIGJyb2FkY2FzdGNoYW5uZWxcbiAqL1xuXG4vLyBAdG9kbyBiZWZvcmUgbmV4dCBtYWpvcjogdXNlIFVpbnQ4QXJyYXkgaW5zdGVhZCBhcyBidWZmZXIgb2JqZWN0XG5cbmltcG9ydCAqIGFzIG1hcCBmcm9tICcuL21hcC5qcydcbmltcG9ydCAqIGFzIHNldCBmcm9tICcuL3NldC5qcydcbmltcG9ydCAqIGFzIGJ1ZmZlciBmcm9tICcuL2J1ZmZlci5qcydcbmltcG9ydCAqIGFzIHN0b3JhZ2UgZnJvbSAnLi9zdG9yYWdlLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IENoYW5uZWxcbiAqIEBwcm9wZXJ0eSB7U2V0PGZ1bmN0aW9uKGFueSwgYW55KTphbnk+fSBDaGFubmVsLnN1YnNcbiAqIEBwcm9wZXJ0eSB7YW55fSBDaGFubmVsLmJjXG4gKi9cblxuLyoqXG4gKiBAdHlwZSB7TWFwPHN0cmluZywgQ2hhbm5lbD59XG4gKi9cbmNvbnN0IGNoYW5uZWxzID0gbmV3IE1hcCgpXG5cbi8qIGM4IGlnbm9yZSBzdGFydCAqL1xuY2xhc3MgTG9jYWxTdG9yYWdlUG9seWZpbGwge1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJvb21cbiAgICovXG4gIGNvbnN0cnVjdG9yIChyb29tKSB7XG4gICAgdGhpcy5yb29tID0gcm9vbVxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtudWxsfGZ1bmN0aW9uKHtkYXRhOkFycmF5QnVmZmVyfSk6dm9pZH1cbiAgICAgKi9cbiAgICB0aGlzLm9ubWVzc2FnZSA9IG51bGxcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge2FueX0gZVxuICAgICAqL1xuICAgIHRoaXMuX29uQ2hhbmdlID0gZSA9PiBlLmtleSA9PT0gcm9vbSAmJiB0aGlzLm9ubWVzc2FnZSAhPT0gbnVsbCAmJiB0aGlzLm9ubWVzc2FnZSh7IGRhdGE6IGJ1ZmZlci5mcm9tQmFzZTY0KGUubmV3VmFsdWUgfHwgJycpIH0pXG4gICAgc3RvcmFnZS5vbkNoYW5nZSh0aGlzLl9vbkNoYW5nZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0FycmF5QnVmZmVyfSBidWZcbiAgICovXG4gIHBvc3RNZXNzYWdlIChidWYpIHtcbiAgICBzdG9yYWdlLnZhclN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnJvb20sIGJ1ZmZlci50b0Jhc2U2NChidWZmZXIuY3JlYXRlVWludDhBcnJheUZyb21BcnJheUJ1ZmZlcihidWYpKSlcbiAgfVxuXG4gIGNsb3NlICgpIHtcbiAgICBzdG9yYWdlLm9mZkNoYW5nZSh0aGlzLl9vbkNoYW5nZSlcbiAgfVxufVxuLyogYzggaWdub3JlIHN0b3AgKi9cblxuLy8gVXNlIEJyb2FkY2FzdENoYW5uZWwgb3IgUG9seWZpbGxcbi8qIGM4IGlnbm9yZSBuZXh0ICovXG5jb25zdCBCQyA9IHR5cGVvZiBCcm9hZGNhc3RDaGFubmVsID09PSAndW5kZWZpbmVkJyA/IExvY2FsU3RvcmFnZVBvbHlmaWxsIDogQnJvYWRjYXN0Q2hhbm5lbFxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSByb29tXG4gKiBAcmV0dXJuIHtDaGFubmVsfVxuICovXG5jb25zdCBnZXRDaGFubmVsID0gcm9vbSA9PlxuICBtYXAuc2V0SWZVbmRlZmluZWQoY2hhbm5lbHMsIHJvb20sICgpID0+IHtcbiAgICBjb25zdCBzdWJzID0gc2V0LmNyZWF0ZSgpXG4gICAgY29uc3QgYmMgPSBuZXcgQkMocm9vbSlcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3tkYXRhOkFycmF5QnVmZmVyfX0gZVxuICAgICAqL1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgYmMub25tZXNzYWdlID0gZSA9PiBzdWJzLmZvckVhY2goc3ViID0+IHN1YihlLmRhdGEsICdicm9hZGNhc3RjaGFubmVsJykpXG4gICAgcmV0dXJuIHtcbiAgICAgIGJjLCBzdWJzXG4gICAgfVxuICB9KVxuXG4vKipcbiAqIFN1YnNjcmliZSB0byBnbG9iYWwgYHB1Ymxpc2hgIGV2ZW50cy5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSByb29tXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKGFueSwgYW55KTphbnl9IGZcbiAqL1xuZXhwb3J0IGNvbnN0IHN1YnNjcmliZSA9IChyb29tLCBmKSA9PiB7XG4gIGdldENoYW5uZWwocm9vbSkuc3Vicy5hZGQoZilcbiAgcmV0dXJuIGZcbn1cblxuLyoqXG4gKiBVbnN1YnNjcmliZSBmcm9tIGBwdWJsaXNoYCBnbG9iYWwgZXZlbnRzLlxuICpcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IHJvb21cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oYW55LCBhbnkpOmFueX0gZlxuICovXG5leHBvcnQgY29uc3QgdW5zdWJzY3JpYmUgPSAocm9vbSwgZikgPT4ge1xuICBjb25zdCBjaGFubmVsID0gZ2V0Q2hhbm5lbChyb29tKVxuICBjb25zdCB1bnN1YnNjcmliZWQgPSBjaGFubmVsLnN1YnMuZGVsZXRlKGYpXG4gIGlmICh1bnN1YnNjcmliZWQgJiYgY2hhbm5lbC5zdWJzLnNpemUgPT09IDApIHtcbiAgICBjaGFubmVsLmJjLmNsb3NlKClcbiAgICBjaGFubmVscy5kZWxldGUocm9vbSlcbiAgfVxuICByZXR1cm4gdW5zdWJzY3JpYmVkXG59XG5cbi8qKlxuICogUHVibGlzaCBkYXRhIHRvIGFsbCBzdWJzY3JpYmVycyAoaW5jbHVkaW5nIHN1YnNjcmliZXJzIG9uIHRoaXMgdGFiKVxuICpcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IHJvb21cbiAqIEBwYXJhbSB7YW55fSBkYXRhXG4gKiBAcGFyYW0ge2FueX0gW29yaWdpbl1cbiAqL1xuZXhwb3J0IGNvbnN0IHB1Ymxpc2ggPSAocm9vbSwgZGF0YSwgb3JpZ2luID0gbnVsbCkgPT4ge1xuICBjb25zdCBjID0gZ2V0Q2hhbm5lbChyb29tKVxuICBjLmJjLnBvc3RNZXNzYWdlKGRhdGEpXG4gIGMuc3Vicy5mb3JFYWNoKHN1YiA9PiBzdWIoZGF0YSwgb3JpZ2luKSlcbn1cbiJdLCJuYW1lcyI6WyJtYXAiLCJzZXQiLCJidWZmZXIiLCJzdG9yYWdlIiwiY2hhbm5lbHMiLCJNYXAiLCJMb2NhbFN0b3JhZ2VQb2x5ZmlsbCIsImNvbnN0cnVjdG9yIiwicm9vbSIsIm9ubWVzc2FnZSIsIl9vbkNoYW5nZSIsImUiLCJrZXkiLCJkYXRhIiwiZnJvbUJhc2U2NCIsIm5ld1ZhbHVlIiwib25DaGFuZ2UiLCJwb3N0TWVzc2FnZSIsImJ1ZiIsInZhclN0b3JhZ2UiLCJzZXRJdGVtIiwidG9CYXNlNjQiLCJjcmVhdGVVaW50OEFycmF5RnJvbUFycmF5QnVmZmVyIiwiY2xvc2UiLCJvZmZDaGFuZ2UiLCJCQyIsIkJyb2FkY2FzdENoYW5uZWwiLCJnZXRDaGFubmVsIiwic2V0SWZVbmRlZmluZWQiLCJzdWJzIiwiY3JlYXRlIiwiYmMiLCJmb3JFYWNoIiwic3ViIiwic3Vic2NyaWJlIiwiZiIsImFkZCIsInVuc3Vic2NyaWJlIiwiY2hhbm5lbCIsInVuc3Vic2NyaWJlZCIsImRlbGV0ZSIsInNpemUiLCJwdWJsaXNoIiwib3JpZ2luIiwiYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/broadcastchannel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/buffer.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/buffer.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copyUint8Array: () => (/* binding */ copyUint8Array),\n/* harmony export */   createUint8ArrayFromArrayBuffer: () => (/* binding */ createUint8ArrayFromArrayBuffer),\n/* harmony export */   createUint8ArrayFromLen: () => (/* binding */ createUint8ArrayFromLen),\n/* harmony export */   createUint8ArrayViewFromArrayBuffer: () => (/* binding */ createUint8ArrayViewFromArrayBuffer),\n/* harmony export */   decodeAny: () => (/* binding */ decodeAny),\n/* harmony export */   encodeAny: () => (/* binding */ encodeAny),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   fromBase64UrlEncoded: () => (/* binding */ fromBase64UrlEncoded),\n/* harmony export */   fromHexString: () => (/* binding */ fromHexString),\n/* harmony export */   shiftNBitsLeft: () => (/* binding */ shiftNBitsLeft),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toBase64UrlEncoded: () => (/* binding */ toBase64UrlEncoded),\n/* harmony export */   toHexString: () => (/* binding */ toHexString)\n/* harmony export */ });\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment.js */ \"(ssr)/./node_modules/lib0/environment.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/lib0/encoding.js\");\n/* harmony import */ var _decoding_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decoding.js */ \"(ssr)/./node_modules/lib0/decoding.js\");\n/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */ \n\n\n\n\n\n/**\n * @param {number} len\n */ const createUint8ArrayFromLen = (len)=>new Uint8Array(len);\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */ const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length)=>new Uint8Array(buffer, byteOffset, length);\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */ const createUint8ArrayFromArrayBuffer = (buffer)=>new Uint8Array(buffer);\n/* c8 ignore start */ /**\n * @param {Uint8Array} bytes\n * @return {string}\n */ const toBase64Browser = (bytes)=>{\n    let s = \"\";\n    for(let i = 0; i < bytes.byteLength; i++){\n        s += _string_js__WEBPACK_IMPORTED_MODULE_0__.fromCharCode(bytes[i]);\n    }\n    // eslint-disable-next-line no-undef\n    return btoa(s);\n};\n/* c8 ignore stop */ /**\n * @param {Uint8Array} bytes\n * @return {string}\n */ const toBase64Node = (bytes)=>Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString(\"base64\");\n/* c8 ignore start */ /**\n * @param {string} s\n * @return {Uint8Array}\n */ const fromBase64Browser = (s)=>{\n    // eslint-disable-next-line no-undef\n    const a = atob(s);\n    const bytes = createUint8ArrayFromLen(a.length);\n    for(let i = 0; i < a.length; i++){\n        bytes[i] = a.charCodeAt(i);\n    }\n    return bytes;\n};\n/* c8 ignore stop */ /**\n * @param {string} s\n */ const fromBase64Node = (s)=>{\n    const buf = Buffer.from(s, \"base64\");\n    return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength);\n};\n/* c8 ignore next */ const toBase64 = _environment_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser ? toBase64Browser : toBase64Node;\n/* c8 ignore next */ const fromBase64 = _environment_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser ? fromBase64Browser : fromBase64Node;\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */ const toBase64UrlEncoded = (buf)=>toBase64(buf).replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\").replaceAll(\"=\", \"\");\n/**\n * @param {string} base64\n */ const fromBase64UrlEncoded = (base64)=>fromBase64(base64.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\"));\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */ const toHexString = (buf)=>_array_js__WEBPACK_IMPORTED_MODULE_2__.map(buf, (b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */ const fromHexString = (hex)=>{\n    const hlen = hex.length;\n    const buf = new Uint8Array(_math_js__WEBPACK_IMPORTED_MODULE_3__.ceil(hlen / 2));\n    for(let i = 0; i < hlen; i += 2){\n        buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16);\n    }\n    return buf;\n};\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */ const copyUint8Array = (uint8Array)=>{\n    const newBuf = createUint8ArrayFromLen(uint8Array.byteLength);\n    newBuf.set(uint8Array);\n    return newBuf;\n};\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */ const encodeAny = (data)=>_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encode((encoder)=>_encoding_js__WEBPACK_IMPORTED_MODULE_4__.writeAny(encoder, data));\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */ const decodeAny = (buf)=>_decoding_js__WEBPACK_IMPORTED_MODULE_5__.readAny(_decoding_js__WEBPACK_IMPORTED_MODULE_5__.createDecoder(buf));\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */ const shiftNBitsLeft = (bs, N)=>{\n    if (N === 0) return bs;\n    bs = new Uint8Array(bs);\n    bs[0] <<= N;\n    for(let i = 1; i < bs.length; i++){\n        bs[i - 1] |= bs[i] >>> 8 - N;\n        bs[i] <<= N;\n    }\n    return bs;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/conditions.js":
/*!*****************************************!*\
  !*** ./node_modules/lib0/conditions.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   undefinedToNull: () => (/* binding */ undefinedToNull)\n/* harmony export */ });\n/**\n * Often used conditions.\n *\n * @module conditions\n */ /**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */ /* c8 ignore next */ const undefinedToNull = (v)=>v === undefined ? null : v;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9jb25kaXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Q0FJQyxHQUNELGtCQUFrQixHQUNYLE1BQU1BLGtCQUFrQkMsQ0FBQUEsSUFBS0EsTUFBTUMsWUFBWSxPQUFPRCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvY29uZGl0aW9ucy5qcz80OTNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogT2Z0ZW4gdXNlZCBjb25kaXRpb25zLlxuICpcbiAqIEBtb2R1bGUgY29uZGl0aW9uc1xuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7VHxudWxsfHVuZGVmaW5lZH0gdlxuICogQHJldHVybiB7VHxudWxsfVxuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNvbnN0IHVuZGVmaW5lZFRvTnVsbCA9IHYgPT4gdiA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IHZcbiJdLCJuYW1lcyI6WyJ1bmRlZmluZWRUb051bGwiLCJ2IiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/conditions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/decoding.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/decoding.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decoder: () => (/* binding */ Decoder),\n/* harmony export */   IncUintOptRleDecoder: () => (/* binding */ IncUintOptRleDecoder),\n/* harmony export */   IntDiffDecoder: () => (/* binding */ IntDiffDecoder),\n/* harmony export */   IntDiffOptRleDecoder: () => (/* binding */ IntDiffOptRleDecoder),\n/* harmony export */   RleDecoder: () => (/* binding */ RleDecoder),\n/* harmony export */   RleIntDiffDecoder: () => (/* binding */ RleIntDiffDecoder),\n/* harmony export */   StringDecoder: () => (/* binding */ StringDecoder),\n/* harmony export */   UintOptRleDecoder: () => (/* binding */ UintOptRleDecoder),\n/* harmony export */   _readVarStringNative: () => (/* binding */ _readVarStringNative),\n/* harmony export */   _readVarStringPolyfill: () => (/* binding */ _readVarStringPolyfill),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   createDecoder: () => (/* binding */ createDecoder),\n/* harmony export */   hasContent: () => (/* binding */ hasContent),\n/* harmony export */   peekUint16: () => (/* binding */ peekUint16),\n/* harmony export */   peekUint32: () => (/* binding */ peekUint32),\n/* harmony export */   peekUint8: () => (/* binding */ peekUint8),\n/* harmony export */   peekVarInt: () => (/* binding */ peekVarInt),\n/* harmony export */   peekVarString: () => (/* binding */ peekVarString),\n/* harmony export */   peekVarUint: () => (/* binding */ peekVarUint),\n/* harmony export */   readAny: () => (/* binding */ readAny),\n/* harmony export */   readBigInt64: () => (/* binding */ readBigInt64),\n/* harmony export */   readBigUint64: () => (/* binding */ readBigUint64),\n/* harmony export */   readFloat32: () => (/* binding */ readFloat32),\n/* harmony export */   readFloat64: () => (/* binding */ readFloat64),\n/* harmony export */   readFromDataView: () => (/* binding */ readFromDataView),\n/* harmony export */   readTailAsUint8Array: () => (/* binding */ readTailAsUint8Array),\n/* harmony export */   readTerminatedString: () => (/* binding */ readTerminatedString),\n/* harmony export */   readTerminatedUint8Array: () => (/* binding */ readTerminatedUint8Array),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint32BigEndian: () => (/* binding */ readUint32BigEndian),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   readUint8Array: () => (/* binding */ readUint8Array),\n/* harmony export */   readVarInt: () => (/* binding */ readVarInt),\n/* harmony export */   readVarString: () => (/* binding */ readVarString),\n/* harmony export */   readVarUint: () => (/* binding */ readVarUint),\n/* harmony export */   readVarUint8Array: () => (/* binding */ readVarUint8Array),\n/* harmony export */   skip8: () => (/* binding */ skip8)\n/* harmony export */ });\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/lib0/number.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/lib0/error.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/lib0/encoding.js\");\n/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */ \n\n\n\n\n\nconst errorUnexpectedEndOfArray = _error_js__WEBPACK_IMPORTED_MODULE_0__.create(\"Unexpected end of array\");\nconst errorIntegerOutOfRange = _error_js__WEBPACK_IMPORTED_MODULE_0__.create(\"Integer out of Range\");\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */ class Decoder {\n    /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */ constructor(uint8Array){\n        /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */ this.arr = uint8Array;\n        /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */ this.pos = 0;\n    }\n}\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */ const createDecoder = (uint8Array)=>new Decoder(uint8Array);\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */ const hasContent = (decoder)=>decoder.pos !== decoder.arr.length;\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */ const clone = (decoder, newPos = decoder.pos)=>{\n    const _decoder = createDecoder(decoder.arr);\n    _decoder.pos = newPos;\n    return _decoder;\n};\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */ const readUint8Array = (decoder, len)=>{\n    const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len);\n    decoder.pos += len;\n    return view;\n};\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */ const readVarUint8Array = (decoder)=>readUint8Array(decoder, readVarUint(decoder));\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */ const readTailAsUint8Array = (decoder)=>readUint8Array(decoder, decoder.arr.length - decoder.pos);\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */ const skip8 = (decoder)=>decoder.pos++;\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */ const readUint8 = (decoder)=>decoder.arr[decoder.pos++];\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const readUint16 = (decoder)=>{\n    const uint = decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8);\n    decoder.pos += 2;\n    return uint;\n};\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const readUint32 = (decoder)=>{\n    const uint = decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8) + (decoder.arr[decoder.pos + 2] << 16) + (decoder.arr[decoder.pos + 3] << 24) >>> 0;\n    decoder.pos += 4;\n    return uint;\n};\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const readUint32BigEndian = (decoder)=>{\n    const uint = decoder.arr[decoder.pos + 3] + (decoder.arr[decoder.pos + 2] << 8) + (decoder.arr[decoder.pos + 1] << 16) + (decoder.arr[decoder.pos] << 24) >>> 0;\n    decoder.pos += 4;\n    return uint;\n};\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const peekUint8 = (decoder)=>decoder.arr[decoder.pos];\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const peekUint16 = (decoder)=>decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8);\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const peekUint32 = (decoder)=>decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8) + (decoder.arr[decoder.pos + 2] << 16) + (decoder.arr[decoder.pos + 3] << 24) >>> 0;\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */ const readVarUint = (decoder)=>{\n    let num = 0;\n    let mult = 1;\n    const len = decoder.arr.length;\n    while(decoder.pos < len){\n        const r = decoder.arr[decoder.pos++];\n        // num = num | ((r & binary.BITS7) << len)\n        num = num + (r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n        ;\n        mult *= 128 // next iteration, shift 7 \"more\" to the left\n        ;\n        if (r < _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8) {\n            return num;\n        }\n        /* c8 ignore start */ if (num > _number_js__WEBPACK_IMPORTED_MODULE_2__.MAX_SAFE_INTEGER) {\n            throw errorIntegerOutOfRange;\n        }\n    /* c8 ignore stop */ }\n    throw errorUnexpectedEndOfArray;\n};\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */ const readVarInt = (decoder)=>{\n    let r = decoder.arr[decoder.pos++];\n    let num = r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS6;\n    let mult = 64;\n    const sign = (r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT7) > 0 ? -1 : 1;\n    if ((r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8) === 0) {\n        // don't continue reading\n        return sign * num;\n    }\n    const len = decoder.arr.length;\n    while(decoder.pos < len){\n        r = decoder.arr[decoder.pos++];\n        // num = num | ((r & binary.BITS7) << len)\n        num = num + (r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7) * mult;\n        mult *= 128;\n        if (r < _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8) {\n            return sign * num;\n        }\n        /* c8 ignore start */ if (num > _number_js__WEBPACK_IMPORTED_MODULE_2__.MAX_SAFE_INTEGER) {\n            throw errorIntegerOutOfRange;\n        }\n    /* c8 ignore stop */ }\n    throw errorUnexpectedEndOfArray;\n};\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */ const peekVarUint = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarUint(decoder);\n    decoder.pos = pos;\n    return s;\n};\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */ const peekVarInt = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarInt(decoder);\n    decoder.pos = pos;\n    return s;\n};\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */ /* c8 ignore start */ const _readVarStringPolyfill = (decoder)=>{\n    let remainingLen = readVarUint(decoder);\n    if (remainingLen === 0) {\n        return \"\";\n    } else {\n        let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n        ;\n        if (--remainingLen < 100) {\n            while(remainingLen--){\n                encodedString += String.fromCodePoint(readUint8(decoder));\n            }\n        } else {\n            while(remainingLen > 0){\n                const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n                // this is dangerous, we create a fresh array view from the existing buffer\n                const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen);\n                decoder.pos += nextLen;\n                // Starting with ES5.1 we can supply a generic array-like object as arguments\n                encodedString += String.fromCodePoint.apply(null, /** @type {any} */ bytes);\n                remainingLen -= nextLen;\n            }\n        }\n        return decodeURIComponent(escape(encodedString));\n    }\n};\n/* c8 ignore stop */ /**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */ const _readVarStringNative = (decoder)=>/** @type any */ _string_js__WEBPACK_IMPORTED_MODULE_3__.utf8TextDecoder.decode(readVarUint8Array(decoder));\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */ /* c8 ignore next */ const readVarString = _string_js__WEBPACK_IMPORTED_MODULE_3__.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill;\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */ const readTerminatedUint8Array = (decoder)=>{\n    const encoder = _encoding_js__WEBPACK_IMPORTED_MODULE_4__.createEncoder();\n    let b;\n    while(true){\n        b = readUint8(decoder);\n        if (b === 0) {\n            return _encoding_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array(encoder);\n        }\n        if (b === 1) {\n            b = readUint8(decoder);\n        }\n        _encoding_js__WEBPACK_IMPORTED_MODULE_4__.write(encoder, b);\n    }\n};\n/**\n * @param {Decoder} decoder\n * @return {string}\n */ const readTerminatedString = (decoder)=>_string_js__WEBPACK_IMPORTED_MODULE_3__.decodeUtf8(readTerminatedUint8Array(decoder));\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */ const peekVarString = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarString(decoder);\n    decoder.pos = pos;\n    return s;\n};\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */ const readFromDataView = (decoder, len)=>{\n    const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len);\n    decoder.pos += len;\n    return dv;\n};\n/**\n * @param {Decoder} decoder\n */ const readFloat32 = (decoder)=>readFromDataView(decoder, 4).getFloat32(0, false);\n/**\n * @param {Decoder} decoder\n */ const readFloat64 = (decoder)=>readFromDataView(decoder, 8).getFloat64(0, false);\n/**\n * @param {Decoder} decoder\n */ const readBigInt64 = (decoder)=>/** @type {any} */ readFromDataView(decoder, 8).getBigInt64(0, false);\n/**\n * @param {Decoder} decoder\n */ const readBigUint64 = (decoder)=>/** @type {any} */ readFromDataView(decoder, 8).getBigUint64(0, false);\n/**\n * @type {Array<function(Decoder):any>}\n */ const readAnyLookupTable = [\n    (decoder)=>undefined,\n    (decoder)=>null,\n    readVarInt,\n    readFloat32,\n    readFloat64,\n    readBigInt64,\n    (decoder)=>false,\n    (decoder)=>true,\n    readVarString,\n    (decoder)=>{\n        const len = readVarUint(decoder);\n        /**\n     * @type {Object<string,any>}\n     */ const obj = {};\n        for(let i = 0; i < len; i++){\n            const key = readVarString(decoder);\n            obj[key] = readAny(decoder);\n        }\n        return obj;\n    },\n    (decoder)=>{\n        const len = readVarUint(decoder);\n        const arr = [];\n        for(let i = 0; i < len; i++){\n            arr.push(readAny(decoder));\n        }\n        return arr;\n    },\n    readVarUint8Array // CASE 116: Uint8Array\n];\n/**\n * @param {Decoder} decoder\n */ const readAny = (decoder)=>readAnyLookupTable[127 - readUint8(decoder)](decoder);\n/**\n * T must not be null.\n *\n * @template T\n */ class RleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */ constructor(uint8Array, reader){\n        super(uint8Array);\n        /**\n     * The reader\n     */ this.reader = reader;\n        /**\n     * Current state\n     * @type {T|null}\n     */ this.s = null;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = this.reader(this);\n            if (hasContent(this)) {\n                this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n                ;\n            } else {\n                this.count = -1 // read the current value forever\n                ;\n            }\n        }\n        this.count--;\n        return /** @type {T} */ this.s;\n    }\n}\nclass IntDiffDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */ constructor(uint8Array, start){\n        super(uint8Array);\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        this.s += readVarInt(this);\n        return this.s;\n    }\n}\nclass RleIntDiffDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */ constructor(uint8Array, start){\n        super(uint8Array);\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n        this.count = 0;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        if (this.count === 0) {\n            this.s += readVarInt(this);\n            if (hasContent(this)) {\n                this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n                ;\n            } else {\n                this.count = -1 // read the current value forever\n                ;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s;\n    }\n}\nclass UintOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = readVarInt(this);\n            // if the sign is negative, we read the count too, otherwise count is 1\n            const isNegative = _math_js__WEBPACK_IMPORTED_MODULE_5__.isNegativeZero(this.s);\n            this.count = 1;\n            if (isNegative) {\n                this.s = -this.s;\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s;\n    }\n}\nclass IncUintOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = readVarInt(this);\n            // if the sign is negative, we read the count too, otherwise count is 1\n            const isNegative = _math_js__WEBPACK_IMPORTED_MODULE_5__.isNegativeZero(this.s);\n            this.count = 1;\n            if (isNegative) {\n                this.s = -this.s;\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s++;\n    }\n}\nclass IntDiffOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n        this.diff = 0;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        if (this.count === 0) {\n            const diff = readVarInt(this);\n            // if the first bit is set, we read more data\n            const hasCount = diff & 1;\n            this.diff = _math_js__WEBPACK_IMPORTED_MODULE_5__.floor(diff / 2) // shift >> 1\n            ;\n            this.count = 1;\n            if (hasCount) {\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.s += this.diff;\n        this.count--;\n        return this.s;\n    }\n}\nclass StringDecoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        this.decoder = new UintOptRleDecoder(uint8Array);\n        this.str = readVarString(this.decoder);\n        /**\n     * @type {number}\n     */ this.spos = 0;\n    }\n    /**\n   * @return {string}\n   */ read() {\n        const end = this.spos + this.decoder.read();\n        const res = this.str.slice(this.spos, end);\n        this.spos = end;\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/decoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/encoding.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/encoding.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Encoder: () => (/* binding */ Encoder),\n/* harmony export */   IncUintOptRleEncoder: () => (/* binding */ IncUintOptRleEncoder),\n/* harmony export */   IntDiffEncoder: () => (/* binding */ IntDiffEncoder),\n/* harmony export */   IntDiffOptRleEncoder: () => (/* binding */ IntDiffOptRleEncoder),\n/* harmony export */   RleEncoder: () => (/* binding */ RleEncoder),\n/* harmony export */   RleIntDiffEncoder: () => (/* binding */ RleIntDiffEncoder),\n/* harmony export */   StringEncoder: () => (/* binding */ StringEncoder),\n/* harmony export */   UintOptRleEncoder: () => (/* binding */ UintOptRleEncoder),\n/* harmony export */   _writeVarStringNative: () => (/* binding */ _writeVarStringNative),\n/* harmony export */   _writeVarStringPolyfill: () => (/* binding */ _writeVarStringPolyfill),\n/* harmony export */   createEncoder: () => (/* binding */ createEncoder),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   hasContent: () => (/* binding */ hasContent),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setUint16: () => (/* binding */ setUint16),\n/* harmony export */   setUint32: () => (/* binding */ setUint32),\n/* harmony export */   setUint8: () => (/* binding */ setUint8),\n/* harmony export */   toUint8Array: () => (/* binding */ toUint8Array),\n/* harmony export */   verifyLen: () => (/* binding */ verifyLen),\n/* harmony export */   write: () => (/* binding */ write),\n/* harmony export */   writeAny: () => (/* binding */ writeAny),\n/* harmony export */   writeBigInt64: () => (/* binding */ writeBigInt64),\n/* harmony export */   writeBigUint64: () => (/* binding */ writeBigUint64),\n/* harmony export */   writeBinaryEncoder: () => (/* binding */ writeBinaryEncoder),\n/* harmony export */   writeFloat32: () => (/* binding */ writeFloat32),\n/* harmony export */   writeFloat64: () => (/* binding */ writeFloat64),\n/* harmony export */   writeOnDataView: () => (/* binding */ writeOnDataView),\n/* harmony export */   writeTerminatedString: () => (/* binding */ writeTerminatedString),\n/* harmony export */   writeTerminatedUint8Array: () => (/* binding */ writeTerminatedUint8Array),\n/* harmony export */   writeUint16: () => (/* binding */ writeUint16),\n/* harmony export */   writeUint32: () => (/* binding */ writeUint32),\n/* harmony export */   writeUint32BigEndian: () => (/* binding */ writeUint32BigEndian),\n/* harmony export */   writeUint8: () => (/* binding */ writeUint8),\n/* harmony export */   writeUint8Array: () => (/* binding */ writeUint8Array),\n/* harmony export */   writeVarInt: () => (/* binding */ writeVarInt),\n/* harmony export */   writeVarString: () => (/* binding */ writeVarString),\n/* harmony export */   writeVarUint: () => (/* binding */ writeVarUint),\n/* harmony export */   writeVarUint8Array: () => (/* binding */ writeVarUint8Array)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/lib0/number.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */ \n\n\n\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */ class Encoder {\n    constructor(){\n        this.cpos = 0;\n        this.cbuf = new Uint8Array(100);\n        /**\n     * @type {Array<Uint8Array>}\n     */ this.bufs = [];\n    }\n}\n/**\n * @function\n * @return {Encoder}\n */ const createEncoder = ()=>new Encoder();\n/**\n * @param {function(Encoder):void} f\n */ const encode = (f)=>{\n    const encoder = createEncoder();\n    f(encoder);\n    return toUint8Array(encoder);\n};\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */ const length = (encoder)=>{\n    let len = encoder.cpos;\n    for(let i = 0; i < encoder.bufs.length; i++){\n        len += encoder.bufs[i].length;\n    }\n    return len;\n};\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */ const hasContent = (encoder)=>encoder.cpos > 0 || encoder.bufs.length > 0;\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */ const toUint8Array = (encoder)=>{\n    const uint8arr = new Uint8Array(length(encoder));\n    let curPos = 0;\n    for(let i = 0; i < encoder.bufs.length; i++){\n        const d = encoder.bufs[i];\n        uint8arr.set(d, curPos);\n        curPos += d.length;\n    }\n    uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos);\n    return uint8arr;\n};\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */ const verifyLen = (encoder, len)=>{\n    const bufferLen = encoder.cbuf.length;\n    if (bufferLen - encoder.cpos < len) {\n        encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos));\n        encoder.cbuf = new Uint8Array(_math_js__WEBPACK_IMPORTED_MODULE_0__.max(bufferLen, len) * 2);\n        encoder.cpos = 0;\n    }\n};\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */ const write = (encoder, num)=>{\n    const bufferLen = encoder.cbuf.length;\n    if (encoder.cpos === bufferLen) {\n        encoder.bufs.push(encoder.cbuf);\n        encoder.cbuf = new Uint8Array(bufferLen * 2);\n        encoder.cpos = 0;\n    }\n    encoder.cbuf[encoder.cpos++] = num;\n};\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */ const set = (encoder, pos, num)=>{\n    let buffer = null;\n    // iterate all buffers and adjust position\n    for(let i = 0; i < encoder.bufs.length && buffer === null; i++){\n        const b = encoder.bufs[i];\n        if (pos < b.length) {\n            buffer = b // found buffer\n            ;\n        } else {\n            pos -= b.length;\n        }\n    }\n    if (buffer === null) {\n        // use current buffer\n        buffer = encoder.cbuf;\n    }\n    buffer[pos] = num;\n};\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint8 = write;\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */ const setUint8 = set;\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint16 = (encoder, num)=>{\n    write(encoder, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n    write(encoder, num >>> 8 & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n};\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */ const setUint16 = (encoder, pos, num)=>{\n    set(encoder, pos, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n    set(encoder, pos + 1, num >>> 8 & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n};\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint32 = (encoder, num)=>{\n    for(let i = 0; i < 4; i++){\n        write(encoder, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n        num >>>= 8;\n    }\n};\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint32BigEndian = (encoder, num)=>{\n    for(let i = 3; i >= 0; i--){\n        write(encoder, num >>> 8 * i & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n    }\n};\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */ const setUint32 = (encoder, pos, num)=>{\n    for(let i = 0; i < 4; i++){\n        set(encoder, pos + i, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n        num >>>= 8;\n    }\n};\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeVarUint = (encoder, num)=>{\n    while(num > _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7){\n        write(encoder, _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8 | _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 & num);\n        num = _math_js__WEBPACK_IMPORTED_MODULE_0__.floor(num / 128) // shift >>> 7\n        ;\n    }\n    write(encoder, _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 & num);\n};\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeVarInt = (encoder, num)=>{\n    const isNegative = _math_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeZero(num);\n    if (isNegative) {\n        num = -num;\n    }\n    //             |- whether to continue reading         |- whether is negative     |- number\n    write(encoder, (num > _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS6 ? _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8 : 0) | (isNegative ? _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT7 : 0) | _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS6 & num);\n    num = _math_js__WEBPACK_IMPORTED_MODULE_0__.floor(num / 64) // shift >>> 6\n    ;\n    // We don't need to consider the case of num === 0 so we can use a different\n    // pattern here than above.\n    while(num > 0){\n        write(encoder, (num > _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 ? _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8 : 0) | _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 & num);\n        num = _math_js__WEBPACK_IMPORTED_MODULE_0__.floor(num / 128) // shift >>> 7\n        ;\n    }\n};\n/**\n * A cache to store strings temporarily\n */ const _strBuffer = new Uint8Array(30000);\nconst _maxStrBSize = _strBuffer.length / 3;\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ const _writeVarStringNative = (encoder, str)=>{\n    if (str.length < _maxStrBSize) {\n        // We can encode the string into the existing buffer\n        /* c8 ignore next */ const written = _string_js__WEBPACK_IMPORTED_MODULE_2__.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0;\n        writeVarUint(encoder, written);\n        for(let i = 0; i < written; i++){\n            write(encoder, _strBuffer[i]);\n        }\n    } else {\n        writeVarUint8Array(encoder, _string_js__WEBPACK_IMPORTED_MODULE_2__.encodeUtf8(str));\n    }\n};\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ const _writeVarStringPolyfill = (encoder, str)=>{\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    writeVarUint(encoder, len);\n    for(let i = 0; i < len; i++){\n        write(encoder, /** @type {number} */ encodedString.codePointAt(i));\n    }\n};\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ /* c8 ignore next */ const writeVarString = _string_js__WEBPACK_IMPORTED_MODULE_2__.utf8TextEncoder && /** @type {any} */ _string_js__WEBPACK_IMPORTED_MODULE_2__.utf8TextEncoder.encodeInto ? _writeVarStringNative : _writeVarStringPolyfill;\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ const writeTerminatedString = (encoder, str)=>writeTerminatedUint8Array(encoder, _string_js__WEBPACK_IMPORTED_MODULE_2__.encodeUtf8(str));\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */ const writeTerminatedUint8Array = (encoder, buf)=>{\n    for(let i = 0; i < buf.length; i++){\n        const b = buf[i];\n        if (b === 0 || b === 1) {\n            write(encoder, 1);\n        }\n        write(encoder, buf[i]);\n    }\n    write(encoder, 0);\n};\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */ const writeBinaryEncoder = (encoder, append)=>writeUint8Array(encoder, toUint8Array(append));\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */ const writeUint8Array = (encoder, uint8Array)=>{\n    const bufferLen = encoder.cbuf.length;\n    const cpos = encoder.cpos;\n    const leftCopyLen = _math_js__WEBPACK_IMPORTED_MODULE_0__.min(bufferLen - cpos, uint8Array.length);\n    const rightCopyLen = uint8Array.length - leftCopyLen;\n    encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos);\n    encoder.cpos += leftCopyLen;\n    if (rightCopyLen > 0) {\n        // Still something to write, write right half..\n        // Append new buffer\n        encoder.bufs.push(encoder.cbuf);\n        // must have at least size of remaining buffer\n        encoder.cbuf = new Uint8Array(_math_js__WEBPACK_IMPORTED_MODULE_0__.max(bufferLen * 2, rightCopyLen));\n        // copy array\n        encoder.cbuf.set(uint8Array.subarray(leftCopyLen));\n        encoder.cpos = rightCopyLen;\n    }\n};\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */ const writeVarUint8Array = (encoder, uint8Array)=>{\n    writeVarUint(encoder, uint8Array.byteLength);\n    writeUint8Array(encoder, uint8Array);\n};\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */ const writeOnDataView = (encoder, len)=>{\n    verifyLen(encoder, len);\n    const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len);\n    encoder.cpos += len;\n    return dview;\n};\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */ const writeFloat32 = (encoder, num)=>writeOnDataView(encoder, 4).setFloat32(0, num, false);\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */ const writeFloat64 = (encoder, num)=>writeOnDataView(encoder, 8).setFloat64(0, num, false);\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */ const writeBigInt64 = (encoder, num)=>/** @type {any} */ writeOnDataView(encoder, 8).setBigInt64(0, num, false);\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */ const writeBigUint64 = (encoder, num)=>/** @type {any} */ writeOnDataView(encoder, 8).setBigUint64(0, num, false);\nconst floatTestBed = new DataView(new ArrayBuffer(4));\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */ const isFloat32 = (num)=>{\n    floatTestBed.setFloat32(0, num);\n    return floatTestBed.getFloat32(0) === num;\n};\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */ const writeAny = (encoder, data)=>{\n    switch(typeof data){\n        case \"string\":\n            // TYPE 119: STRING\n            write(encoder, 119);\n            writeVarString(encoder, data);\n            break;\n        case \"number\":\n            if (_number_js__WEBPACK_IMPORTED_MODULE_3__.isInteger(data) && _math_js__WEBPACK_IMPORTED_MODULE_0__.abs(data) <= _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS31) {\n                // TYPE 125: INTEGER\n                write(encoder, 125);\n                writeVarInt(encoder, data);\n            } else if (isFloat32(data)) {\n                // TYPE 124: FLOAT32\n                write(encoder, 124);\n                writeFloat32(encoder, data);\n            } else {\n                // TYPE 123: FLOAT64\n                write(encoder, 123);\n                writeFloat64(encoder, data);\n            }\n            break;\n        case \"bigint\":\n            // TYPE 122: BigInt\n            write(encoder, 122);\n            writeBigInt64(encoder, data);\n            break;\n        case \"object\":\n            if (data === null) {\n                // TYPE 126: null\n                write(encoder, 126);\n            } else if (_array_js__WEBPACK_IMPORTED_MODULE_4__.isArray(data)) {\n                // TYPE 117: Array\n                write(encoder, 117);\n                writeVarUint(encoder, data.length);\n                for(let i = 0; i < data.length; i++){\n                    writeAny(encoder, data[i]);\n                }\n            } else if (data instanceof Uint8Array) {\n                // TYPE 116: ArrayBuffer\n                write(encoder, 116);\n                writeVarUint8Array(encoder, data);\n            } else {\n                // TYPE 118: Object\n                write(encoder, 118);\n                const keys = Object.keys(data);\n                writeVarUint(encoder, keys.length);\n                for(let i = 0; i < keys.length; i++){\n                    const key = keys[i];\n                    writeVarString(encoder, key);\n                    writeAny(encoder, data[key]);\n                }\n            }\n            break;\n        case \"boolean\":\n            // TYPE 120/121: boolean (true/false)\n            write(encoder, data ? 120 : 121);\n            break;\n        default:\n            // TYPE 127: undefined\n            write(encoder, 127);\n    }\n};\n/**\n * Now come a few stateful encoder that have their own classes.\n */ /**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */ class RleEncoder extends Encoder {\n    /**\n   * @param {function(Encoder, T):void} writer\n   */ constructor(writer){\n        super();\n        /**\n     * The writer\n     */ this.w = writer;\n        /**\n     * Current state\n     * @type {T|null}\n     */ this.s = null;\n        this.count = 0;\n    }\n    /**\n   * @param {T} v\n   */ write(v) {\n        if (this.s === v) {\n            this.count++;\n        } else {\n            if (this.count > 0) {\n                // flush counter, unless this is the first value (count = 0)\n                writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n                ;\n            }\n            this.count = 1;\n            // write first value\n            this.w(this, v);\n            this.s = v;\n        }\n    }\n}\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */ class IntDiffEncoder extends Encoder {\n    /**\n   * @param {number} start\n   */ constructor(start){\n        super();\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        writeVarInt(this, v - this.s);\n        this.s = v;\n    }\n}\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */ class RleIntDiffEncoder extends Encoder {\n    /**\n   * @param {number} start\n   */ constructor(start){\n        super();\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s === v && this.count > 0) {\n            this.count++;\n        } else {\n            if (this.count > 0) {\n                // flush counter, unless this is the first value (count = 0)\n                writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n                ;\n            }\n            this.count = 1;\n            // write first value\n            writeVarInt(this, v - this.s);\n            this.s = v;\n        }\n    }\n}\n/**\n * @param {UintOptRleEncoder} encoder\n */ const flushUintOptRleEncoder = (encoder)=>{\n    if (encoder.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        // case 1: just a single value. set sign to positive\n        // case 2: write several values. set sign to negative to indicate that there is a length coming\n        writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s);\n        if (encoder.count > 1) {\n            writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n            ;\n        }\n    }\n};\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */ class UintOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s === v) {\n            this.count++;\n        } else {\n            flushUintOptRleEncoder(this);\n            this.count = 1;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushUintOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */ class IncUintOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s + this.count === v) {\n            this.count++;\n        } else {\n            flushUintOptRleEncoder(this);\n            this.count = 1;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushUintOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */ const flushIntDiffOptRleEncoder = (encoder)=>{\n    if (encoder.count > 0) {\n        //          31 bit making up the diff | wether to write the counter\n        // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n        const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1);\n        // flush counter, unless this is the first value (count = 0)\n        // case 1: just a single value. set first bit to positive\n        // case 2: write several values. set first bit to negative to indicate that there is a length coming\n        writeVarInt(encoder.encoder, encodedDiff);\n        if (encoder.count > 1) {\n            writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n            ;\n        }\n    }\n};\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */ class IntDiffOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n        this.diff = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.diff === v - this.s) {\n            this.s = v;\n            this.count++;\n        } else {\n            flushIntDiffOptRleEncoder(this);\n            this.count = 1;\n            this.diff = v - this.s;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushIntDiffOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */ class StringEncoder {\n    constructor(){\n        /**\n     * @type {Array<string>}\n     */ this.sarr = [];\n        this.s = \"\";\n        this.lensE = new UintOptRleEncoder();\n    }\n    /**\n   * @param {string} string\n   */ write(string) {\n        this.s += string;\n        if (this.s.length > 19) {\n            this.sarr.push(this.s);\n            this.s = \"\";\n        }\n        this.lensE.write(string.length);\n    }\n    toUint8Array() {\n        const encoder = new Encoder();\n        this.sarr.push(this.s);\n        this.s = \"\";\n        writeVarString(encoder, this.sarr.join(\"\"));\n        writeUint8Array(encoder, this.lensE.toUint8Array());\n        return toUint8Array(encoder);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/environment.js":
/*!******************************************!*\
  !*** ./node_modules/lib0/environment.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureConf: () => (/* binding */ ensureConf),\n/* harmony export */   getConf: () => (/* binding */ getConf),\n/* harmony export */   getParam: () => (/* binding */ getParam),\n/* harmony export */   getVariable: () => (/* binding */ getVariable),\n/* harmony export */   hasConf: () => (/* binding */ hasConf),\n/* harmony export */   hasParam: () => (/* binding */ hasParam),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   production: () => (/* binding */ production),\n/* harmony export */   supportsColor: () => (/* binding */ supportsColor)\n/* harmony export */ });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"(ssr)/./node_modules/lib0/map.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _conditions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conditions.js */ \"(ssr)/./node_modules/lib0/conditions.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./storage.js */ \"(ssr)/./node_modules/lib0/storage.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/lib0/function.js\");\n/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module environment\n */ \n\n\n\n\n/* c8 ignore next 2 */ // @ts-ignore\nconst isNode = typeof process !== \"undefined\" && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) === \"[object process]\";\n/* c8 ignore next */ const isBrowser =  false && 0;\n/* c8 ignore next 3 */ const isMac = typeof navigator !== \"undefined\" ? /Mac/.test(navigator.platform) : false;\n/**\n * @type {Map<string,string>}\n */ let params;\nconst args = [];\n/* c8 ignore start */ const computeParams = ()=>{\n    if (params === undefined) {\n        if (isNode) {\n            params = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n            const pargs = process.argv;\n            let currParamName = null;\n            for(let i = 0; i < pargs.length; i++){\n                const parg = pargs[i];\n                if (parg[0] === \"-\") {\n                    if (currParamName !== null) {\n                        params.set(currParamName, \"\");\n                    }\n                    currParamName = parg;\n                } else {\n                    if (currParamName !== null) {\n                        params.set(currParamName, parg);\n                        currParamName = null;\n                    } else {\n                        args.push(parg);\n                    }\n                }\n            }\n            if (currParamName !== null) {\n                params.set(currParamName, \"\");\n            }\n        // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n        } else if (typeof location === \"object\") {\n            params = _map_js__WEBPACK_IMPORTED_MODULE_0__.create(); // eslint-disable-next-line no-undef\n            (location.search || \"?\").slice(1).split(\"&\").forEach((kv)=>{\n                if (kv.length !== 0) {\n                    const [key, value] = kv.split(\"=\");\n                    params.set(`--${_string_js__WEBPACK_IMPORTED_MODULE_1__.fromCamelCase(key, \"-\")}`, value);\n                    params.set(`-${_string_js__WEBPACK_IMPORTED_MODULE_1__.fromCamelCase(key, \"-\")}`, value);\n                }\n            });\n        } else {\n            params = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n        }\n    }\n    return params;\n};\n/* c8 ignore stop */ /**\n * @param {string} name\n * @return {boolean}\n */ /* c8 ignore next */ const hasParam = (name)=>computeParams().has(name);\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */ /* c8 ignore next 2 */ const getParam = (name, defaultVal)=>computeParams().get(name) || defaultVal;\n/**\n * @param {string} name\n * @return {string|null}\n */ /* c8 ignore next 4 */ const getVariable = (name)=>isNode ? _conditions_js__WEBPACK_IMPORTED_MODULE_2__.undefinedToNull(process.env[name.toUpperCase().replaceAll(\"-\", \"_\")]) : _conditions_js__WEBPACK_IMPORTED_MODULE_2__.undefinedToNull(_storage_js__WEBPACK_IMPORTED_MODULE_3__.varStorage.getItem(name));\n/**\n * @param {string} name\n * @return {string|null}\n */ /* c8 ignore next 2 */ const getConf = (name)=>computeParams().get(\"--\" + name) || getVariable(name);\n/**\n * @param {string} name\n * @return {string}\n */ /* c8 ignore next 5 */ const ensureConf = (name)=>{\n    const c = getConf(name);\n    if (c == null) throw new Error(`Expected configuration \"${name.toUpperCase().replaceAll(\"-\", \"_\")}\"`);\n    return c;\n};\n/**\n * @param {string} name\n * @return {boolean}\n */ /* c8 ignore next 2 */ const hasConf = (name)=>hasParam(\"--\" + name) || getVariable(name) !== null;\n/* c8 ignore next */ const production = hasConf(\"production\");\n/* c8 ignore next 2 */ const forceColor = isNode && _function_js__WEBPACK_IMPORTED_MODULE_4__.isOneOf(process.env.FORCE_COLOR, [\n    \"true\",\n    \"1\",\n    \"2\"\n]);\n/* c8 ignore start */ /**\n * Color is enabled by default if the terminal supports it.\n *\n * Explicitly enable color using `--color` parameter\n * Disable color using `--no-color` parameter or using `NO_COLOR=1` environment variable.\n * `FORCE_COLOR=1` enables color and takes precedence over all.\n */ const supportsColor = forceColor || !hasParam(\"--no-colors\") && // @todo deprecate --no-colors\n!hasConf(\"no-color\") && (!isNode || process.stdout.isTTY) && (!isNode || hasParam(\"--color\") || getVariable(\"COLORTERM\") !== null || (getVariable(\"TERM\") || \"\").includes(\"color\")) /* c8 ignore stop */ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/environment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/error.js":
/*!************************************!*\
  !*** ./node_modules/lib0/error.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   methodUnimplemented: () => (/* binding */ methodUnimplemented),\n/* harmony export */   unexpectedCase: () => (/* binding */ unexpectedCase)\n/* harmony export */ });\n/**\n * Error helpers.\n *\n * @module error\n */ /**\n * @param {string} s\n * @return {Error}\n */ /* c8 ignore next */ const create = (s)=>new Error(s);\n/**\n * @throws {Error}\n * @return {never}\n */ /* c8 ignore next 3 */ const methodUnimplemented = ()=>{\n    throw create(\"Method unimplemented\");\n};\n/**\n * @throws {Error}\n * @return {never}\n */ /* c8 ignore next 3 */ const unexpectedCase = ()=>{\n    throw create(\"Unexpected case\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7OztDQUdDLEdBQ0Qsa0JBQWtCLEdBQ1gsTUFBTUEsU0FBU0MsQ0FBQUEsSUFBSyxJQUFJQyxNQUFNRCxHQUFFO0FBRXZDOzs7Q0FHQyxHQUNELG9CQUFvQixHQUNiLE1BQU1FLHNCQUFzQjtJQUNqQyxNQUFNSCxPQUFPO0FBQ2YsRUFBQztBQUVEOzs7Q0FHQyxHQUNELG9CQUFvQixHQUNiLE1BQU1JLGlCQUFpQjtJQUM1QixNQUFNSixPQUFPO0FBQ2YsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bmNkcmF3LWNsaWVudC8uL25vZGVfbW9kdWxlcy9saWIwL2Vycm9yLmpzPzdlODgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFcnJvciBoZWxwZXJzLlxuICpcbiAqIEBtb2R1bGUgZXJyb3JcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBzXG4gKiBAcmV0dXJuIHtFcnJvcn1cbiAqL1xuLyogYzggaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSBzID0+IG5ldyBFcnJvcihzKVxuXG4vKipcbiAqIEB0aHJvd3Mge0Vycm9yfVxuICogQHJldHVybiB7bmV2ZXJ9XG4gKi9cbi8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbmV4cG9ydCBjb25zdCBtZXRob2RVbmltcGxlbWVudGVkID0gKCkgPT4ge1xuICB0aHJvdyBjcmVhdGUoJ01ldGhvZCB1bmltcGxlbWVudGVkJylcbn1cblxuLyoqXG4gKiBAdGhyb3dzIHtFcnJvcn1cbiAqIEByZXR1cm4ge25ldmVyfVxuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAzICovXG5leHBvcnQgY29uc3QgdW5leHBlY3RlZENhc2UgPSAoKSA9PiB7XG4gIHRocm93IGNyZWF0ZSgnVW5leHBlY3RlZCBjYXNlJylcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGUiLCJzIiwiRXJyb3IiLCJtZXRob2RVbmltcGxlbWVudGVkIiwidW5leHBlY3RlZENhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/function.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/function.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apply: () => (/* binding */ apply),\n/* harmony export */   callAll: () => (/* binding */ callAll),\n/* harmony export */   equalityDeep: () => (/* binding */ equalityDeep),\n/* harmony export */   equalityFlat: () => (/* binding */ equalityFlat),\n/* harmony export */   equalityStrict: () => (/* binding */ equalityStrict),\n/* harmony export */   id: () => (/* binding */ id),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isOneOf: () => (/* binding */ isOneOf),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isTemplate: () => (/* binding */ isTemplate),\n/* harmony export */   nop: () => (/* binding */ nop)\n/* harmony export */ });\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/lib0/object.js\");\n/* harmony import */ var _traits_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./traits.js */ \"(ssr)/./node_modules/lib0/traits.js\");\n/**\n * Common functions and function call helpers.\n *\n * @module function\n */ \n\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */ const callAll = (fs, args, i = 0)=>{\n    try {\n        for(; i < fs.length; i++){\n            fs[i](...args);\n        }\n    } finally{\n        if (i < fs.length) {\n            callAll(fs, args, i + 1);\n        }\n    }\n};\nconst nop = ()=>{};\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */ const apply = (f)=>f();\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */ const id = (a)=>a;\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */ const equalityStrict = (a, b)=>a === b;\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */ const equalityFlat = (a, b)=>a === b || a != null && b != null && a.constructor === b.constructor && (_array_js__WEBPACK_IMPORTED_MODULE_0__.isArray(a) && _array_js__WEBPACK_IMPORTED_MODULE_0__.equalFlat(a, /** @type {Array<T>} */ b) || typeof a === \"object\" && _object_js__WEBPACK_IMPORTED_MODULE_1__.equalFlat(a, b));\n/* c8 ignore start */ /**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */ const equalityDeep = (a, b)=>{\n    if (a === b) {\n        return true;\n    }\n    if (a == null || b == null || a.constructor !== b.constructor) {\n        return false;\n    }\n    if (a[_traits_js__WEBPACK_IMPORTED_MODULE_2__.EqualityTraitSymbol] != null) {\n        return a[_traits_js__WEBPACK_IMPORTED_MODULE_2__.EqualityTraitSymbol](b);\n    }\n    switch(a.constructor){\n        case ArrayBuffer:\n            a = new Uint8Array(a);\n            b = new Uint8Array(b);\n        // eslint-disable-next-line no-fallthrough\n        case Uint8Array:\n            {\n                if (a.byteLength !== b.byteLength) {\n                    return false;\n                }\n                for(let i = 0; i < a.length; i++){\n                    if (a[i] !== b[i]) {\n                        return false;\n                    }\n                }\n                break;\n            }\n        case Set:\n            {\n                if (a.size !== b.size) {\n                    return false;\n                }\n                for (const value of a){\n                    if (!b.has(value)) {\n                        return false;\n                    }\n                }\n                break;\n            }\n        case Map:\n            {\n                if (a.size !== b.size) {\n                    return false;\n                }\n                for (const key of a.keys()){\n                    if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n                        return false;\n                    }\n                }\n                break;\n            }\n        case Object:\n            if (_object_js__WEBPACK_IMPORTED_MODULE_1__.length(a) !== _object_js__WEBPACK_IMPORTED_MODULE_1__.length(b)) {\n                return false;\n            }\n            for(const key in a){\n                if (!_object_js__WEBPACK_IMPORTED_MODULE_1__.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n                    return false;\n                }\n            }\n            break;\n        case Array:\n            if (a.length !== b.length) {\n                return false;\n            }\n            for(let i = 0; i < a.length; i++){\n                if (!equalityDeep(a[i], b[i])) {\n                    return false;\n                }\n            }\n            break;\n        default:\n            return false;\n    }\n    return true;\n};\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */ // @ts-ignore\nconst isOneOf = (value, options)=>options.includes(value);\n/* c8 ignore stop */ const isArray = _array_js__WEBPACK_IMPORTED_MODULE_0__.isArray;\n/**\n * @param {any} s\n * @return {s is String}\n */ const isString = (s)=>s && s.constructor === String;\n/**\n * @param {any} n\n * @return {n is Number}\n */ const isNumber = (n)=>n != null && n.constructor === Number;\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */ const is = (n, T)=>n && n.constructor === T;\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */ const isTemplate = (T)=>/**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/ (n)=>n && n.constructor === T;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/function.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/iterator.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/iterator.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createIterator: () => (/* binding */ createIterator),\n/* harmony export */   iteratorFilter: () => (/* binding */ iteratorFilter),\n/* harmony export */   iteratorMap: () => (/* binding */ iteratorMap),\n/* harmony export */   mapIterator: () => (/* binding */ mapIterator)\n/* harmony export */ });\n/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */ /**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */ const mapIterator = (iterator, f)=>({\n        [Symbol.iterator] () {\n            return this;\n        },\n        // @ts-ignore\n        next () {\n            const r = iterator.next();\n            return {\n                value: r.done ? undefined : f(r.value),\n                done: r.done\n            };\n        }\n    });\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */ const createIterator = (next)=>({\n        /**\n   * @return {IterableIterator<T>}\n   */ [Symbol.iterator] () {\n            return this;\n        },\n        // @ts-ignore\n        next\n    });\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */ const iteratorFilter = (iterator, filter)=>createIterator(()=>{\n        let res;\n        do {\n            res = iterator.next();\n        }while (!res.done && !filter(res.value));\n        return res;\n    });\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */ const iteratorMap = (iterator, fmap)=>createIterator(()=>{\n        const { done, value } = iterator.next();\n        return {\n            done,\n            value: done ? undefined : fmap(value)\n        };\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9pdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7OztDQUtDLEdBQ00sTUFBTUEsY0FBYyxDQUFDQyxVQUFVQyxJQUFPO1FBQzNDLENBQUNDLE9BQU9GLFFBQVEsQ0FBQztZQUNmLE9BQU8sSUFBSTtRQUNiO1FBQ0EsYUFBYTtRQUNiRztZQUNFLE1BQU1DLElBQUlKLFNBQVNHLElBQUk7WUFDdkIsT0FBTztnQkFBRUUsT0FBT0QsRUFBRUUsSUFBSSxHQUFHQyxZQUFZTixFQUFFRyxFQUFFQyxLQUFLO2dCQUFHQyxNQUFNRixFQUFFRSxJQUFJO1lBQUM7UUFDaEU7SUFDRixHQUFFO0FBRUY7Ozs7Q0FJQyxHQUNNLE1BQU1FLGlCQUFpQkwsQ0FBQUEsT0FBUztRQUNyQzs7R0FFQyxHQUNELENBQUNELE9BQU9GLFFBQVEsQ0FBQztZQUNmLE9BQU8sSUFBSTtRQUNiO1FBQ0EsYUFBYTtRQUNiRztJQUNGLEdBQUU7QUFFRjs7OztDQUlDLEdBQ00sTUFBTU0saUJBQWlCLENBQUNULFVBQVVVLFNBQVdGLGVBQWU7UUFDakUsSUFBSUc7UUFDSixHQUFHO1lBQ0RBLE1BQU1YLFNBQVNHLElBQUk7UUFDckIsUUFBUyxDQUFDUSxJQUFJTCxJQUFJLElBQUksQ0FBQ0ksT0FBT0MsSUFBSU4sS0FBSyxHQUFFO1FBQ3pDLE9BQU9NO0lBQ1QsR0FBRTtBQUVGOzs7O0NBSUMsR0FDTSxNQUFNQyxjQUFjLENBQUNaLFVBQVVhLE9BQVNMLGVBQWU7UUFDNUQsTUFBTSxFQUFFRixJQUFJLEVBQUVELEtBQUssRUFBRSxHQUFHTCxTQUFTRyxJQUFJO1FBQ3JDLE9BQU87WUFBRUc7WUFBTUQsT0FBT0MsT0FBT0MsWUFBWU0sS0FBS1I7UUFBTztJQUN2RCxHQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvaXRlcmF0b3IuanM/Y2Q3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgbW9kdWxlIHRvIGNyZWF0ZSBhbmQgbWFuaXB1bGF0ZSBJdGVyYXRvcnMuXG4gKlxuICogQG1vZHVsZSBpdGVyYXRvclxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFQsUlxuICogQHBhcmFtIHtJdGVyYXRvcjxUPn0gaXRlcmF0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVCk6Un0gZlxuICogQHJldHVybiB7SXRlcmFibGVJdGVyYXRvcjxSPn1cbiAqL1xuZXhwb3J0IGNvbnN0IG1hcEl0ZXJhdG9yID0gKGl0ZXJhdG9yLCBmKSA9PiAoe1xuICBbU3ltYm9sLml0ZXJhdG9yXSAoKSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfSxcbiAgLy8gQHRzLWlnbm9yZVxuICBuZXh0ICgpIHtcbiAgICBjb25zdCByID0gaXRlcmF0b3IubmV4dCgpXG4gICAgcmV0dXJuIHsgdmFsdWU6IHIuZG9uZSA/IHVuZGVmaW5lZCA6IGYoci52YWx1ZSksIGRvbmU6IHIuZG9uZSB9XG4gIH1cbn0pXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oKTpJdGVyYXRvclJlc3VsdDxUPn0gbmV4dFxuICogQHJldHVybiB7SXRlcmFibGVJdGVyYXRvcjxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUl0ZXJhdG9yID0gbmV4dCA9PiAoe1xuICAvKipcbiAgICogQHJldHVybiB7SXRlcmFibGVJdGVyYXRvcjxUPn1cbiAgICovXG4gIFtTeW1ib2wuaXRlcmF0b3JdICgpIHtcbiAgICByZXR1cm4gdGhpc1xuICB9LFxuICAvLyBAdHMtaWdub3JlXG4gIG5leHRcbn0pXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7SXRlcmF0b3I8VD59IGl0ZXJhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFQpOmJvb2xlYW59IGZpbHRlclxuICovXG5leHBvcnQgY29uc3QgaXRlcmF0b3JGaWx0ZXIgPSAoaXRlcmF0b3IsIGZpbHRlcikgPT4gY3JlYXRlSXRlcmF0b3IoKCkgPT4ge1xuICBsZXQgcmVzXG4gIGRvIHtcbiAgICByZXMgPSBpdGVyYXRvci5uZXh0KClcbiAgfSB3aGlsZSAoIXJlcy5kb25lICYmICFmaWx0ZXIocmVzLnZhbHVlKSlcbiAgcmV0dXJuIHJlc1xufSlcblxuLyoqXG4gKiBAdGVtcGxhdGUgVCxNXG4gKiBAcGFyYW0ge0l0ZXJhdG9yPFQ+fSBpdGVyYXRvclxuICogQHBhcmFtIHtmdW5jdGlvbihUKTpNfSBmbWFwXG4gKi9cbmV4cG9ydCBjb25zdCBpdGVyYXRvck1hcCA9IChpdGVyYXRvciwgZm1hcCkgPT4gY3JlYXRlSXRlcmF0b3IoKCkgPT4ge1xuICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBpdGVyYXRvci5uZXh0KClcbiAgcmV0dXJuIHsgZG9uZSwgdmFsdWU6IGRvbmUgPyB1bmRlZmluZWQgOiBmbWFwKHZhbHVlKSB9XG59KVxuIl0sIm5hbWVzIjpbIm1hcEl0ZXJhdG9yIiwiaXRlcmF0b3IiLCJmIiwiU3ltYm9sIiwibmV4dCIsInIiLCJ2YWx1ZSIsImRvbmUiLCJ1bmRlZmluZWQiLCJjcmVhdGVJdGVyYXRvciIsIml0ZXJhdG9yRmlsdGVyIiwiZmlsdGVyIiwicmVzIiwiaXRlcmF0b3JNYXAiLCJmbWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/json.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/json.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/**\n * JSON utility functions.\n *\n * @module json\n */ /**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */ const stringify = JSON.stringify;\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */ const parse = JSON.parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7OztDQUtDLEdBQ00sTUFBTUEsWUFBWUMsS0FBS0QsU0FBUztBQUV2Qzs7Ozs7Q0FLQyxHQUNNLE1BQU1FLFFBQVFELEtBQUtDLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC9qc29uLmpzPzI5MmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBKU09OIHV0aWxpdHkgZnVuY3Rpb25zLlxuICpcbiAqIEBtb2R1bGUganNvblxuICovXG5cbi8qKlxuICogVHJhbnNmb3JtIEphdmFTY3JpcHQgb2JqZWN0IHRvIEpTT04uXG4gKlxuICogQHBhcmFtIHthbnl9IG9iamVjdFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3Qgc3RyaW5naWZ5ID0gSlNPTi5zdHJpbmdpZnlcblxuLyoqXG4gKiBQYXJzZSBKU09OIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30ganNvblxuICogQHJldHVybiB7YW55fVxuICovXG5leHBvcnQgY29uc3QgcGFyc2UgPSBKU09OLnBhcnNlXG4iXSwibmFtZXMiOlsic3RyaW5naWZ5IiwiSlNPTiIsInBhcnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/logging.common.js":
/*!*********************************************!*\
  !*** ./node_modules/lib0/logging.common.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLUE: () => (/* binding */ BLUE),\n/* harmony export */   BOLD: () => (/* binding */ BOLD),\n/* harmony export */   GREEN: () => (/* binding */ GREEN),\n/* harmony export */   GREY: () => (/* binding */ GREY),\n/* harmony export */   ORANGE: () => (/* binding */ ORANGE),\n/* harmony export */   PURPLE: () => (/* binding */ PURPLE),\n/* harmony export */   RED: () => (/* binding */ RED),\n/* harmony export */   UNBOLD: () => (/* binding */ UNBOLD),\n/* harmony export */   UNCOLOR: () => (/* binding */ UNCOLOR),\n/* harmony export */   computeNoColorLoggingArgs: () => (/* binding */ computeNoColorLoggingArgs),\n/* harmony export */   createModuleLogger: () => (/* binding */ createModuleLogger)\n/* harmony export */ });\n/* harmony import */ var _symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./symbol.js */ \"(ssr)/./node_modules/lib0/symbol.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./time.js */ \"(ssr)/./node_modules/lib0/time.js\");\n/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./environment.js */ \"(ssr)/./node_modules/lib0/environment.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/lib0/function.js\");\n/* harmony import */ var _json_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json.js */ \"(ssr)/./node_modules/lib0/json.js\");\n\n\n\n\n\nconst BOLD = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst UNBOLD = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst BLUE = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst GREY = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst GREEN = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst RED = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst PURPLE = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst ORANGE = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst UNCOLOR = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\n/* c8 ignore start */ /**\n * @param {Array<undefined|string|Symbol|Object|number|function():any>} args\n * @return {Array<string|object|number|undefined>}\n */ const computeNoColorLoggingArgs = (args)=>{\n    if (args.length === 1 && args[0]?.constructor === Function) {\n        args = /** @type {Array<string|Symbol|Object|number>} */ /** @type {[function]} */ args[0]();\n    }\n    const strBuilder = [];\n    const logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (arg === undefined) {\n            break;\n        } else if (arg.constructor === String || arg.constructor === Number) {\n            strBuilder.push(arg);\n        } else if (arg.constructor === Object) {\n            break;\n        }\n    }\n    if (i > 0) {\n        // create logArgs with what we have so far\n        logArgs.push(strBuilder.join(\"\"));\n    }\n    // append the rest\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (!(arg instanceof Symbol)) {\n            logArgs.push(arg);\n        }\n    }\n    return logArgs;\n};\n/* c8 ignore stop */ const loggingColors = [\n    GREEN,\n    PURPLE,\n    ORANGE,\n    BLUE\n];\nlet nextColor = 0;\nlet lastLoggingTime = _time_js__WEBPACK_IMPORTED_MODULE_1__.getUnixTime();\n/* c8 ignore start */ /**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */ const createModuleLogger = (_print, moduleName)=>{\n    const color = loggingColors[nextColor];\n    const debugRegexVar = _environment_js__WEBPACK_IMPORTED_MODULE_2__.getVariable(\"log\");\n    const doLogging = debugRegexVar !== null && (debugRegexVar === \"*\" || debugRegexVar === \"true\" || new RegExp(debugRegexVar, \"gi\").test(moduleName));\n    nextColor = (nextColor + 1) % loggingColors.length;\n    moduleName += \": \";\n    return !doLogging ? _function_js__WEBPACK_IMPORTED_MODULE_3__.nop : (...args)=>{\n        if (args.length === 1 && args[0]?.constructor === Function) {\n            args = args[0]();\n        }\n        const timeNow = _time_js__WEBPACK_IMPORTED_MODULE_1__.getUnixTime();\n        const timeDiff = timeNow - lastLoggingTime;\n        lastLoggingTime = timeNow;\n        _print(color, moduleName, UNCOLOR, ...args.map((arg)=>{\n            if (arg != null && arg.constructor === Uint8Array) {\n                arg = Array.from(arg);\n            }\n            const t = typeof arg;\n            switch(t){\n                case \"string\":\n                case \"symbol\":\n                    return arg;\n                default:\n                    {\n                        return _json_js__WEBPACK_IMPORTED_MODULE_4__.stringify(arg);\n                    }\n            }\n        }), color, \" +\" + timeDiff + \"ms\");\n    };\n} /* c8 ignore stop */ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9sb2dnaW5nLmNvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFDO0FBQ0o7QUFDTTtBQUNGO0FBQ0o7QUFFMUIsTUFBTUssT0FBT0wsOENBQWEsR0FBRTtBQUM1QixNQUFNTyxTQUFTUCw4Q0FBYSxHQUFFO0FBQzlCLE1BQU1RLE9BQU9SLDhDQUFhLEdBQUU7QUFDNUIsTUFBTVMsT0FBT1QsOENBQWEsR0FBRTtBQUM1QixNQUFNVSxRQUFRViw4Q0FBYSxHQUFFO0FBQzdCLE1BQU1XLE1BQU1YLDhDQUFhLEdBQUU7QUFDM0IsTUFBTVksU0FBU1osOENBQWEsR0FBRTtBQUM5QixNQUFNYSxTQUFTYiw4Q0FBYSxHQUFFO0FBQzlCLE1BQU1jLFVBQVVkLDhDQUFhLEdBQUU7QUFFdEMsbUJBQW1CLEdBQ25COzs7Q0FHQyxHQUNNLE1BQU1lLDRCQUE0QkMsQ0FBQUE7SUFDdkMsSUFBSUEsS0FBS0MsTUFBTSxLQUFLLEtBQUtELElBQUksQ0FBQyxFQUFFLEVBQUVFLGdCQUFnQkMsVUFBVTtRQUMxREgsT0FBTywrQ0FBK0MsR0FBOEIsdUJBQUgsR0FBSUEsSUFBSyxDQUFDLEVBQUU7SUFDL0Y7SUFDQSxNQUFNSSxhQUFhLEVBQUU7SUFDckIsTUFBTUMsVUFBVSxFQUFFO0lBQ2xCLDBEQUEwRDtJQUMxRCxJQUFJQyxJQUFJO0lBQ1IsTUFBT0EsSUFBSU4sS0FBS0MsTUFBTSxFQUFFSyxJQUFLO1FBQzNCLE1BQU1DLE1BQU1QLElBQUksQ0FBQ00sRUFBRTtRQUNuQixJQUFJQyxRQUFRQyxXQUFXO1lBQ3JCO1FBQ0YsT0FBTyxJQUFJRCxJQUFJTCxXQUFXLEtBQUtPLFVBQVVGLElBQUlMLFdBQVcsS0FBS1EsUUFBUTtZQUNuRU4sV0FBV08sSUFBSSxDQUFDSjtRQUNsQixPQUFPLElBQUlBLElBQUlMLFdBQVcsS0FBS1UsUUFBUTtZQUNyQztRQUNGO0lBQ0Y7SUFDQSxJQUFJTixJQUFJLEdBQUc7UUFDVCwwQ0FBMEM7UUFDMUNELFFBQVFNLElBQUksQ0FBQ1AsV0FBV1MsSUFBSSxDQUFDO0lBQy9CO0lBQ0Esa0JBQWtCO0lBQ2xCLE1BQU9QLElBQUlOLEtBQUtDLE1BQU0sRUFBRUssSUFBSztRQUMzQixNQUFNQyxNQUFNUCxJQUFJLENBQUNNLEVBQUU7UUFDbkIsSUFBSSxDQUFFQyxDQUFBQSxlQUFlTyxNQUFLLEdBQUk7WUFDNUJULFFBQVFNLElBQUksQ0FBQ0o7UUFDZjtJQUNGO0lBQ0EsT0FBT0Y7QUFDVCxFQUFDO0FBQ0Qsa0JBQWtCLEdBRWxCLE1BQU1VLGdCQUFnQjtJQUFDckI7SUFBT0U7SUFBUUM7SUFBUUw7Q0FBSztBQUNuRCxJQUFJd0IsWUFBWTtBQUNoQixJQUFJQyxrQkFBa0JoQyxpREFBZ0I7QUFFdEMsbUJBQW1CLEdBQ25COzs7O0NBSUMsR0FDTSxNQUFNa0MscUJBQXFCLENBQUNDLFFBQVFDO0lBQ3pDLE1BQU1DLFFBQVFQLGFBQWEsQ0FBQ0MsVUFBVTtJQUN0QyxNQUFNTyxnQkFBZ0JyQyx3REFBZSxDQUFDO0lBQ3RDLE1BQU11QyxZQUFZRixrQkFBa0IsUUFDakNBLENBQUFBLGtCQUFrQixPQUFPQSxrQkFBa0IsVUFDMUMsSUFBSUcsT0FBT0gsZUFBZSxNQUFNSSxJQUFJLENBQUNOLFdBQVU7SUFDbkRMLFlBQVksQ0FBQ0EsWUFBWSxLQUFLRCxjQUFjZCxNQUFNO0lBQ2xEb0IsY0FBYztJQUNkLE9BQU8sQ0FBQ0ksWUFDSnRDLDZDQUFRLEdBQ1IsQ0FBQyxHQUFHYTtRQUNGLElBQUlBLEtBQUtDLE1BQU0sS0FBSyxLQUFLRCxJQUFJLENBQUMsRUFBRSxFQUFFRSxnQkFBZ0JDLFVBQVU7WUFDMURILE9BQU9BLElBQUksQ0FBQyxFQUFFO1FBQ2hCO1FBQ0EsTUFBTTZCLFVBQVU1QyxpREFBZ0I7UUFDaEMsTUFBTTZDLFdBQVdELFVBQVVaO1FBQzNCQSxrQkFBa0JZO1FBQ2xCVCxPQUNFRSxPQUNBRCxZQUNBdkIsWUFDR0UsS0FBSytCLEdBQUcsQ0FBQyxDQUFDeEI7WUFDWCxJQUFJQSxPQUFPLFFBQVFBLElBQUlMLFdBQVcsS0FBSzhCLFlBQVk7Z0JBQ2pEekIsTUFBTTBCLE1BQU1DLElBQUksQ0FBQzNCO1lBQ25CO1lBQ0EsTUFBTTRCLElBQUksT0FBTzVCO1lBQ2pCLE9BQVE0QjtnQkFDTixLQUFLO2dCQUNMLEtBQUs7b0JBQ0gsT0FBTzVCO2dCQUNUO29CQUFTO3dCQUNQLE9BQU9uQiwrQ0FBYyxDQUFDbUI7b0JBQ3hCO1lBQ0Y7UUFDRixJQUNBZSxPQUNBLE9BQU9RLFdBQVc7SUFFdEI7QUFDTixFQUNBLGtCQUFrQixJQURqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bmNkcmF3LWNsaWVudC8uL25vZGVfbW9kdWxlcy9saWIwL2xvZ2dpbmcuY29tbW9uLmpzPzE5ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgc3ltYm9sIGZyb20gJy4vc3ltYm9sLmpzJ1xuaW1wb3J0ICogYXMgdGltZSBmcm9tICcuL3RpbWUuanMnXG5pbXBvcnQgKiBhcyBlbnYgZnJvbSAnLi9lbnZpcm9ubWVudC5qcydcbmltcG9ydCAqIGFzIGZ1bmMgZnJvbSAnLi9mdW5jdGlvbi5qcydcbmltcG9ydCAqIGFzIGpzb24gZnJvbSAnLi9qc29uLmpzJ1xuXG5leHBvcnQgY29uc3QgQk9MRCA9IHN5bWJvbC5jcmVhdGUoKVxuZXhwb3J0IGNvbnN0IFVOQk9MRCA9IHN5bWJvbC5jcmVhdGUoKVxuZXhwb3J0IGNvbnN0IEJMVUUgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBHUkVZID0gc3ltYm9sLmNyZWF0ZSgpXG5leHBvcnQgY29uc3QgR1JFRU4gPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBSRUQgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBQVVJQTEUgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBPUkFOR0UgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBVTkNPTE9SID0gc3ltYm9sLmNyZWF0ZSgpXG5cbi8qIGM4IGlnbm9yZSBzdGFydCAqL1xuLyoqXG4gKiBAcGFyYW0ge0FycmF5PHVuZGVmaW5lZHxzdHJpbmd8U3ltYm9sfE9iamVjdHxudW1iZXJ8ZnVuY3Rpb24oKTphbnk+fSBhcmdzXG4gKiBAcmV0dXJuIHtBcnJheTxzdHJpbmd8b2JqZWN0fG51bWJlcnx1bmRlZmluZWQ+fVxuICovXG5leHBvcnQgY29uc3QgY29tcHV0ZU5vQ29sb3JMb2dnaW5nQXJncyA9IGFyZ3MgPT4ge1xuICBpZiAoYXJncy5sZW5ndGggPT09IDEgJiYgYXJnc1swXT8uY29uc3RydWN0b3IgPT09IEZ1bmN0aW9uKSB7XG4gICAgYXJncyA9IC8qKiBAdHlwZSB7QXJyYXk8c3RyaW5nfFN5bWJvbHxPYmplY3R8bnVtYmVyPn0gKi8gKC8qKiBAdHlwZSB7W2Z1bmN0aW9uXX0gKi8gKGFyZ3MpWzBdKCkpXG4gIH1cbiAgY29uc3Qgc3RyQnVpbGRlciA9IFtdXG4gIGNvbnN0IGxvZ0FyZ3MgPSBbXVxuICAvLyB0cnkgd2l0aCBmb3JtYXR0aW5nIHVudGlsIHdlIGZpbmQgc29tZXRoaW5nIHVuc3VwcG9ydGVkXG4gIGxldCBpID0gMFxuICBmb3IgKDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBhcmcgPSBhcmdzW2ldXG4gICAgaWYgKGFyZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBicmVha1xuICAgIH0gZWxzZSBpZiAoYXJnLmNvbnN0cnVjdG9yID09PSBTdHJpbmcgfHwgYXJnLmNvbnN0cnVjdG9yID09PSBOdW1iZXIpIHtcbiAgICAgIHN0ckJ1aWxkZXIucHVzaChhcmcpXG4gICAgfSBlbHNlIGlmIChhcmcuY29uc3RydWN0b3IgPT09IE9iamVjdCkge1xuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cbiAgaWYgKGkgPiAwKSB7XG4gICAgLy8gY3JlYXRlIGxvZ0FyZ3Mgd2l0aCB3aGF0IHdlIGhhdmUgc28gZmFyXG4gICAgbG9nQXJncy5wdXNoKHN0ckJ1aWxkZXIuam9pbignJykpXG4gIH1cbiAgLy8gYXBwZW5kIHRoZSByZXN0XG4gIGZvciAoOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGFyZyA9IGFyZ3NbaV1cbiAgICBpZiAoIShhcmcgaW5zdGFuY2VvZiBTeW1ib2wpKSB7XG4gICAgICBsb2dBcmdzLnB1c2goYXJnKVxuICAgIH1cbiAgfVxuICByZXR1cm4gbG9nQXJnc1xufVxuLyogYzggaWdub3JlIHN0b3AgKi9cblxuY29uc3QgbG9nZ2luZ0NvbG9ycyA9IFtHUkVFTiwgUFVSUExFLCBPUkFOR0UsIEJMVUVdXG5sZXQgbmV4dENvbG9yID0gMFxubGV0IGxhc3RMb2dnaW5nVGltZSA9IHRpbWUuZ2V0VW5peFRpbWUoKVxuXG4vKiBjOCBpZ25vcmUgc3RhcnQgKi9cbi8qKlxuICogQHBhcmFtIHtmdW5jdGlvbiguLi5hbnkpOnZvaWR9IF9wcmludFxuICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZU5hbWVcbiAqIEByZXR1cm4ge2Z1bmN0aW9uKC4uLmFueSk6dm9pZH1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU1vZHVsZUxvZ2dlciA9IChfcHJpbnQsIG1vZHVsZU5hbWUpID0+IHtcbiAgY29uc3QgY29sb3IgPSBsb2dnaW5nQ29sb3JzW25leHRDb2xvcl1cbiAgY29uc3QgZGVidWdSZWdleFZhciA9IGVudi5nZXRWYXJpYWJsZSgnbG9nJylcbiAgY29uc3QgZG9Mb2dnaW5nID0gZGVidWdSZWdleFZhciAhPT0gbnVsbCAmJlxuICAgIChkZWJ1Z1JlZ2V4VmFyID09PSAnKicgfHwgZGVidWdSZWdleFZhciA9PT0gJ3RydWUnIHx8XG4gICAgICBuZXcgUmVnRXhwKGRlYnVnUmVnZXhWYXIsICdnaScpLnRlc3QobW9kdWxlTmFtZSkpXG4gIG5leHRDb2xvciA9IChuZXh0Q29sb3IgKyAxKSAlIGxvZ2dpbmdDb2xvcnMubGVuZ3RoXG4gIG1vZHVsZU5hbWUgKz0gJzogJ1xuICByZXR1cm4gIWRvTG9nZ2luZ1xuICAgID8gZnVuYy5ub3BcbiAgICA6ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCA9PT0gMSAmJiBhcmdzWzBdPy5jb25zdHJ1Y3RvciA9PT0gRnVuY3Rpb24pIHtcbiAgICAgICAgICBhcmdzID0gYXJnc1swXSgpXG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdGltZU5vdyA9IHRpbWUuZ2V0VW5peFRpbWUoKVxuICAgICAgICBjb25zdCB0aW1lRGlmZiA9IHRpbWVOb3cgLSBsYXN0TG9nZ2luZ1RpbWVcbiAgICAgICAgbGFzdExvZ2dpbmdUaW1lID0gdGltZU5vd1xuICAgICAgICBfcHJpbnQoXG4gICAgICAgICAgY29sb3IsXG4gICAgICAgICAgbW9kdWxlTmFtZSxcbiAgICAgICAgICBVTkNPTE9SLFxuICAgICAgICAgIC4uLmFyZ3MubWFwKChhcmcpID0+IHtcbiAgICAgICAgICAgIGlmIChhcmcgIT0gbnVsbCAmJiBhcmcuY29uc3RydWN0b3IgPT09IFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgICAgYXJnID0gQXJyYXkuZnJvbShhcmcpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0ID0gdHlwZW9mIGFyZ1xuICAgICAgICAgICAgc3dpdGNoICh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICAgIGNhc2UgJ3N5bWJvbCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFyZ1xuICAgICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGpzb24uc3RyaW5naWZ5KGFyZylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIGNvbG9yLFxuICAgICAgICAgICcgKycgKyB0aW1lRGlmZiArICdtcydcbiAgICAgICAgKVxuICAgICAgfVxufVxuLyogYzggaWdub3JlIHN0b3AgKi9cbiJdLCJuYW1lcyI6WyJzeW1ib2wiLCJ0aW1lIiwiZW52IiwiZnVuYyIsImpzb24iLCJCT0xEIiwiY3JlYXRlIiwiVU5CT0xEIiwiQkxVRSIsIkdSRVkiLCJHUkVFTiIsIlJFRCIsIlBVUlBMRSIsIk9SQU5HRSIsIlVOQ09MT1IiLCJjb21wdXRlTm9Db2xvckxvZ2dpbmdBcmdzIiwiYXJncyIsImxlbmd0aCIsImNvbnN0cnVjdG9yIiwiRnVuY3Rpb24iLCJzdHJCdWlsZGVyIiwibG9nQXJncyIsImkiLCJhcmciLCJ1bmRlZmluZWQiLCJTdHJpbmciLCJOdW1iZXIiLCJwdXNoIiwiT2JqZWN0Iiwiam9pbiIsIlN5bWJvbCIsImxvZ2dpbmdDb2xvcnMiLCJuZXh0Q29sb3IiLCJsYXN0TG9nZ2luZ1RpbWUiLCJnZXRVbml4VGltZSIsImNyZWF0ZU1vZHVsZUxvZ2dlciIsIl9wcmludCIsIm1vZHVsZU5hbWUiLCJjb2xvciIsImRlYnVnUmVnZXhWYXIiLCJnZXRWYXJpYWJsZSIsImRvTG9nZ2luZyIsIlJlZ0V4cCIsInRlc3QiLCJub3AiLCJ0aW1lTm93IiwidGltZURpZmYiLCJtYXAiLCJVaW50OEFycmF5IiwiQXJyYXkiLCJmcm9tIiwidCIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/logging.common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/logging.node.js":
/*!*******************************************!*\
  !*** ./node_modules/lib0/logging.node.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLUE: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BLUE),\n/* harmony export */   BOLD: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BOLD),\n/* harmony export */   GREEN: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREEN),\n/* harmony export */   GREY: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREY),\n/* harmony export */   ORANGE: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.ORANGE),\n/* harmony export */   PURPLE: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.PURPLE),\n/* harmony export */   RED: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.RED),\n/* harmony export */   UNBOLD: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNBOLD),\n/* harmony export */   UNCOLOR: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNCOLOR),\n/* harmony export */   createModuleLogger: () => (/* binding */ createModuleLogger),\n/* harmony export */   createVConsole: () => (/* binding */ createVConsole),\n/* harmony export */   group: () => (/* binding */ group),\n/* harmony export */   groupCollapsed: () => (/* binding */ groupCollapsed),\n/* harmony export */   groupEnd: () => (/* binding */ groupEnd),\n/* harmony export */   print: () => (/* binding */ print),\n/* harmony export */   printCanvas: () => (/* binding */ printCanvas),\n/* harmony export */   printDom: () => (/* binding */ printDom),\n/* harmony export */   printError: () => (/* binding */ printError),\n/* harmony export */   printImg: () => (/* binding */ printImg),\n/* harmony export */   printImgBase64: () => (/* binding */ printImgBase64),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment.js */ \"(ssr)/./node_modules/lib0/environment.js\");\n/* harmony import */ var _logging_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logging.common.js */ \"(ssr)/./node_modules/lib0/logging.common.js\");\n/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */ \n\n\nconst _nodeStyleMap = {\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BOLD]: \"\\x1b[1m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNBOLD]: \"\\x1b[2m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BLUE]: \"\\x1b[34m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREEN]: \"\\x1b[32m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREY]: \"\\x1b[37m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.RED]: \"\\x1b[31m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.PURPLE]: \"\\x1b[35m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.ORANGE]: \"\\x1b[38;5;208m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNCOLOR]: \"\\x1b[0m\"\n};\n/* c8 ignore start */ /**\n * @param {Array<string|undefined|Symbol|Object|number|function():Array<any>>} args\n * @return {Array<string|object|number|undefined>}\n */ const computeNodeLoggingArgs = (args)=>{\n    if (args.length === 1 && args[0]?.constructor === Function) {\n        args = /** @type {Array<string|Symbol|Object|number>} */ /** @type {[function]} */ args[0]();\n    }\n    const strBuilder = [];\n    const logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        // @ts-ignore\n        const style = _nodeStyleMap[arg];\n        if (style !== undefined) {\n            strBuilder.push(style);\n        } else {\n            if (arg === undefined) {\n                break;\n            } else if (arg.constructor === String || arg.constructor === Number) {\n                strBuilder.push(arg);\n            } else {\n                break;\n            }\n        }\n    }\n    if (i > 0) {\n        // create logArgs with what we have so far\n        strBuilder.push(\"\\x1b[0m\");\n        logArgs.push(strBuilder.join(\"\"));\n    }\n    // append the rest\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (!(arg instanceof Symbol)) {\n            logArgs.push(arg);\n        }\n    }\n    return logArgs;\n};\n/* c8 ignore stop */ /* c8 ignore start */ const computeLoggingArgs = _environment_js__WEBPACK_IMPORTED_MODULE_1__.supportsColor ? computeNodeLoggingArgs : _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.computeNoColorLoggingArgs;\n/* c8 ignore stop */ /**\n * @param {Array<string|Symbol|Object|number|undefined>} args\n */ const print = (...args)=>{\n    console.log(...computeLoggingArgs(args));\n};\n/* c8 ignore start */ /**\n * @param {Array<string|Symbol|Object|number>} args\n */ const warn = (...args)=>{\n    console.warn(...computeLoggingArgs(args));\n};\n/* c8 ignore stop */ /**\n * @param {Error} err\n */ /* c8 ignore start */ const printError = (err)=>{\n    console.error(err);\n};\n/* c8 ignore stop */ /**\n * @param {string} _url image location\n * @param {number} _height height of the image in pixel\n */ /* c8 ignore start */ const printImg = (_url, _height)=>{\n// console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n};\n/* c8 ignore stop */ /**\n * @param {string} base64\n * @param {number} height\n */ /* c8 ignore next 2 */ const printImgBase64 = (base64, height)=>printImg(`data:image/gif;base64,${base64}`, height);\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */ /* c8 ignore next 3 */ const group = (...args)=>{\n    console.group(...computeLoggingArgs(args));\n};\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */ /* c8 ignore next 3 */ const groupCollapsed = (...args)=>{\n    console.groupCollapsed(...computeLoggingArgs(args));\n};\n/* c8 ignore next 3 */ const groupEnd = ()=>{\n    console.groupEnd();\n};\n/**\n * @param {function():Node} _createNode\n */ /* c8 ignore next 2 */ const printDom = (_createNode)=>{};\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */ /* c8 ignore next 2 */ const printCanvas = (canvas, height)=>printImg(canvas.toDataURL(), height);\n/**\n * @param {Element} _dom\n */ /* c8 ignore next */ const createVConsole = (_dom)=>{};\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */ /* c8 ignore next */ const createModuleLogger = (moduleName)=>_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.createModuleLogger(print, moduleName);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/logging.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/map.js":
/*!**********************************!*\
  !*** ./node_modules/lib0/map.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   setIfUndefined: () => (/* binding */ setIfUndefined)\n/* harmony export */ });\n/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */ /**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */ const create = ()=>new Map();\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */ const copy = (m)=>{\n    const r = create();\n    m.forEach((v, k)=>{\n        r.set(k, v);\n    });\n    return r;\n};\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */ const setIfUndefined = (map, key, createT)=>{\n    let set = map.get(key);\n    if (set === undefined) {\n        map.set(key, set = createT());\n    }\n    return set;\n};\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */ const map = (m, f)=>{\n    const res = [];\n    for (const [key, value] of m){\n        res.push(f(value, key));\n    }\n    return res;\n};\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */ const any = (m, f)=>{\n    for (const [key, value] of m){\n        if (f(value, key)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */ const all = (m, f)=>{\n    for (const [key, value] of m){\n        if (!f(value, key)) {\n            return false;\n        }\n    }\n    return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7Ozs7O0NBT0MsR0FDTSxNQUFNQSxTQUFTLElBQU0sSUFBSUMsTUFBSztBQUVyQzs7Ozs7OztDQU9DLEdBQ00sTUFBTUMsT0FBT0MsQ0FBQUE7SUFDbEIsTUFBTUMsSUFBSUo7SUFDVkcsRUFBRUUsT0FBTyxDQUFDLENBQUNDLEdBQUdDO1FBQVFILEVBQUVJLEdBQUcsQ0FBQ0QsR0FBR0Q7SUFBRztJQUNsQyxPQUFPRjtBQUNULEVBQUM7QUFFRDs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxNQUFNSyxpQkFBaUIsQ0FBQ0MsS0FBS0MsS0FBS0M7SUFDdkMsSUFBSUosTUFBTUUsSUFBSUcsR0FBRyxDQUFDRjtJQUNsQixJQUFJSCxRQUFRTSxXQUFXO1FBQ3JCSixJQUFJRixHQUFHLENBQUNHLEtBQUtILE1BQU1JO0lBQ3JCO0lBQ0EsT0FBT0o7QUFDVCxFQUFDO0FBRUQ7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLE1BQU1FLE1BQU0sQ0FBQ1AsR0FBR1k7SUFDckIsTUFBTUMsTUFBTSxFQUFFO0lBQ2QsS0FBSyxNQUFNLENBQUNMLEtBQUtNLE1BQU0sSUFBSWQsRUFBRztRQUM1QmEsSUFBSUUsSUFBSSxDQUFDSCxFQUFFRSxPQUFPTjtJQUNwQjtJQUNBLE9BQU9LO0FBQ1QsRUFBQztBQUVEOzs7Ozs7Ozs7OztDQVdDLEdBQ00sTUFBTUcsTUFBTSxDQUFDaEIsR0FBR1k7SUFDckIsS0FBSyxNQUFNLENBQUNKLEtBQUtNLE1BQU0sSUFBSWQsRUFBRztRQUM1QixJQUFJWSxFQUFFRSxPQUFPTixNQUFNO1lBQ2pCLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNULEVBQUM7QUFFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxNQUFNUyxNQUFNLENBQUNqQixHQUFHWTtJQUNyQixLQUFLLE1BQU0sQ0FBQ0osS0FBS00sTUFBTSxJQUFJZCxFQUFHO1FBQzVCLElBQUksQ0FBQ1ksRUFBRUUsT0FBT04sTUFBTTtZQUNsQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvbWFwLmpzPzk0NzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IG1vZHVsZSB0byB3b3JrIHdpdGgga2V5LXZhbHVlIHN0b3Jlcy5cbiAqXG4gKiBAbW9kdWxlIG1hcFxuICovXG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBNYXAgaW5zdGFuY2UuXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAcmV0dXJuIHtNYXA8YW55LCBhbnk+fVxuICpcbiAqIEBmdW5jdGlvblxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKCkgPT4gbmV3IE1hcCgpXG5cbi8qKlxuICogQ29weSBhIE1hcCBvYmplY3QgaW50byBhIGZyZXNoIE1hcCBvYmplY3QuXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUgSyxWXG4gKiBAcGFyYW0ge01hcDxLLFY+fSBtXG4gKiBAcmV0dXJuIHtNYXA8SyxWPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNvcHkgPSBtID0+IHtcbiAgY29uc3QgciA9IGNyZWF0ZSgpXG4gIG0uZm9yRWFjaCgodiwgaykgPT4geyByLnNldChrLCB2KSB9KVxuICByZXR1cm4gclxufVxuXG4vKipcbiAqIEdldCBtYXAgcHJvcGVydHkuIENyZWF0ZSBUIGlmIHByb3BlcnR5IGlzIHVuZGVmaW5lZCBhbmQgc2V0IFQgb24gbWFwLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBsaXN0ZW5lcnMgPSBtYXAuc2V0SWZVbmRlZmluZWQoZXZlbnRzLCAnZXZlbnROYW1lJywgc2V0LmNyZWF0ZSlcbiAqIGxpc3RlbmVycy5hZGQobGlzdGVuZXIpXG4gKiBgYGBcbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEB0ZW1wbGF0ZSB7TWFwPGFueSwgYW55Pn0gTUFQXG4gKiBAdGVtcGxhdGUge01BUCBleHRlbmRzIE1hcDxhbnksaW5mZXIgVj4gPyBmdW5jdGlvbigpOlYgOiB1bmtub3dufSBDRlxuICogQHBhcmFtIHtNQVB9IG1hcFxuICogQHBhcmFtIHtNQVAgZXh0ZW5kcyBNYXA8aW5mZXIgSyxhbnk+ID8gSyA6IHVua25vd259IGtleVxuICogQHBhcmFtIHtDRn0gY3JlYXRlVFxuICogQHJldHVybiB7UmV0dXJuVHlwZTxDRj59XG4gKi9cbmV4cG9ydCBjb25zdCBzZXRJZlVuZGVmaW5lZCA9IChtYXAsIGtleSwgY3JlYXRlVCkgPT4ge1xuICBsZXQgc2V0ID0gbWFwLmdldChrZXkpXG4gIGlmIChzZXQgPT09IHVuZGVmaW5lZCkge1xuICAgIG1hcC5zZXQoa2V5LCBzZXQgPSBjcmVhdGVUKCkpXG4gIH1cbiAgcmV0dXJuIHNldFxufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gQXJyYXkgYW5kIHBvcHVsYXRlcyBpdCB3aXRoIHRoZSBjb250ZW50IG9mIGFsbCBrZXktdmFsdWUgcGFpcnMgdXNpbmcgdGhlIGBmKHZhbHVlLCBrZXkpYCBmdW5jdGlvbi5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEB0ZW1wbGF0ZSBLXG4gKiBAdGVtcGxhdGUgVlxuICogQHRlbXBsYXRlIFJcbiAqIEBwYXJhbSB7TWFwPEssVj59IG1cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVixLKTpSfSBmXG4gKiBAcmV0dXJuIHtBcnJheTxSPn1cbiAqL1xuZXhwb3J0IGNvbnN0IG1hcCA9IChtLCBmKSA9PiB7XG4gIGNvbnN0IHJlcyA9IFtdXG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIG0pIHtcbiAgICByZXMucHVzaChmKHZhbHVlLCBrZXkpKVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuLyoqXG4gKiBUZXN0cyB3aGV0aGVyIGFueSBrZXktdmFsdWUgcGFpcnMgcGFzcyB0aGUgdGVzdCBpbXBsZW1lbnRlZCBieSBgZih2YWx1ZSwga2V5KWAuXG4gKlxuICogQHRvZG8gc2hvdWxkIHJlbmFtZSB0byBzb21lIC0gc2ltaWxhcmx5IHRvIEFycmF5LnNvbWVcbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEB0ZW1wbGF0ZSBLXG4gKiBAdGVtcGxhdGUgVlxuICogQHBhcmFtIHtNYXA8SyxWPn0gbVxuICogQHBhcmFtIHtmdW5jdGlvbihWLEspOmJvb2xlYW59IGZcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBhbnkgPSAobSwgZikgPT4ge1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtKSB7XG4gICAgaWYgKGYodmFsdWUsIGtleSkpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIFRlc3RzIHdoZXRoZXIgYWxsIGtleS12YWx1ZSBwYWlycyBwYXNzIHRoZSB0ZXN0IGltcGxlbWVudGVkIGJ5IGBmKHZhbHVlLCBrZXkpYC5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEB0ZW1wbGF0ZSBLXG4gKiBAdGVtcGxhdGUgVlxuICogQHBhcmFtIHtNYXA8SyxWPn0gbVxuICogQHBhcmFtIHtmdW5jdGlvbihWLEspOmJvb2xlYW59IGZcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBhbGwgPSAobSwgZikgPT4ge1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtKSB7XG4gICAgaWYgKCFmKHZhbHVlLCBrZXkpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGUiLCJNYXAiLCJjb3B5IiwibSIsInIiLCJmb3JFYWNoIiwidiIsImsiLCJzZXQiLCJzZXRJZlVuZGVmaW5lZCIsIm1hcCIsImtleSIsImNyZWF0ZVQiLCJnZXQiLCJ1bmRlZmluZWQiLCJmIiwicmVzIiwidmFsdWUiLCJwdXNoIiwiYW55IiwiYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/math.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/math.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abs: () => (/* binding */ abs),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   ceil: () => (/* binding */ ceil),\n/* harmony export */   exp10: () => (/* binding */ exp10),\n/* harmony export */   floor: () => (/* binding */ floor),\n/* harmony export */   imul: () => (/* binding */ imul),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNegativeZero: () => (/* binding */ isNegativeZero),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   log10: () => (/* binding */ log10),\n/* harmony export */   log2: () => (/* binding */ log2),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   pow: () => (/* binding */ pow),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   sqrt: () => (/* binding */ sqrt)\n/* harmony export */ });\n/**\n * Common Math expressions.\n *\n * @module math\n */ const floor = Math.floor;\nconst ceil = Math.ceil;\nconst abs = Math.abs;\nconst imul = Math.imul;\nconst round = Math.round;\nconst log10 = Math.log10;\nconst log2 = Math.log2;\nconst log = Math.log;\nconst sqrt = Math.sqrt;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */ const add = (a, b)=>a + b;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */ const min = (a, b)=>a < b ? a : b;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */ const max = (a, b)=>a > b ? a : b;\nconst isNaN = Number.isNaN;\nconst pow = Math.pow;\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */ const exp10 = (exp)=>Math.pow(10, exp);\nconst sign = Math.sign;\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */ const isNegativeZero = (n)=>n !== 0 ? n < 0 : 1 / n < 0;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVNLE1BQU1BLFFBQVFDLEtBQUtELEtBQUs7QUFDeEIsTUFBTUUsT0FBT0QsS0FBS0MsSUFBSTtBQUN0QixNQUFNQyxNQUFNRixLQUFLRSxHQUFHO0FBQ3BCLE1BQU1DLE9BQU9ILEtBQUtHLElBQUk7QUFDdEIsTUFBTUMsUUFBUUosS0FBS0ksS0FBSztBQUN4QixNQUFNQyxRQUFRTCxLQUFLSyxLQUFLO0FBQ3hCLE1BQU1DLE9BQU9OLEtBQUtNLElBQUk7QUFDdEIsTUFBTUMsTUFBTVAsS0FBS08sR0FBRztBQUNwQixNQUFNQyxPQUFPUixLQUFLUSxJQUFJO0FBRTdCOzs7OztDQUtDLEdBQ00sTUFBTUMsTUFBTSxDQUFDQyxHQUFHQyxJQUFNRCxJQUFJQyxFQUFDO0FBRWxDOzs7OztDQUtDLEdBQ00sTUFBTUMsTUFBTSxDQUFDRixHQUFHQyxJQUFNRCxJQUFJQyxJQUFJRCxJQUFJQyxFQUFDO0FBRTFDOzs7OztDQUtDLEdBQ00sTUFBTUUsTUFBTSxDQUFDSCxHQUFHQyxJQUFNRCxJQUFJQyxJQUFJRCxJQUFJQyxFQUFDO0FBRW5DLE1BQU1HLFFBQVFDLE9BQU9ELEtBQUs7QUFFMUIsTUFBTUUsTUFBTWhCLEtBQUtnQixHQUFHO0FBQzNCOzs7OztDQUtDLEdBQ00sTUFBTUMsUUFBUUMsQ0FBQUEsTUFBT2xCLEtBQUtnQixHQUFHLENBQUMsSUFBSUUsS0FBSTtBQUV0QyxNQUFNQyxPQUFPbkIsS0FBS21CLElBQUk7QUFFN0I7OztDQUdDLEdBQ00sTUFBTUMsaUJBQWlCQyxDQUFBQSxJQUFLQSxNQUFNLElBQUlBLElBQUksSUFBSSxJQUFJQSxJQUFJLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC9tYXRoLmpzPzgxNzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb21tb24gTWF0aCBleHByZXNzaW9ucy5cbiAqXG4gKiBAbW9kdWxlIG1hdGhcbiAqL1xuXG5leHBvcnQgY29uc3QgZmxvb3IgPSBNYXRoLmZsb29yXG5leHBvcnQgY29uc3QgY2VpbCA9IE1hdGguY2VpbFxuZXhwb3J0IGNvbnN0IGFicyA9IE1hdGguYWJzXG5leHBvcnQgY29uc3QgaW11bCA9IE1hdGguaW11bFxuZXhwb3J0IGNvbnN0IHJvdW5kID0gTWF0aC5yb3VuZFxuZXhwb3J0IGNvbnN0IGxvZzEwID0gTWF0aC5sb2cxMFxuZXhwb3J0IGNvbnN0IGxvZzIgPSBNYXRoLmxvZzJcbmV4cG9ydCBjb25zdCBsb2cgPSBNYXRoLmxvZ1xuZXhwb3J0IGNvbnN0IHNxcnQgPSBNYXRoLnNxcnRcblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gKiBAcGFyYW0ge251bWJlcn0gYlxuICogQHJldHVybiB7bnVtYmVyfSBUaGUgc3VtIG9mIGEgYW5kIGJcbiAqL1xuZXhwb3J0IGNvbnN0IGFkZCA9IChhLCBiKSA9PiBhICsgYlxuXG4vKipcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtudW1iZXJ9IGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtudW1iZXJ9IFRoZSBzbWFsbGVyIGVsZW1lbnQgb2YgYSBhbmQgYlxuICovXG5leHBvcnQgY29uc3QgbWluID0gKGEsIGIpID0+IGEgPCBiID8gYSA6IGJcblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gKiBAcGFyYW0ge251bWJlcn0gYlxuICogQHJldHVybiB7bnVtYmVyfSBUaGUgYmlnZ2VyIGVsZW1lbnQgb2YgYSBhbmQgYlxuICovXG5leHBvcnQgY29uc3QgbWF4ID0gKGEsIGIpID0+IGEgPiBiID8gYSA6IGJcblxuZXhwb3J0IGNvbnN0IGlzTmFOID0gTnVtYmVyLmlzTmFOXG5cbmV4cG9ydCBjb25zdCBwb3cgPSBNYXRoLnBvd1xuLyoqXG4gKiBCYXNlIDEwIGV4cG9uZW50aWFsIGZ1bmN0aW9uLiBSZXR1cm5zIHRoZSB2YWx1ZSBvZiAxMCByYWlzZWQgdG8gdGhlIHBvd2VyIG9mIHBvdy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gZXhwXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBleHAxMCA9IGV4cCA9PiBNYXRoLnBvdygxMCwgZXhwKVxuXG5leHBvcnQgY29uc3Qgc2lnbiA9IE1hdGguc2lnblxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBuXG4gKiBAcmV0dXJuIHtib29sZWFufSBXZXRoZXIgbiBpcyBuZWdhdGl2ZS4gVGhpcyBmdW5jdGlvbiBhbHNvIGRpZmZlcmVudGlhdGVzIGJldHdlZW4gLTAgYW5kICswXG4gKi9cbmV4cG9ydCBjb25zdCBpc05lZ2F0aXZlWmVybyA9IG4gPT4gbiAhPT0gMCA/IG4gPCAwIDogMSAvIG4gPCAwXG4iXSwibmFtZXMiOlsiZmxvb3IiLCJNYXRoIiwiY2VpbCIsImFicyIsImltdWwiLCJyb3VuZCIsImxvZzEwIiwibG9nMiIsImxvZyIsInNxcnQiLCJhZGQiLCJhIiwiYiIsIm1pbiIsIm1heCIsImlzTmFOIiwiTnVtYmVyIiwicG93IiwiZXhwMTAiLCJleHAiLCJzaWduIiwiaXNOZWdhdGl2ZVplcm8iLCJuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/metric.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/metric.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   atto: () => (/* binding */ atto),\n/* harmony export */   centi: () => (/* binding */ centi),\n/* harmony export */   deca: () => (/* binding */ deca),\n/* harmony export */   deci: () => (/* binding */ deci),\n/* harmony export */   exa: () => (/* binding */ exa),\n/* harmony export */   femto: () => (/* binding */ femto),\n/* harmony export */   giga: () => (/* binding */ giga),\n/* harmony export */   hecto: () => (/* binding */ hecto),\n/* harmony export */   kilo: () => (/* binding */ kilo),\n/* harmony export */   mega: () => (/* binding */ mega),\n/* harmony export */   micro: () => (/* binding */ micro),\n/* harmony export */   milli: () => (/* binding */ milli),\n/* harmony export */   nano: () => (/* binding */ nano),\n/* harmony export */   peta: () => (/* binding */ peta),\n/* harmony export */   pico: () => (/* binding */ pico),\n/* harmony export */   prefix: () => (/* binding */ prefix),\n/* harmony export */   tera: () => (/* binding */ tera),\n/* harmony export */   yocto: () => (/* binding */ yocto),\n/* harmony export */   yotta: () => (/* binding */ yotta),\n/* harmony export */   zepto: () => (/* binding */ zepto),\n/* harmony export */   zetta: () => (/* binding */ zetta)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/**\n * Utility module to convert metric values.\n *\n * @module metric\n */ \nconst yotta = 1e24;\nconst zetta = 1e21;\nconst exa = 1e18;\nconst peta = 1e15;\nconst tera = 1e12;\nconst giga = 1e9;\nconst mega = 1e6;\nconst kilo = 1e3;\nconst hecto = 1e2;\nconst deca = 10;\nconst deci = 0.1;\nconst centi = 0.01;\nconst milli = 1e-3;\nconst micro = 1e-6;\nconst nano = 1e-9;\nconst pico = 1e-12;\nconst femto = 1e-15;\nconst atto = 1e-18;\nconst zepto = 1e-21;\nconst yocto = 1e-24;\nconst prefixUp = [\n    \"\",\n    \"k\",\n    \"M\",\n    \"G\",\n    \"T\",\n    \"P\",\n    \"E\",\n    \"Z\",\n    \"Y\"\n];\nconst prefixDown = [\n    \"\",\n    \"m\",\n    \"μ\",\n    \"n\",\n    \"p\",\n    \"f\",\n    \"a\",\n    \"z\",\n    \"y\"\n];\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */ const prefix = (n, baseMultiplier = 0)=>{\n    const nPow = n === 0 ? 0 : _math_js__WEBPACK_IMPORTED_MODULE_0__.log10(n);\n    let mult = 0;\n    while(nPow < mult * 3 && baseMultiplier > -8){\n        baseMultiplier--;\n        mult--;\n    }\n    while(nPow >= 3 + mult * 3 && baseMultiplier < 8){\n        baseMultiplier++;\n        mult++;\n    }\n    const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier];\n    return {\n        n: _math_js__WEBPACK_IMPORTED_MODULE_0__.round((mult > 0 ? n / _math_js__WEBPACK_IMPORTED_MODULE_0__.exp10(mult * 3) : n * _math_js__WEBPACK_IMPORTED_MODULE_0__.exp10(mult * -3)) * 1e12) / 1e12,\n        prefix\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tZXRyaWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFZ0M7QUFFMUIsTUFBTUMsUUFBUSxLQUFJO0FBQ2xCLE1BQU1DLFFBQVEsS0FBSTtBQUNsQixNQUFNQyxNQUFNLEtBQUk7QUFDaEIsTUFBTUMsT0FBTyxLQUFJO0FBQ2pCLE1BQU1DLE9BQU8sS0FBSTtBQUNqQixNQUFNQyxPQUFPLElBQUc7QUFDaEIsTUFBTUMsT0FBTyxJQUFHO0FBQ2hCLE1BQU1DLE9BQU8sSUFBRztBQUNoQixNQUFNQyxRQUFRLElBQUc7QUFDakIsTUFBTUMsT0FBTyxHQUFFO0FBQ2YsTUFBTUMsT0FBTyxJQUFHO0FBQ2hCLE1BQU1DLFFBQVEsS0FBSTtBQUNsQixNQUFNQyxRQUFRLEtBQUk7QUFDbEIsTUFBTUMsUUFBUSxLQUFJO0FBQ2xCLE1BQU1DLE9BQU8sS0FBSTtBQUNqQixNQUFNQyxPQUFPLE1BQUs7QUFDbEIsTUFBTUMsUUFBUSxNQUFLO0FBQ25CLE1BQU1DLE9BQU8sTUFBSztBQUNsQixNQUFNQyxRQUFRLE1BQUs7QUFDbkIsTUFBTUMsUUFBUSxNQUFLO0FBRTFCLE1BQU1DLFdBQVc7SUFBQztJQUFJO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7Q0FBSTtBQUM3RCxNQUFNQyxhQUFhO0lBQUM7SUFBSTtJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0NBQUk7QUFFL0Q7Ozs7OztDQU1DLEdBQ00sTUFBTUMsU0FBUyxDQUFDQyxHQUFHQyxpQkFBaUIsQ0FBQztJQUMxQyxNQUFNQyxPQUFPRixNQUFNLElBQUksSUFBSXhCLDJDQUFVLENBQUN3QjtJQUN0QyxJQUFJSSxPQUFPO0lBQ1gsTUFBT0YsT0FBT0UsT0FBTyxLQUFLSCxpQkFBaUIsQ0FBQyxFQUFHO1FBQzdDQTtRQUNBRztJQUNGO0lBQ0EsTUFBT0YsUUFBUSxJQUFJRSxPQUFPLEtBQUtILGlCQUFpQixFQUFHO1FBQ2pEQTtRQUNBRztJQUNGO0lBQ0EsTUFBTUwsU0FBU0UsaUJBQWlCLElBQUlILFVBQVUsQ0FBQyxDQUFDRyxlQUFlLEdBQUdKLFFBQVEsQ0FBQ0ksZUFBZTtJQUMxRixPQUFPO1FBQ0xELEdBQUd4QiwyQ0FBVSxDQUFDLENBQUM0QixPQUFPLElBQUlKLElBQUl4QiwyQ0FBVSxDQUFDNEIsT0FBTyxLQUFLSixJQUFJeEIsMkNBQVUsQ0FBQzRCLE9BQU8sQ0FBQyxFQUFDLElBQUssUUFBUTtRQUMxRkw7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC9tZXRyaWMuanM/NDk5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgbW9kdWxlIHRvIGNvbnZlcnQgbWV0cmljIHZhbHVlcy5cbiAqXG4gKiBAbW9kdWxlIG1ldHJpY1xuICovXG5cbmltcG9ydCAqIGFzIG1hdGggZnJvbSAnLi9tYXRoLmpzJ1xuXG5leHBvcnQgY29uc3QgeW90dGEgPSAxZTI0XG5leHBvcnQgY29uc3QgemV0dGEgPSAxZTIxXG5leHBvcnQgY29uc3QgZXhhID0gMWUxOFxuZXhwb3J0IGNvbnN0IHBldGEgPSAxZTE1XG5leHBvcnQgY29uc3QgdGVyYSA9IDFlMTJcbmV4cG9ydCBjb25zdCBnaWdhID0gMWU5XG5leHBvcnQgY29uc3QgbWVnYSA9IDFlNlxuZXhwb3J0IGNvbnN0IGtpbG8gPSAxZTNcbmV4cG9ydCBjb25zdCBoZWN0byA9IDFlMlxuZXhwb3J0IGNvbnN0IGRlY2EgPSAxMFxuZXhwb3J0IGNvbnN0IGRlY2kgPSAwLjFcbmV4cG9ydCBjb25zdCBjZW50aSA9IDAuMDFcbmV4cG9ydCBjb25zdCBtaWxsaSA9IDFlLTNcbmV4cG9ydCBjb25zdCBtaWNybyA9IDFlLTZcbmV4cG9ydCBjb25zdCBuYW5vID0gMWUtOVxuZXhwb3J0IGNvbnN0IHBpY28gPSAxZS0xMlxuZXhwb3J0IGNvbnN0IGZlbXRvID0gMWUtMTVcbmV4cG9ydCBjb25zdCBhdHRvID0gMWUtMThcbmV4cG9ydCBjb25zdCB6ZXB0byA9IDFlLTIxXG5leHBvcnQgY29uc3QgeW9jdG8gPSAxZS0yNFxuXG5jb25zdCBwcmVmaXhVcCA9IFsnJywgJ2snLCAnTScsICdHJywgJ1QnLCAnUCcsICdFJywgJ1onLCAnWSddXG5jb25zdCBwcmVmaXhEb3duID0gWycnLCAnbScsICfOvCcsICduJywgJ3AnLCAnZicsICdhJywgJ3onLCAneSddXG5cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBtZXRyaWMgcHJlZml4IGZvciBhIG51bWJlci4gQXNzdW1lcyBFLmcuIGBwcmVmaXgoMTAwMCkgPSB7IG46IDEsIHByZWZpeDogJ2snIH1gXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IG5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbYmFzZU11bHRpcGxpZXJdIE11bHRpcGxpZXIgb2YgdGhlIGJhc2UgKDEwXigzKmJhc2VNdWx0aXBsaWVyKSkuIEUuZy4gYGNvbnZlcnQodGltZSwgLTMpYCBpZiB0aW1lIGlzIGFscmVhZHkgaW4gbWlsbGkgc2Vjb25kc1xuICogQHJldHVybiB7e246bnVtYmVyLHByZWZpeDpzdHJpbmd9fVxuICovXG5leHBvcnQgY29uc3QgcHJlZml4ID0gKG4sIGJhc2VNdWx0aXBsaWVyID0gMCkgPT4ge1xuICBjb25zdCBuUG93ID0gbiA9PT0gMCA/IDAgOiBtYXRoLmxvZzEwKG4pXG4gIGxldCBtdWx0ID0gMFxuICB3aGlsZSAoblBvdyA8IG11bHQgKiAzICYmIGJhc2VNdWx0aXBsaWVyID4gLTgpIHtcbiAgICBiYXNlTXVsdGlwbGllci0tXG4gICAgbXVsdC0tXG4gIH1cbiAgd2hpbGUgKG5Qb3cgPj0gMyArIG11bHQgKiAzICYmIGJhc2VNdWx0aXBsaWVyIDwgOCkge1xuICAgIGJhc2VNdWx0aXBsaWVyKytcbiAgICBtdWx0KytcbiAgfVxuICBjb25zdCBwcmVmaXggPSBiYXNlTXVsdGlwbGllciA8IDAgPyBwcmVmaXhEb3duWy1iYXNlTXVsdGlwbGllcl0gOiBwcmVmaXhVcFtiYXNlTXVsdGlwbGllcl1cbiAgcmV0dXJuIHtcbiAgICBuOiBtYXRoLnJvdW5kKChtdWx0ID4gMCA/IG4gLyBtYXRoLmV4cDEwKG11bHQgKiAzKSA6IG4gKiBtYXRoLmV4cDEwKG11bHQgKiAtMykpICogMWUxMikgLyAxZTEyLFxuICAgIHByZWZpeFxuICB9XG59XG4iXSwibmFtZXMiOlsibWF0aCIsInlvdHRhIiwiemV0dGEiLCJleGEiLCJwZXRhIiwidGVyYSIsImdpZ2EiLCJtZWdhIiwia2lsbyIsImhlY3RvIiwiZGVjYSIsImRlY2kiLCJjZW50aSIsIm1pbGxpIiwibWljcm8iLCJuYW5vIiwicGljbyIsImZlbXRvIiwiYXR0byIsInplcHRvIiwieW9jdG8iLCJwcmVmaXhVcCIsInByZWZpeERvd24iLCJwcmVmaXgiLCJuIiwiYmFzZU11bHRpcGxpZXIiLCJuUG93IiwibG9nMTAiLCJtdWx0Iiwicm91bmQiLCJleHAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/metric.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/number.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/number.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HIGHEST_INT32: () => (/* binding */ HIGHEST_INT32),\n/* harmony export */   HIGHEST_UINT32: () => (/* binding */ HIGHEST_UINT32),\n/* harmony export */   LOWEST_INT32: () => (/* binding */ LOWEST_INT32),\n/* harmony export */   MAX_SAFE_INTEGER: () => (/* binding */ MAX_SAFE_INTEGER),\n/* harmony export */   MIN_SAFE_INTEGER: () => (/* binding */ MIN_SAFE_INTEGER),\n/* harmony export */   countBits: () => (/* binding */ countBits),\n/* harmony export */   isInteger: () => (/* binding */ isInteger),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   parseInt: () => (/* binding */ parseInt)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */ \n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\nconst MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\nconst LOWEST_INT32 = 1 << 31;\nconst HIGHEST_INT32 = _binary_js__WEBPACK_IMPORTED_MODULE_0__.BITS31;\nconst HIGHEST_UINT32 = _binary_js__WEBPACK_IMPORTED_MODULE_0__.BITS32;\n/* c8 ignore next */ const isInteger = Number.isInteger || ((num)=>typeof num === \"number\" && isFinite(num) && _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(num) === num);\nconst isNaN = Number.isNaN;\nconst parseInt = Number.parseInt;\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */ const countBits = (n)=>{\n    n &= _binary_js__WEBPACK_IMPORTED_MODULE_0__.BITS32;\n    let count = 0;\n    while(n){\n        n &= n - 1;\n        count++;\n    }\n    return count;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRWdDO0FBQ0k7QUFFOUIsTUFBTUUsbUJBQW1CQyxPQUFPRCxnQkFBZ0I7QUFDaEQsTUFBTUUsbUJBQW1CRCxPQUFPQyxnQkFBZ0I7QUFFaEQsTUFBTUMsZUFBZSxLQUFLLEdBQUU7QUFDNUIsTUFBTUMsZ0JBQWdCTCw4Q0FBYTtBQUNuQyxNQUFNTyxpQkFBaUJQLDhDQUFhO0FBRTNDLGtCQUFrQixHQUNYLE1BQU1TLFlBQVlQLE9BQU9PLFNBQVMsSUFBS0MsQ0FBQUEsQ0FBQUEsTUFBTyxPQUFPQSxRQUFRLFlBQVlDLFNBQVNELFFBQVFYLDJDQUFVLENBQUNXLFNBQVNBLEdBQUUsRUFBRTtBQUNsSCxNQUFNRyxRQUFRWCxPQUFPVyxLQUFLO0FBQzFCLE1BQU1DLFdBQVdaLE9BQU9ZLFFBQVE7QUFFdkM7Ozs7OztDQU1DLEdBQ00sTUFBTUMsWUFBWUMsQ0FBQUE7SUFDdkJBLEtBQUtoQiw4Q0FBYTtJQUNsQixJQUFJaUIsUUFBUTtJQUNaLE1BQU9ELEVBQUc7UUFDUkEsS0FBTUEsSUFBSTtRQUNWQztJQUNGO0lBQ0EsT0FBT0E7QUFDVCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvbnVtYmVyLmpzPzQxYzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IGhlbHBlcnMgZm9yIHdvcmtpbmcgd2l0aCBudW1iZXJzLlxuICpcbiAqIEBtb2R1bGUgbnVtYmVyXG4gKi9cblxuaW1wb3J0ICogYXMgbWF0aCBmcm9tICcuL21hdGguanMnXG5pbXBvcnQgKiBhcyBiaW5hcnkgZnJvbSAnLi9iaW5hcnkuanMnXG5cbmV4cG9ydCBjb25zdCBNQVhfU0FGRV9JTlRFR0VSID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcbmV4cG9ydCBjb25zdCBNSU5fU0FGRV9JTlRFR0VSID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJcblxuZXhwb3J0IGNvbnN0IExPV0VTVF9JTlQzMiA9IDEgPDwgMzFcbmV4cG9ydCBjb25zdCBISUdIRVNUX0lOVDMyID0gYmluYXJ5LkJJVFMzMVxuZXhwb3J0IGNvbnN0IEhJR0hFU1RfVUlOVDMyID0gYmluYXJ5LkJJVFMzMlxuXG4vKiBjOCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNvbnN0IGlzSW50ZWdlciA9IE51bWJlci5pc0ludGVnZXIgfHwgKG51bSA9PiB0eXBlb2YgbnVtID09PSAnbnVtYmVyJyAmJiBpc0Zpbml0ZShudW0pICYmIG1hdGguZmxvb3IobnVtKSA9PT0gbnVtKVxuZXhwb3J0IGNvbnN0IGlzTmFOID0gTnVtYmVyLmlzTmFOXG5leHBvcnQgY29uc3QgcGFyc2VJbnQgPSBOdW1iZXIucGFyc2VJbnRcblxuLyoqXG4gKiBDb3VudCB0aGUgbnVtYmVyIG9mIFwiMVwiIGJpdHMgaW4gYW4gdW5zaWduZWQgMzJiaXQgbnVtYmVyLlxuICpcbiAqIFN1cGVyIGZ1biBiaXRjb3VudCBhbGdvcml0aG0gYnkgQnJpYW4gS2VybmlnaGFuLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBuXG4gKi9cbmV4cG9ydCBjb25zdCBjb3VudEJpdHMgPSBuID0+IHtcbiAgbiAmPSBiaW5hcnkuQklUUzMyXG4gIGxldCBjb3VudCA9IDBcbiAgd2hpbGUgKG4pIHtcbiAgICBuICY9IChuIC0gMSlcbiAgICBjb3VudCsrXG4gIH1cbiAgcmV0dXJuIGNvdW50XG59XG4iXSwibmFtZXMiOlsibWF0aCIsImJpbmFyeSIsIk1BWF9TQUZFX0lOVEVHRVIiLCJOdW1iZXIiLCJNSU5fU0FGRV9JTlRFR0VSIiwiTE9XRVNUX0lOVDMyIiwiSElHSEVTVF9JTlQzMiIsIkJJVFMzMSIsIkhJR0hFU1RfVUlOVDMyIiwiQklUUzMyIiwiaXNJbnRlZ2VyIiwibnVtIiwiaXNGaW5pdGUiLCJmbG9vciIsImlzTmFOIiwicGFyc2VJbnQiLCJjb3VudEJpdHMiLCJuIiwiY291bnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/object.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/object.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assign: () => (/* binding */ assign),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   deepFreeze: () => (/* binding */ deepFreeze),\n/* harmony export */   equalFlat: () => (/* binding */ equalFlat),\n/* harmony export */   every: () => (/* binding */ every),\n/* harmony export */   forEach: () => (/* binding */ forEach),\n/* harmony export */   freeze: () => (/* binding */ freeze),\n/* harmony export */   hasProperty: () => (/* binding */ hasProperty),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   keys: () => (/* binding */ keys),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   size: () => (/* binding */ size),\n/* harmony export */   some: () => (/* binding */ some)\n/* harmony export */ });\n/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */ /**\n * @return {Object<string,any>} obj\n */ const create = ()=>Object.create(null);\n/**\n * Object.assign\n */ const assign = Object.assign;\n/**\n * @param {Object<string,any>} obj\n */ const keys = Object.keys;\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */ const forEach = (obj, f)=>{\n    for(const key in obj){\n        f(obj[key], key);\n    }\n};\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */ const map = (obj, f)=>{\n    const results = [];\n    for(const key in obj){\n        results.push(f(obj[key], key));\n    }\n    return results;\n};\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */ const length = (obj)=>keys(obj).length;\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */ const size = (obj)=>keys(obj).length;\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */ const some = (obj, f)=>{\n    for(const key in obj){\n        if (f(obj[key], key)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * @param {Object|null|undefined} obj\n */ const isEmpty = (obj)=>{\n    // eslint-disable-next-line no-unreachable-loop\n    for(const _k in obj){\n        return false;\n    }\n    return true;\n};\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */ const every = (obj, f)=>{\n    for(const key in obj){\n        if (!f(obj[key], key)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */ const hasProperty = (obj, key)=>Object.prototype.hasOwnProperty.call(obj, key);\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */ const equalFlat = (a, b)=>a === b || size(a) === size(b) && every(a, (val, key)=>(val !== undefined || hasProperty(b, key)) && b[key] === val);\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */ const freeze = Object.freeze;\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */ const deepFreeze = (o)=>{\n    for(const key in o){\n        const c = o[key];\n        if (typeof c === \"object\" || typeof c === \"function\") {\n            deepFreeze(o[key]);\n        }\n    }\n    return freeze(o);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7O0NBRUMsR0FDTSxNQUFNQSxTQUFTLElBQU1DLE9BQU9ELE1BQU0sQ0FBQyxNQUFLO0FBRS9DOztDQUVDLEdBQ00sTUFBTUUsU0FBU0QsT0FBT0MsTUFBTTtBQUVuQzs7Q0FFQyxHQUNNLE1BQU1DLE9BQU9GLE9BQU9FLElBQUk7QUFFL0I7Ozs7Q0FJQyxHQUNNLE1BQU1DLFVBQVUsQ0FBQ0MsS0FBS0M7SUFDM0IsSUFBSyxNQUFNQyxPQUFPRixJQUFLO1FBQ3JCQyxFQUFFRCxHQUFHLENBQUNFLElBQUksRUFBRUE7SUFDZDtBQUNGLEVBQUM7QUFFRDs7Ozs7OztDQU9DLEdBQ00sTUFBTUMsTUFBTSxDQUFDSCxLQUFLQztJQUN2QixNQUFNRyxVQUFVLEVBQUU7SUFDbEIsSUFBSyxNQUFNRixPQUFPRixJQUFLO1FBQ3JCSSxRQUFRQyxJQUFJLENBQUNKLEVBQUVELEdBQUcsQ0FBQ0UsSUFBSSxFQUFFQTtJQUMzQjtJQUNBLE9BQU9FO0FBQ1QsRUFBQztBQUVEOzs7O0NBSUMsR0FDTSxNQUFNRSxTQUFTTixDQUFBQSxNQUFPRixLQUFLRSxLQUFLTSxNQUFNO0FBRTdDOzs7Q0FHQyxHQUNNLE1BQU1DLE9BQU9QLENBQUFBLE1BQU9GLEtBQUtFLEtBQUtNLE1BQU07QUFFM0M7Ozs7Q0FJQyxHQUNNLE1BQU1FLE9BQU8sQ0FBQ1IsS0FBS0M7SUFDeEIsSUFBSyxNQUFNQyxPQUFPRixJQUFLO1FBQ3JCLElBQUlDLEVBQUVELEdBQUcsQ0FBQ0UsSUFBSSxFQUFFQSxNQUFNO1lBQ3BCLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNULEVBQUM7QUFFRDs7Q0FFQyxHQUNNLE1BQU1PLFVBQVVULENBQUFBO0lBQ3JCLCtDQUErQztJQUMvQyxJQUFLLE1BQU1VLE1BQU1WLElBQUs7UUFDcEIsT0FBTztJQUNUO0lBQ0EsT0FBTztBQUNULEVBQUM7QUFFRDs7OztDQUlDLEdBQ00sTUFBTVcsUUFBUSxDQUFDWCxLQUFLQztJQUN6QixJQUFLLE1BQU1DLE9BQU9GLElBQUs7UUFDckIsSUFBSSxDQUFDQyxFQUFFRCxHQUFHLENBQUNFLElBQUksRUFBRUEsTUFBTTtZQUNyQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVCxFQUFDO0FBRUQ7Ozs7OztDQU1DLEdBQ00sTUFBTVUsY0FBYyxDQUFDWixLQUFLRSxNQUFRTixPQUFPaUIsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ2YsS0FBS0UsS0FBSTtBQUV2Rjs7OztDQUlDLEdBQ00sTUFBTWMsWUFBWSxDQUFDQyxHQUFHQyxJQUFNRCxNQUFNQyxLQUFNWCxLQUFLVSxPQUFPVixLQUFLVyxNQUFNUCxNQUFNTSxHQUFHLENBQUNFLEtBQUtqQixNQUFRLENBQUNpQixRQUFRQyxhQUFhUixZQUFZTSxHQUFHaEIsSUFBRyxLQUFNZ0IsQ0FBQyxDQUFDaEIsSUFBSSxLQUFLaUIsS0FBSztBQUUzSjs7O0NBR0MsR0FDTSxNQUFNRSxTQUFTekIsT0FBT3lCLE1BQU07QUFFbkM7Ozs7Ozs7Q0FPQyxHQUNNLE1BQU1DLGFBQWEsQ0FBQ0M7SUFDekIsSUFBSyxNQUFNckIsT0FBT3FCLEVBQUc7UUFDbkIsTUFBTUMsSUFBSUQsQ0FBQyxDQUFDckIsSUFBSTtRQUNoQixJQUFJLE9BQU9zQixNQUFNLFlBQVksT0FBT0EsTUFBTSxZQUFZO1lBQ3BERixXQUFXQyxDQUFDLENBQUNyQixJQUFJO1FBQ25CO0lBQ0Y7SUFDQSxPQUFPbUIsT0FBT0U7QUFDaEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bmNkcmF3LWNsaWVudC8uL25vZGVfbW9kdWxlcy9saWIwL29iamVjdC5qcz9hYTRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbnMgZm9yIHdvcmtpbmcgd2l0aCBFY21hU2NyaXB0IG9iamVjdHMuXG4gKlxuICogQG1vZHVsZSBvYmplY3RcbiAqL1xuXG4vKipcbiAqIEByZXR1cm4ge09iamVjdDxzdHJpbmcsYW55Pn0gb2JqXG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoKSA9PiBPYmplY3QuY3JlYXRlKG51bGwpXG5cbi8qKlxuICogT2JqZWN0LmFzc2lnblxuICovXG5leHBvcnQgY29uc3QgYXNzaWduID0gT2JqZWN0LmFzc2lnblxuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZyxhbnk+fSBvYmpcbiAqL1xuZXhwb3J0IGNvbnN0IGtleXMgPSBPYmplY3Qua2V5c1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBWXG4gKiBAcGFyYW0ge3tbazpzdHJpbmddOlZ9fSBvYmpcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVixzdHJpbmcpOmFueX0gZlxuICovXG5leHBvcnQgY29uc3QgZm9yRWFjaCA9IChvYmosIGYpID0+IHtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgZihvYmpba2V5XSwga2V5KVxuICB9XG59XG5cbi8qKlxuICogQHRvZG8gaW1wbGVtZW50IG1hcFRvQXJyYXkgJiBtYXBcbiAqXG4gKiBAdGVtcGxhdGUgUlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLGFueT59IG9ialxuICogQHBhcmFtIHtmdW5jdGlvbihhbnksc3RyaW5nKTpSfSBmXG4gKiBAcmV0dXJuIHtBcnJheTxSPn1cbiAqL1xuZXhwb3J0IGNvbnN0IG1hcCA9IChvYmosIGYpID0+IHtcbiAgY29uc3QgcmVzdWx0cyA9IFtdXG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIHJlc3VsdHMucHVzaChmKG9ialtrZXldLCBrZXkpKVxuICB9XG4gIHJldHVybiByZXN1bHRzXG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgdXNlIG9iamVjdC5zaXplIGluc3RlYWRcbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZyxhbnk+fSBvYmpcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGxlbmd0aCA9IG9iaiA9PiBrZXlzKG9iaikubGVuZ3RoXG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLGFueT59IG9ialxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3Qgc2l6ZSA9IG9iaiA9PiBrZXlzKG9iaikubGVuZ3RoXG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLGFueT59IG9ialxuICogQHBhcmFtIHtmdW5jdGlvbihhbnksc3RyaW5nKTpib29sZWFufSBmXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3Qgc29tZSA9IChvYmosIGYpID0+IHtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGYob2JqW2tleV0sIGtleSkpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fG51bGx8dW5kZWZpbmVkfSBvYmpcbiAqL1xuZXhwb3J0IGNvbnN0IGlzRW1wdHkgPSBvYmogPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5yZWFjaGFibGUtbG9vcFxuICBmb3IgKGNvbnN0IF9rIGluIG9iaikge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIHJldHVybiB0cnVlXG59XG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLGFueT59IG9ialxuICogQHBhcmFtIHtmdW5jdGlvbihhbnksc3RyaW5nKTpib29sZWFufSBmXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgZXZlcnkgPSAob2JqLCBmKSA9PiB7XG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIGlmICghZihvYmpba2V5XSwga2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlXG59XG5cbi8qKlxuICogQ2FsbHMgYE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHlgLlxuICpcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEBwYXJhbSB7c3RyaW5nfHN5bWJvbH0ga2V5XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgaGFzUHJvcGVydHkgPSAob2JqLCBrZXkpID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSlcblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsYW55Pn0gYVxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLGFueT59IGJcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBlcXVhbEZsYXQgPSAoYSwgYikgPT4gYSA9PT0gYiB8fCAoc2l6ZShhKSA9PT0gc2l6ZShiKSAmJiBldmVyeShhLCAodmFsLCBrZXkpID0+ICh2YWwgIT09IHVuZGVmaW5lZCB8fCBoYXNQcm9wZXJ0eShiLCBrZXkpKSAmJiBiW2tleV0gPT09IHZhbCkpXG5cbi8qKlxuICogTWFrZSBhbiBvYmplY3QgaW1tdXRhYmxlLiBUaGlzIGh1cnRzIHBlcmZvcm1hbmNlIGFuZCBpcyB1c3VhbGx5IG5vdCBuZWVkZWQgaWYgeW91IHBlcmZvcm0gZ29vZFxuICogY29kaW5nIHByYWN0aWNlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGZyZWV6ZSA9IE9iamVjdC5mcmVlemVcblxuLyoqXG4gKiBNYWtlIGFuIG9iamVjdCBhbmQgYWxsIGl0cyBjaGlsZHJlbiBpbW11dGFibGUuXG4gKiBUaGlzICpyZWFsbHkqIGh1cnRzIHBlcmZvcm1hbmNlIGFuZCBpcyB1c3VhbGx5IG5vdCBuZWVkZWQgaWYgeW91IHBlcmZvcm0gZ29vZCBjb2RpbmcgcHJhY3RpY2VzLlxuICpcbiAqIEB0ZW1wbGF0ZSB7YW55fSBUXG4gKiBAcGFyYW0ge1R9IG9cbiAqIEByZXR1cm4ge1JlYWRvbmx5PFQ+fVxuICovXG5leHBvcnQgY29uc3QgZGVlcEZyZWV6ZSA9IChvKSA9PiB7XG4gIGZvciAoY29uc3Qga2V5IGluIG8pIHtcbiAgICBjb25zdCBjID0gb1trZXldXG4gICAgaWYgKHR5cGVvZiBjID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZGVlcEZyZWV6ZShvW2tleV0pXG4gICAgfVxuICB9XG4gIHJldHVybiBmcmVlemUobylcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJrZXlzIiwiZm9yRWFjaCIsIm9iaiIsImYiLCJrZXkiLCJtYXAiLCJyZXN1bHRzIiwicHVzaCIsImxlbmd0aCIsInNpemUiLCJzb21lIiwiaXNFbXB0eSIsIl9rIiwiZXZlcnkiLCJoYXNQcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImVxdWFsRmxhdCIsImEiLCJiIiwidmFsIiwidW5kZWZpbmVkIiwiZnJlZXplIiwiZGVlcEZyZWV6ZSIsIm8iLCJjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/observable.js":
/*!*****************************************!*\
  !*** ./node_modules/lib0/observable.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Observable: () => (/* binding */ Observable),\n/* harmony export */   ObservableV2: () => (/* binding */ ObservableV2)\n/* harmony export */ });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"(ssr)/./node_modules/lib0/map.js\");\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set.js */ \"(ssr)/./node_modules/lib0/set.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/**\n * Observable class prototype.\n *\n * @module observable\n */ \n\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */ class ObservableV2 {\n    constructor(){\n        /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */ this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ on(name, f) {\n        _map_js__WEBPACK_IMPORTED_MODULE_0__.setIfUndefined(this._observers, /** @type {string} */ name, _set_js__WEBPACK_IMPORTED_MODULE_1__.create).add(f);\n        return f;\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ once(name, f) {\n        /**\n     * @param  {...any} args\n     */ const _f = (...args)=>{\n            this.off(name, /** @type {any} */ _f);\n            f(...args);\n        };\n        this.on(name, /** @type {any} */ _f);\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ off(name, f) {\n        const observers = this._observers.get(name);\n        if (observers !== undefined) {\n            observers.delete(f);\n            if (observers.size === 0) {\n                this._observers.delete(name);\n            }\n        }\n    }\n    /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */ emit(name, args) {\n        // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n        return _array_js__WEBPACK_IMPORTED_MODULE_2__.from((this._observers.get(name) || _map_js__WEBPACK_IMPORTED_MODULE_0__.create()).values()).forEach((f)=>f(...args));\n    }\n    destroy() {\n        this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n}\n/* c8 ignore start */ /**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */ class Observable {\n    constructor(){\n        /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */ this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ on(name, f) {\n        _map_js__WEBPACK_IMPORTED_MODULE_0__.setIfUndefined(this._observers, name, _set_js__WEBPACK_IMPORTED_MODULE_1__.create).add(f);\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ once(name, f) {\n        /**\n     * @param  {...any} args\n     */ const _f = (...args)=>{\n            this.off(name, _f);\n            f(...args);\n        };\n        this.on(name, _f);\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ off(name, f) {\n        const observers = this._observers.get(name);\n        if (observers !== undefined) {\n            observers.delete(f);\n            if (observers.size === 0) {\n                this._observers.delete(name);\n            }\n        }\n    }\n    /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */ emit(name, args) {\n        // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n        return _array_js__WEBPACK_IMPORTED_MODULE_2__.from((this._observers.get(name) || _map_js__WEBPACK_IMPORTED_MODULE_0__.create()).values()).forEach((f)=>f(...args));\n    }\n    destroy() {\n        this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n} /* c8 ignore end */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/observable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/promise.js":
/*!**************************************!*\
  !*** ./node_modules/lib0/promise.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createEmpty: () => (/* binding */ createEmpty),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   reject: () => (/* binding */ reject),\n/* harmony export */   resolve: () => (/* binding */ resolve),\n/* harmony export */   resolveWith: () => (/* binding */ resolveWith),\n/* harmony export */   until: () => (/* binding */ until),\n/* harmony export */   untilAsync: () => (/* binding */ untilAsync),\n/* harmony export */   wait: () => (/* binding */ wait)\n/* harmony export */ });\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time.js */ \"(ssr)/./node_modules/lib0/time.js\");\n/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */ \n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */ /**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */ const create = (f)=>/** @type {Promise<T>} */ new Promise(f);\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */ const createEmpty = (f)=>new Promise(f);\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */ const all = Promise.all.bind(Promise);\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */ const reject = (reason)=>Promise.reject(reason);\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */ const resolve = (res)=>Promise.resolve(res);\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */ const resolveWith = (res)=>Promise.resolve(res);\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n * @deprecated use untilAsync instead\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */ const until = (timeout, check, intervalResolution = 10)=>create((resolve, reject)=>{\n        const startTime = _time_js__WEBPACK_IMPORTED_MODULE_0__.getUnixTime();\n        const hasTimeout = timeout > 0;\n        const untilInterval = ()=>{\n            if (check()) {\n                clearInterval(intervalHandle);\n                resolve();\n            } else if (hasTimeout) {\n                /* c8 ignore else */ if (_time_js__WEBPACK_IMPORTED_MODULE_0__.getUnixTime() - startTime > timeout) {\n                    clearInterval(intervalHandle);\n                    reject(new Error(\"Timeout\"));\n                }\n            }\n        };\n        const intervalHandle = setInterval(untilInterval, intervalResolution);\n    });\n/**\n * @param {()=>Promise<boolean>|boolean} check\n * @param {number} timeout\n * @param {number} intervalResolution\n * @return {Promise<void>}\n */ const untilAsync = async (check, timeout = 0, intervalResolution = 10)=>{\n    const startTime = _time_js__WEBPACK_IMPORTED_MODULE_0__.getUnixTime();\n    const noTimeout = timeout <= 0;\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while(noTimeout || _time_js__WEBPACK_IMPORTED_MODULE_0__.getUnixTime() - startTime <= timeout){\n        if (await check()) return;\n        await wait(intervalResolution);\n    }\n    throw new Error(\"Timeout\");\n};\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */ const wait = (timeout)=>create((resolve, _reject)=>setTimeout(resolve, timeout));\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */ const isPromise = (p)=>p instanceof Promise || p && p.then && p.catch && p.finally;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9wcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVnQztBQUVqQzs7OztDQUlDLEdBRUQ7Ozs7Q0FJQyxHQUNNLE1BQU1DLFNBQVNDLENBQUFBLElBQUssdUJBQXVCLEdBQUksSUFBSUMsUUFBUUQsR0FBRztBQUVyRTs7O0NBR0MsR0FDTSxNQUFNRSxjQUFjRixDQUFBQSxJQUFLLElBQUlDLFFBQVFELEdBQUU7QUFFOUM7Ozs7OztDQU1DLEdBQ00sTUFBTUcsTUFBTUYsUUFBUUUsR0FBRyxDQUFDQyxJQUFJLENBQUNILFNBQVE7QUFFNUM7OztDQUdDLEdBQ00sTUFBTUksU0FBU0MsQ0FBQUEsU0FBVUwsUUFBUUksTUFBTSxDQUFDQyxRQUFPO0FBRXREOzs7O0NBSUMsR0FDTSxNQUFNQyxVQUFVQyxDQUFBQSxNQUFPUCxRQUFRTSxPQUFPLENBQUNDLEtBQUk7QUFFbEQ7Ozs7Q0FJQyxHQUNNLE1BQU1DLGNBQWNELENBQUFBLE1BQU9QLFFBQVFNLE9BQU8sQ0FBQ0MsS0FBSTtBQUV0RDs7Ozs7Ozs7Q0FRQyxHQUNNLE1BQU1FLFFBQVEsQ0FBQ0MsU0FBU0MsT0FBT0MscUJBQXFCLEVBQUUsR0FBS2QsT0FBTyxDQUFDUSxTQUFTRjtRQUNqRixNQUFNUyxZQUFZaEIsaURBQWdCO1FBQ2xDLE1BQU1rQixhQUFhTCxVQUFVO1FBQzdCLE1BQU1NLGdCQUFnQjtZQUNwQixJQUFJTCxTQUFTO2dCQUNYTSxjQUFjQztnQkFDZFo7WUFDRixPQUFPLElBQUlTLFlBQVk7Z0JBQ3JCLGtCQUFrQixHQUNsQixJQUFJbEIsaURBQWdCLEtBQUtnQixZQUFZSCxTQUFTO29CQUM1Q08sY0FBY0M7b0JBQ2RkLE9BQU8sSUFBSWUsTUFBTTtnQkFDbkI7WUFDRjtRQUNGO1FBQ0EsTUFBTUQsaUJBQWlCRSxZQUFZSixlQUFlSjtJQUNwRCxHQUFFO0FBRUY7Ozs7O0NBS0MsR0FDTSxNQUFNUyxhQUFhLE9BQU9WLE9BQU9ELFVBQVUsQ0FBQyxFQUFFRSxxQkFBcUIsRUFBRTtJQUMxRSxNQUFNQyxZQUFZaEIsaURBQWdCO0lBQ2xDLE1BQU15QixZQUFZWixXQUFXO0lBQzdCLHdEQUF3RDtJQUN4RCxNQUFPWSxhQUFhekIsaURBQWdCLEtBQUtnQixhQUFhSCxRQUFTO1FBQzdELElBQUksTUFBTUMsU0FBUztRQUNuQixNQUFNWSxLQUFLWDtJQUNiO0lBQ0EsTUFBTSxJQUFJTyxNQUFNO0FBQ2xCLEVBQUM7QUFFRDs7O0NBR0MsR0FDTSxNQUFNSSxPQUFPYixDQUFBQSxVQUFXWixPQUFPLENBQUNRLFNBQVNrQixVQUFZQyxXQUFXbkIsU0FBU0ksVUFBUztBQUV6Rjs7Ozs7Ozs7Q0FRQyxHQUNNLE1BQU1nQixZQUFZQyxDQUFBQSxJQUFLQSxhQUFhM0IsV0FBWTJCLEtBQUtBLEVBQUVDLElBQUksSUFBSUQsRUFBRUUsS0FBSyxJQUFJRixFQUFFRyxPQUFPLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC9wcm9taXNlLmpzPzFjMGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IGhlbHBlcnMgdG8gd29yayB3aXRoIHByb21pc2VzLlxuICpcbiAqIEBtb2R1bGUgcHJvbWlzZVxuICovXG5cbmltcG9ydCAqIGFzIHRpbWUgZnJvbSAnLi90aW1lLmpzJ1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAY2FsbGJhY2sgUHJvbWlzZVJlc29sdmVcbiAqIEBwYXJhbSB7VHxQcm9taXNlTGlrZTxUPn0gW3Jlc3VsdF1cbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFByb21pc2VSZXNvbHZlPFQ+LGZ1bmN0aW9uKEVycm9yKTp2b2lkKTphbnl9IGZcbiAqIEByZXR1cm4ge1Byb21pc2U8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSBmID0+IC8qKiBAdHlwZSB7UHJvbWlzZTxUPn0gKi8gKG5ldyBQcm9taXNlKGYpKVxuXG4vKipcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oZnVuY3Rpb24oKTp2b2lkLGZ1bmN0aW9uKEVycm9yKTp2b2lkKTp2b2lkfSBmXG4gKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlRW1wdHkgPSBmID0+IG5ldyBQcm9taXNlKGYpXG5cbi8qKlxuICogYFByb21pc2UuYWxsYCB3YWl0IGZvciBhbGwgcHJvbWlzZXMgaW4gdGhlIGFycmF5IHRvIHJlc29sdmUgYW5kIHJldHVybiB0aGUgcmVzdWx0XG4gKiBAdGVtcGxhdGUge3Vua25vd25bXSB8IFtdfSBQU1xuICpcbiAqIEBwYXJhbSB7UFN9IHBzXG4gKiBAcmV0dXJuIHtQcm9taXNlPHsgLXJlYWRvbmx5IFtQIGluIGtleW9mIFBTXTogQXdhaXRlZDxQU1tQXT4gfT59XG4gKi9cbmV4cG9ydCBjb25zdCBhbGwgPSBQcm9taXNlLmFsbC5iaW5kKFByb21pc2UpXG5cbi8qKlxuICogQHBhcmFtIHtFcnJvcn0gW3JlYXNvbl1cbiAqIEByZXR1cm4ge1Byb21pc2U8bmV2ZXI+fVxuICovXG5leHBvcnQgY29uc3QgcmVqZWN0ID0gcmVhc29uID0+IFByb21pc2UucmVqZWN0KHJlYXNvbilcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUfHZvaWR9IHJlc1xuICogQHJldHVybiB7UHJvbWlzZTxUfHZvaWQ+fVxuICovXG5leHBvcnQgY29uc3QgcmVzb2x2ZSA9IHJlcyA9PiBQcm9taXNlLnJlc29sdmUocmVzKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IHJlc1xuICogQHJldHVybiB7UHJvbWlzZTxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHJlc29sdmVXaXRoID0gcmVzID0+IFByb21pc2UucmVzb2x2ZShyZXMpXG5cbi8qKlxuICogQHRvZG8gTmV4dCB2ZXJzaW9uLCByZW9yZGVyIHBhcmFtZXRlcnM6IGNoZWNrLCBbdGltZW91dCwgW2ludGVydmFsUmVzb2x1dGlvbl1dXG4gKiBAZGVwcmVjYXRlZCB1c2UgdW50aWxBc3luYyBpbnN0ZWFkXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHRpbWVvdXRcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oKTpib29sZWFufSBjaGVja1xuICogQHBhcmFtIHtudW1iZXJ9IFtpbnRlcnZhbFJlc29sdXRpb25dXG4gKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICovXG5leHBvcnQgY29uc3QgdW50aWwgPSAodGltZW91dCwgY2hlY2ssIGludGVydmFsUmVzb2x1dGlvbiA9IDEwKSA9PiBjcmVhdGUoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICBjb25zdCBzdGFydFRpbWUgPSB0aW1lLmdldFVuaXhUaW1lKClcbiAgY29uc3QgaGFzVGltZW91dCA9IHRpbWVvdXQgPiAwXG4gIGNvbnN0IHVudGlsSW50ZXJ2YWwgPSAoKSA9PiB7XG4gICAgaWYgKGNoZWNrKCkpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxIYW5kbGUpXG4gICAgICByZXNvbHZlKClcbiAgICB9IGVsc2UgaWYgKGhhc1RpbWVvdXQpIHtcbiAgICAgIC8qIGM4IGlnbm9yZSBlbHNlICovXG4gICAgICBpZiAodGltZS5nZXRVbml4VGltZSgpIC0gc3RhcnRUaW1lID4gdGltZW91dCkge1xuICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKVxuICAgICAgICByZWplY3QobmV3IEVycm9yKCdUaW1lb3V0JykpXG4gICAgICB9XG4gICAgfVxuICB9XG4gIGNvbnN0IGludGVydmFsSGFuZGxlID0gc2V0SW50ZXJ2YWwodW50aWxJbnRlcnZhbCwgaW50ZXJ2YWxSZXNvbHV0aW9uKVxufSlcblxuLyoqXG4gKiBAcGFyYW0geygpPT5Qcm9taXNlPGJvb2xlYW4+fGJvb2xlYW59IGNoZWNrXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dFxuICogQHBhcmFtIHtudW1iZXJ9IGludGVydmFsUmVzb2x1dGlvblxuICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAqL1xuZXhwb3J0IGNvbnN0IHVudGlsQXN5bmMgPSBhc3luYyAoY2hlY2ssIHRpbWVvdXQgPSAwLCBpbnRlcnZhbFJlc29sdXRpb24gPSAxMCkgPT4ge1xuICBjb25zdCBzdGFydFRpbWUgPSB0aW1lLmdldFVuaXhUaW1lKClcbiAgY29uc3Qgbm9UaW1lb3V0ID0gdGltZW91dCA8PSAwXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bm1vZGlmaWVkLWxvb3AtY29uZGl0aW9uXG4gIHdoaWxlIChub1RpbWVvdXQgfHwgdGltZS5nZXRVbml4VGltZSgpIC0gc3RhcnRUaW1lIDw9IHRpbWVvdXQpIHtcbiAgICBpZiAoYXdhaXQgY2hlY2soKSkgcmV0dXJuXG4gICAgYXdhaXQgd2FpdChpbnRlcnZhbFJlc29sdXRpb24pXG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdUaW1lb3V0Jylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dFxuICogQHJldHVybiB7UHJvbWlzZTx1bmRlZmluZWQ+fVxuICovXG5leHBvcnQgY29uc3Qgd2FpdCA9IHRpbWVvdXQgPT4gY3JlYXRlKChyZXNvbHZlLCBfcmVqZWN0KSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVvdXQpKVxuXG4vKipcbiAqIENoZWNrcyBpZiBhbiBvYmplY3QgaXMgYSBwcm9taXNlIHVzaW5nIGR1Y2t0eXBpbmcuXG4gKlxuICogUHJvbWlzZXMgYXJlIG9mdGVuIHBvbHlmaWxsZWQsIHNvIGl0IG1ha2VzIHNlbnNlIHRvIGFkZCBzb21lIGFkZGl0aW9uYWwgZ3VhcmFudGVlcyBpZiB0aGUgdXNlciBvZiB0aGlzXG4gKiBsaWJyYXJ5IGhhcyBzb21lIGluc2FuZSBlbnZpcm9ubWVudCB3aGVyZSBnbG9iYWwgUHJvbWlzZSBvYmplY3RzIGFyZSBvdmVyd3JpdHRlbi5cbiAqXG4gKiBAcGFyYW0ge2FueX0gcFxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUHJvbWlzZSA9IHAgPT4gcCBpbnN0YW5jZW9mIFByb21pc2UgfHwgKHAgJiYgcC50aGVuICYmIHAuY2F0Y2ggJiYgcC5maW5hbGx5KVxuIl0sIm5hbWVzIjpbInRpbWUiLCJjcmVhdGUiLCJmIiwiUHJvbWlzZSIsImNyZWF0ZUVtcHR5IiwiYWxsIiwiYmluZCIsInJlamVjdCIsInJlYXNvbiIsInJlc29sdmUiLCJyZXMiLCJyZXNvbHZlV2l0aCIsInVudGlsIiwidGltZW91dCIsImNoZWNrIiwiaW50ZXJ2YWxSZXNvbHV0aW9uIiwic3RhcnRUaW1lIiwiZ2V0VW5peFRpbWUiLCJoYXNUaW1lb3V0IiwidW50aWxJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJpbnRlcnZhbEhhbmRsZSIsIkVycm9yIiwic2V0SW50ZXJ2YWwiLCJ1bnRpbEFzeW5jIiwibm9UaW1lb3V0Iiwid2FpdCIsIl9yZWplY3QiLCJzZXRUaW1lb3V0IiwiaXNQcm9taXNlIiwicCIsInRoZW4iLCJjYXRjaCIsImZpbmFsbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/random.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/random.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   oneOf: () => (/* binding */ oneOf),\n/* harmony export */   rand: () => (/* binding */ rand),\n/* harmony export */   uint32: () => (/* binding */ uint32),\n/* harmony export */   uint53: () => (/* binding */ uint53),\n/* harmony export */   uuidv4: () => (/* binding */ uuidv4)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/* harmony import */ var lib0_webcrypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib0/webcrypto */ \"(ssr)/./node_modules/lib0/webcrypto.node.js\");\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */ \n\n\nconst rand = Math.random;\nconst uint32 = ()=>(0,lib0_webcrypto__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint32Array(1))[0];\nconst uint53 = ()=>{\n    const arr = (0,lib0_webcrypto__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint32Array(8));\n    return (arr[0] & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS21) * (_binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS32 + 1) + (arr[1] >>> 0);\n};\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */ const oneOf = (arr)=>arr[_math_js__WEBPACK_IMPORTED_MODULE_2__.floor(rand() * arr.length)];\n// @ts-ignore\nconst uuidv4Template = [\n    1e7\n] + -1e3 + -4e3 + -8e3 + -1e11;\n/**\n * @return {string}\n */ const uuidv4 = ()=>uuidv4Template.replace(/[018]/g, /** @param {number} c */ (c)=>(c ^ uint32() & 15 >> c / 4).toString(16));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FFZ0M7QUFDSTtBQUNXO0FBRXpDLE1BQU1HLE9BQU9DLEtBQUtDLE1BQU07QUFFeEIsTUFBTUMsU0FBUyxJQUFNSiwrREFBZUEsQ0FBQyxJQUFJSyxZQUFZLEdBQUcsQ0FBQyxFQUFFO0FBRTNELE1BQU1DLFNBQVM7SUFDcEIsTUFBTUMsTUFBTVAsK0RBQWVBLENBQUMsSUFBSUssWUFBWTtJQUM1QyxPQUFPLENBQUNFLEdBQUcsQ0FBQyxFQUFFLEdBQUdSLDhDQUFhLElBQUtBLENBQUFBLDhDQUFhLEdBQUcsS0FBTVEsQ0FBQUEsR0FBRyxDQUFDLEVBQUUsS0FBSztBQUN0RSxFQUFDO0FBRUQ7Ozs7Q0FJQyxHQUNNLE1BQU1HLFFBQVFILENBQUFBLE1BQU9BLEdBQUcsQ0FBQ1QsMkNBQVUsQ0FBQ0csU0FBU00sSUFBSUssTUFBTSxFQUFFO0FBRWhFLGFBQWE7QUFDYixNQUFNQyxpQkFBaUI7SUFBQztDQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUVyRDs7Q0FFQyxHQUNNLE1BQU1DLFNBQVMsSUFBTUQsZUFBZUUsT0FBTyxDQUFDLFVBQVUsc0JBQXNCLEdBQUdDLENBQUFBLElBQ3BGLENBQUNBLElBQUlaLFdBQVcsTUFBTVksSUFBSSxHQUFHQyxRQUFRLENBQUMsS0FDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC9yYW5kb20uanM/N2YzZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIElzb21vcnBoaWMgbW9kdWxlIGZvciB0cnVlIHJhbmRvbSBudW1iZXJzIC8gYnVmZmVycyAvIHV1aWRzLlxuICpcbiAqIEF0dGVudGlvbjogZmFsbHMgYmFjayB0byBNYXRoLnJhbmRvbSBpZiB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGNyeXB0by5cbiAqXG4gKiBAbW9kdWxlIHJhbmRvbVxuICovXG5cbmltcG9ydCAqIGFzIG1hdGggZnJvbSAnLi9tYXRoLmpzJ1xuaW1wb3J0ICogYXMgYmluYXJ5IGZyb20gJy4vYmluYXJ5LmpzJ1xuaW1wb3J0IHsgZ2V0UmFuZG9tVmFsdWVzIH0gZnJvbSAnbGliMC93ZWJjcnlwdG8nXG5cbmV4cG9ydCBjb25zdCByYW5kID0gTWF0aC5yYW5kb21cblxuZXhwb3J0IGNvbnN0IHVpbnQzMiA9ICgpID0+IGdldFJhbmRvbVZhbHVlcyhuZXcgVWludDMyQXJyYXkoMSkpWzBdXG5cbmV4cG9ydCBjb25zdCB1aW50NTMgPSAoKSA9PiB7XG4gIGNvbnN0IGFyciA9IGdldFJhbmRvbVZhbHVlcyhuZXcgVWludDMyQXJyYXkoOCkpXG4gIHJldHVybiAoYXJyWzBdICYgYmluYXJ5LkJJVFMyMSkgKiAoYmluYXJ5LkJJVFMzMiArIDEpICsgKGFyclsxXSA+Pj4gMClcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtBcnJheTxUPn0gYXJyXG4gKiBAcmV0dXJuIHtUfVxuICovXG5leHBvcnQgY29uc3Qgb25lT2YgPSBhcnIgPT4gYXJyW21hdGguZmxvb3IocmFuZCgpICogYXJyLmxlbmd0aCldXG5cbi8vIEB0cy1pZ25vcmVcbmNvbnN0IHV1aWR2NFRlbXBsYXRlID0gWzFlN10gKyAtMWUzICsgLTRlMyArIC04ZTMgKyAtMWUxMVxuXG4vKipcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IHV1aWR2NCA9ICgpID0+IHV1aWR2NFRlbXBsYXRlLnJlcGxhY2UoL1swMThdL2csIC8qKiBAcGFyYW0ge251bWJlcn0gYyAqLyBjID0+XG4gIChjIF4gdWludDMyKCkgJiAxNSA+PiBjIC8gNCkudG9TdHJpbmcoMTYpXG4pXG4iXSwibmFtZXMiOlsibWF0aCIsImJpbmFyeSIsImdldFJhbmRvbVZhbHVlcyIsInJhbmQiLCJNYXRoIiwicmFuZG9tIiwidWludDMyIiwiVWludDMyQXJyYXkiLCJ1aW50NTMiLCJhcnIiLCJCSVRTMjEiLCJCSVRTMzIiLCJvbmVPZiIsImZsb29yIiwibGVuZ3RoIiwidXVpZHY0VGVtcGxhdGUiLCJ1dWlkdjQiLCJyZXBsYWNlIiwiYyIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/set.js":
/*!**********************************!*\
  !*** ./node_modules/lib0/set.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   toArray: () => (/* binding */ toArray)\n/* harmony export */ });\n/**\n * Utility module to work with sets.\n *\n * @module set\n */ const create = ()=>new Set();\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */ const toArray = (set)=>Array.from(set);\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */ const first = (set)=>set.values().next().value ?? undefined;\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */ const from = (entries)=>new Set(entries);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9zZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFTSxNQUFNQSxTQUFTLElBQU0sSUFBSUMsTUFBSztBQUVyQzs7OztDQUlDLEdBQ00sTUFBTUMsVUFBVUMsQ0FBQUEsTUFBT0MsTUFBTUMsSUFBSSxDQUFDRixLQUFJO0FBRTdDOzs7O0NBSUMsR0FDTSxNQUFNRyxRQUFRSCxDQUFBQSxNQUNuQkEsSUFBSUksTUFBTSxHQUFHQyxJQUFJLEdBQUdDLEtBQUssSUFBSUMsVUFBUztBQUV4Qzs7OztDQUlDLEdBQ00sTUFBTUwsT0FBT00sQ0FBQUEsVUFBVyxJQUFJVixJQUFJVSxTQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvc2V0LmpzPzJiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IG1vZHVsZSB0byB3b3JrIHdpdGggc2V0cy5cbiAqXG4gKiBAbW9kdWxlIHNldFxuICovXG5cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoKSA9PiBuZXcgU2V0KClcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtTZXQ8VD59IHNldFxuICogQHJldHVybiB7QXJyYXk8VD59XG4gKi9cbmV4cG9ydCBjb25zdCB0b0FycmF5ID0gc2V0ID0+IEFycmF5LmZyb20oc2V0KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1NldDxUPn0gc2V0XG4gKiBAcmV0dXJuIHtUfVxuICovXG5leHBvcnQgY29uc3QgZmlyc3QgPSBzZXQgPT5cbiAgc2V0LnZhbHVlcygpLm5leHQoKS52YWx1ZSA/PyB1bmRlZmluZWRcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtJdGVyYWJsZTxUPn0gZW50cmllc1xuICogQHJldHVybiB7U2V0PFQ+fVxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9IGVudHJpZXMgPT4gbmV3IFNldChlbnRyaWVzKVxuIl0sIm5hbWVzIjpbImNyZWF0ZSIsIlNldCIsInRvQXJyYXkiLCJzZXQiLCJBcnJheSIsImZyb20iLCJmaXJzdCIsInZhbHVlcyIsIm5leHQiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImVudHJpZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/storage.js":
/*!**************************************!*\
  !*** ./node_modules/lib0/storage.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   offChange: () => (/* binding */ offChange),\n/* harmony export */   onChange: () => (/* binding */ onChange),\n/* harmony export */   varStorage: () => (/* binding */ varStorage)\n/* harmony export */ });\n/* eslint-env browser */ /**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */ /* c8 ignore start */ class VarStoragePolyfill {\n    constructor(){\n        this.map = new Map();\n    }\n    /**\n   * @param {string} key\n   * @param {any} newValue\n   */ setItem(key, newValue) {\n        this.map.set(key, newValue);\n    }\n    /**\n   * @param {string} key\n   */ getItem(key) {\n        return this.map.get(key);\n    }\n}\n/* c8 ignore stop */ /**\n * @type {any}\n */ let _localStorage = new VarStoragePolyfill();\nlet usePolyfill = true;\n/* c8 ignore start */ try {\n    // if the same-origin rule is violated, accessing localStorage might thrown an error\n    if (typeof localStorage !== \"undefined\" && localStorage) {\n        _localStorage = localStorage;\n        usePolyfill = false;\n    }\n} catch (e) {}\n/* c8 ignore stop */ /**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */ /* c8 ignore next */ const varStorage = _localStorage;\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */ /* c8 ignore next */ const onChange = (eventHandler)=>usePolyfill || addEventListener(\"storage\", /** @type {any} */ eventHandler);\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */ /* c8 ignore next */ const offChange = (eventHandler)=>usePolyfill || removeEventListener(\"storage\", /** @type {any} */ eventHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNCQUFzQixHQUV0Qjs7Ozs7O0NBTUMsR0FFRCxtQkFBbUIsR0FDbkIsTUFBTUE7SUFDSkMsYUFBZTtRQUNiLElBQUksQ0FBQ0MsR0FBRyxHQUFHLElBQUlDO0lBQ2pCO0lBRUE7OztHQUdDLEdBQ0RDLFFBQVNDLEdBQUcsRUFBRUMsUUFBUSxFQUFFO1FBQ3RCLElBQUksQ0FBQ0osR0FBRyxDQUFDSyxHQUFHLENBQUNGLEtBQUtDO0lBQ3BCO0lBRUE7O0dBRUMsR0FDREUsUUFBU0gsR0FBRyxFQUFFO1FBQ1osT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ08sR0FBRyxDQUFDSjtJQUN0QjtBQUNGO0FBQ0Esa0JBQWtCLEdBRWxCOztDQUVDLEdBQ0QsSUFBSUssZ0JBQWdCLElBQUlWO0FBQ3hCLElBQUlXLGNBQWM7QUFFbEIsbUJBQW1CLEdBQ25CLElBQUk7SUFDRixvRkFBb0Y7SUFDcEYsSUFBSSxPQUFPQyxpQkFBaUIsZUFBZUEsY0FBYztRQUN2REYsZ0JBQWdCRTtRQUNoQkQsY0FBYztJQUNoQjtBQUNGLEVBQUUsT0FBT0UsR0FBRyxDQUFFO0FBQ2Qsa0JBQWtCLEdBRWxCOztDQUVDLEdBQ0Qsa0JBQWtCLEdBQ1gsTUFBTUMsYUFBYUosY0FBYTtBQUV2Qzs7Ozs7Q0FLQyxHQUNELGtCQUFrQixHQUNYLE1BQU1LLFdBQVdDLENBQUFBLGVBQWdCTCxlQUFlTSxpQkFBaUIsV0FBVyxnQkFBZ0IsR0FBSUQsY0FBYztBQUVySDs7Ozs7Q0FLQyxHQUNELGtCQUFrQixHQUNYLE1BQU1FLFlBQVlGLENBQUFBLGVBQWdCTCxlQUFlUSxvQkFBb0IsV0FBVyxnQkFBZ0IsR0FBSUgsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bmNkcmF3LWNsaWVudC8uL25vZGVfbW9kdWxlcy9saWIwL3N0b3JhZ2UuanM/MTdjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cblxuLyoqXG4gKiBJc29tb3JwaGljIHZhcmlhYmxlIHN0b3JhZ2UuXG4gKlxuICogVXNlcyBMb2NhbFN0b3JhZ2UgaW4gdGhlIGJyb3dzZXIgYW5kIGZhbGxzIGJhY2sgdG8gaW4tbWVtb3J5IHN0b3JhZ2UuXG4gKlxuICogQG1vZHVsZSBzdG9yYWdlXG4gKi9cblxuLyogYzggaWdub3JlIHN0YXJ0ICovXG5jbGFzcyBWYXJTdG9yYWdlUG9seWZpbGwge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5tYXAgPSBuZXcgTWFwKClcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqIEBwYXJhbSB7YW55fSBuZXdWYWx1ZVxuICAgKi9cbiAgc2V0SXRlbSAoa2V5LCBuZXdWYWx1ZSkge1xuICAgIHRoaXMubWFwLnNldChrZXksIG5ld1ZhbHVlKVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICovXG4gIGdldEl0ZW0gKGtleSkge1xuICAgIHJldHVybiB0aGlzLm1hcC5nZXQoa2V5KVxuICB9XG59XG4vKiBjOCBpZ25vcmUgc3RvcCAqL1xuXG4vKipcbiAqIEB0eXBlIHthbnl9XG4gKi9cbmxldCBfbG9jYWxTdG9yYWdlID0gbmV3IFZhclN0b3JhZ2VQb2x5ZmlsbCgpXG5sZXQgdXNlUG9seWZpbGwgPSB0cnVlXG5cbi8qIGM4IGlnbm9yZSBzdGFydCAqL1xudHJ5IHtcbiAgLy8gaWYgdGhlIHNhbWUtb3JpZ2luIHJ1bGUgaXMgdmlvbGF0ZWQsIGFjY2Vzc2luZyBsb2NhbFN0b3JhZ2UgbWlnaHQgdGhyb3duIGFuIGVycm9yXG4gIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSAndW5kZWZpbmVkJyAmJiBsb2NhbFN0b3JhZ2UpIHtcbiAgICBfbG9jYWxTdG9yYWdlID0gbG9jYWxTdG9yYWdlXG4gICAgdXNlUG9seWZpbGwgPSBmYWxzZVxuICB9XG59IGNhdGNoIChlKSB7IH1cbi8qIGM4IGlnbm9yZSBzdG9wICovXG5cbi8qKlxuICogVGhpcyBpcyBiYXNpY2FsbHkgbG9jYWxTdG9yYWdlIGluIGJyb3dzZXIsIG9yIGEgcG9seWZpbGwgaW4gbm9kZWpzXG4gKi9cbi8qIGM4IGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3QgdmFyU3RvcmFnZSA9IF9sb2NhbFN0b3JhZ2VcblxuLyoqXG4gKiBBIHBvbHlmaWxsIGZvciBgYWRkRXZlbnRMaXN0ZW5lcignc3RvcmFnZScsIGV2ZW50ID0+IHsuLn0pYCB0aGF0IGRvZXMgbm90aGluZyBpZiB0aGUgcG9seWZpbGwgaXMgYmVpbmcgdXNlZC5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKHsga2V5OiBzdHJpbmcsIG5ld1ZhbHVlOiBzdHJpbmcsIG9sZFZhbHVlOiBzdHJpbmcgfSk6IHZvaWR9IGV2ZW50SGFuZGxlclxuICogQGZ1bmN0aW9uXG4gKi9cbi8qIGM4IGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3Qgb25DaGFuZ2UgPSBldmVudEhhbmRsZXIgPT4gdXNlUG9seWZpbGwgfHwgYWRkRXZlbnRMaXN0ZW5lcignc3RvcmFnZScsIC8qKiBAdHlwZSB7YW55fSAqLyAoZXZlbnRIYW5kbGVyKSlcblxuLyoqXG4gKiBBIHBvbHlmaWxsIGZvciBgcmVtb3ZlRXZlbnRMaXN0ZW5lcignc3RvcmFnZScsIGV2ZW50ID0+IHsuLn0pYCB0aGF0IGRvZXMgbm90aGluZyBpZiB0aGUgcG9seWZpbGwgaXMgYmVpbmcgdXNlZC5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKHsga2V5OiBzdHJpbmcsIG5ld1ZhbHVlOiBzdHJpbmcsIG9sZFZhbHVlOiBzdHJpbmcgfSk6IHZvaWR9IGV2ZW50SGFuZGxlclxuICogQGZ1bmN0aW9uXG4gKi9cbi8qIGM4IGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3Qgb2ZmQ2hhbmdlID0gZXZlbnRIYW5kbGVyID0+IHVzZVBvbHlmaWxsIHx8IHJlbW92ZUV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCAvKiogQHR5cGUge2FueX0gKi8gKGV2ZW50SGFuZGxlcikpXG4iXSwibmFtZXMiOlsiVmFyU3RvcmFnZVBvbHlmaWxsIiwiY29uc3RydWN0b3IiLCJtYXAiLCJNYXAiLCJzZXRJdGVtIiwia2V5IiwibmV3VmFsdWUiLCJzZXQiLCJnZXRJdGVtIiwiZ2V0IiwiX2xvY2FsU3RvcmFnZSIsInVzZVBvbHlmaWxsIiwibG9jYWxTdG9yYWdlIiwiZSIsInZhclN0b3JhZ2UiLCJvbkNoYW5nZSIsImV2ZW50SGFuZGxlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJvZmZDaGFuZ2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/string.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/string.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_UTF16_CHARACTER: () => (/* binding */ MAX_UTF16_CHARACTER),\n/* harmony export */   _decodeUtf8Native: () => (/* binding */ _decodeUtf8Native),\n/* harmony export */   _decodeUtf8Polyfill: () => (/* binding */ _decodeUtf8Polyfill),\n/* harmony export */   _encodeUtf8Native: () => (/* binding */ _encodeUtf8Native),\n/* harmony export */   _encodeUtf8Polyfill: () => (/* binding */ _encodeUtf8Polyfill),\n/* harmony export */   decodeUtf8: () => (/* binding */ decodeUtf8),\n/* harmony export */   encodeUtf8: () => (/* binding */ encodeUtf8),\n/* harmony export */   fromCamelCase: () => (/* binding */ fromCamelCase),\n/* harmony export */   fromCharCode: () => (/* binding */ fromCharCode),\n/* harmony export */   fromCodePoint: () => (/* binding */ fromCodePoint),\n/* harmony export */   repeat: () => (/* binding */ repeat),\n/* harmony export */   splice: () => (/* binding */ splice),\n/* harmony export */   trimLeft: () => (/* binding */ trimLeft),\n/* harmony export */   utf8ByteLength: () => (/* binding */ utf8ByteLength),\n/* harmony export */   utf8TextDecoder: () => (/* binding */ utf8TextDecoder),\n/* harmony export */   utf8TextEncoder: () => (/* binding */ utf8TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */ const fromCharCode = String.fromCharCode;\nconst fromCodePoint = String.fromCodePoint;\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */ const MAX_UTF16_CHARACTER = fromCharCode(65535);\n/**\n * @param {string} s\n * @return {string}\n */ const toLowerCase = (s)=>s.toLowerCase();\nconst trimLeftRegex = /^\\s*/g;\n/**\n * @param {string} s\n * @return {string}\n */ const trimLeft = (s)=>s.replace(trimLeftRegex, \"\");\nconst fromCamelCaseRegex = /([A-Z])/g;\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */ const fromCamelCase = (s, separator)=>trimLeft(s.replace(fromCamelCaseRegex, (match)=>`${separator}${toLowerCase(match)}`));\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */ const utf8ByteLength = (str)=>unescape(encodeURIComponent(str)).length;\n/**\n * @param {string} str\n * @return {Uint8Array}\n */ const _encodeUtf8Polyfill = (str)=>{\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    const buf = new Uint8Array(len);\n    for(let i = 0; i < len; i++){\n        buf[i] = /** @type {number} */ encodedString.codePointAt(i);\n    }\n    return buf;\n};\n/* c8 ignore next */ const utf8TextEncoder = /** @type {TextEncoder} */ typeof TextEncoder !== \"undefined\" ? new TextEncoder() : null;\n/**\n * @param {string} str\n * @return {Uint8Array}\n */ const _encodeUtf8Native = (str)=>utf8TextEncoder.encode(str);\n/**\n * @param {string} str\n * @return {Uint8Array}\n */ /* c8 ignore next */ const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill;\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */ const _decodeUtf8Polyfill = (buf)=>{\n    let remainingLen = buf.length;\n    let encodedString = \"\";\n    let bufPos = 0;\n    while(remainingLen > 0){\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n        const bytes = buf.subarray(bufPos, bufPos + nextLen);\n        bufPos += nextLen;\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ bytes);\n        remainingLen -= nextLen;\n    }\n    return decodeURIComponent(escape(encodedString));\n};\n/* c8 ignore next */ let utf8TextDecoder = typeof TextDecoder === \"undefined\" ? null : new TextDecoder(\"utf-8\", {\n    fatal: true,\n    ignoreBOM: true\n});\n/* c8 ignore start */ if (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n    // Safari doesn't handle BOM correctly.\n    // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n    // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n    // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n    // Another issue is that from then on no BOM chars are recognized anymore\n    /* c8 ignore next */ utf8TextDecoder = null;\n}\n/* c8 ignore stop */ /**\n * @param {Uint8Array} buf\n * @return {string}\n */ const _decodeUtf8Native = (buf)=>/** @type {TextDecoder} */ utf8TextDecoder.decode(buf);\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */ /* c8 ignore next */ const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill;\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */ const splice = (str, index, remove, insert = \"\")=>str.slice(0, index) + insert + str.slice(index + remove);\n/**\n * @param {string} source\n * @param {number} n\n */ const repeat = (source, n)=>_array_js__WEBPACK_IMPORTED_MODULE_0__.unfold(n, ()=>source).join(\"\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/symbol.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/symbol.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   isSymbol: () => (/* binding */ isSymbol)\n/* harmony export */ });\n/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */ /**\n * Return fresh symbol.\n */ const create = Symbol;\n/**\n * @param {any} s\n * @return {boolean}\n */ const isSymbol = (s)=>typeof s === \"symbol\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9zeW1ib2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7O0NBRUMsR0FDTSxNQUFNQSxTQUFTQyxPQUFNO0FBRTVCOzs7Q0FHQyxHQUNNLE1BQU1DLFdBQVdDLENBQUFBLElBQUssT0FBT0EsTUFBTSxTQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvc3ltYm9sLmpzPzU5MTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IG1vZHVsZSB0byB3b3JrIHdpdGggRWNtYVNjcmlwdCBTeW1ib2xzLlxuICpcbiAqIEBtb2R1bGUgc3ltYm9sXG4gKi9cblxuLyoqXG4gKiBSZXR1cm4gZnJlc2ggc3ltYm9sLlxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlID0gU3ltYm9sXG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHNcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBpc1N5bWJvbCA9IHMgPT4gdHlwZW9mIHMgPT09ICdzeW1ib2wnXG4iXSwibmFtZXMiOlsiY3JlYXRlIiwiU3ltYm9sIiwiaXNTeW1ib2wiLCJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/symbol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/time.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/time.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDate: () => (/* binding */ getDate),\n/* harmony export */   getUnixTime: () => (/* binding */ getUnixTime),\n/* harmony export */   humanizeDuration: () => (/* binding */ humanizeDuration)\n/* harmony export */ });\n/* harmony import */ var _metric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./metric.js */ \"(ssr)/./node_modules/lib0/metric.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/**\n * Utility module to work with time.\n *\n * @module time\n */ \n\n/**\n * Return current time.\n *\n * @return {Date}\n */ const getDate = ()=>new Date();\n/**\n * Return current unix time.\n *\n * @return {number}\n */ const getUnixTime = Date.now;\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */ const humanizeDuration = (d)=>{\n    if (d < 60000) {\n        const p = _metric_js__WEBPACK_IMPORTED_MODULE_0__.prefix(d, -1);\n        return _math_js__WEBPACK_IMPORTED_MODULE_1__.round(p.n * 100) / 100 + p.prefix + \"s\";\n    }\n    d = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 1000);\n    const seconds = d % 60;\n    const minutes = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 60) % 60;\n    const hours = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 3600) % 24;\n    const days = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 86400);\n    if (days > 0) {\n        return days + \"d\" + (hours > 0 || minutes > 30 ? \" \" + (minutes > 30 ? hours + 1 : hours) + \"h\" : \"\");\n    }\n    if (hours > 0) {\n        /* c8 ignore next */ return hours + \"h\" + (minutes > 0 || seconds > 30 ? \" \" + (seconds > 30 ? minutes + 1 : minutes) + \"min\" : \"\");\n    }\n    return minutes + \"min\" + (seconds > 0 ? \" \" + seconds + \"s\" : \"\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC90aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVvQztBQUNKO0FBRWpDOzs7O0NBSUMsR0FDTSxNQUFNRSxVQUFVLElBQU0sSUFBSUMsT0FBTTtBQUV2Qzs7OztDQUlDLEdBQ00sTUFBTUMsY0FBY0QsS0FBS0UsR0FBRztBQUVuQzs7Ozs7Q0FLQyxHQUNNLE1BQU1DLG1CQUFtQkMsQ0FBQUE7SUFDOUIsSUFBSUEsSUFBSSxPQUFPO1FBQ2IsTUFBTUMsSUFBSVIsOENBQWEsQ0FBQ08sR0FBRyxDQUFDO1FBQzVCLE9BQU9OLDJDQUFVLENBQUNPLEVBQUVHLENBQUMsR0FBRyxPQUFPLE1BQU1ILEVBQUVDLE1BQU0sR0FBRztJQUNsRDtJQUNBRixJQUFJTiwyQ0FBVSxDQUFDTSxJQUFJO0lBQ25CLE1BQU1NLFVBQVVOLElBQUk7SUFDcEIsTUFBTU8sVUFBVWIsMkNBQVUsQ0FBQ00sSUFBSSxNQUFNO0lBQ3JDLE1BQU1RLFFBQVFkLDJDQUFVLENBQUNNLElBQUksUUFBUTtJQUNyQyxNQUFNUyxPQUFPZiwyQ0FBVSxDQUFDTSxJQUFJO0lBQzVCLElBQUlTLE9BQU8sR0FBRztRQUNaLE9BQU9BLE9BQU8sTUFBTyxTQUFTLEtBQUtGLFVBQVUsS0FBTSxNQUFPQSxDQUFBQSxVQUFVLEtBQUtDLFFBQVEsSUFBSUEsS0FBSSxJQUFLLE1BQU0sRUFBQztJQUN2RztJQUNBLElBQUlBLFFBQVEsR0FBRztRQUNiLGtCQUFrQixHQUNsQixPQUFPQSxRQUFRLE1BQU8sV0FBVyxLQUFLRixVQUFVLEtBQU0sTUFBT0EsQ0FBQUEsVUFBVSxLQUFLQyxVQUFVLElBQUlBLE9BQU0sSUFBSyxRQUFRLEVBQUM7SUFDaEg7SUFDQSxPQUFPQSxVQUFVLFFBQVNELENBQUFBLFVBQVUsSUFBSSxNQUFNQSxVQUFVLE1BQU0sRUFBQztBQUNqRSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3luY2RyYXctY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2xpYjAvdGltZS5qcz9lNmU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBtb2R1bGUgdG8gd29yayB3aXRoIHRpbWUuXG4gKlxuICogQG1vZHVsZSB0aW1lXG4gKi9cblxuaW1wb3J0ICogYXMgbWV0cmljIGZyb20gJy4vbWV0cmljLmpzJ1xuaW1wb3J0ICogYXMgbWF0aCBmcm9tICcuL21hdGguanMnXG5cbi8qKlxuICogUmV0dXJuIGN1cnJlbnQgdGltZS5cbiAqXG4gKiBAcmV0dXJuIHtEYXRlfVxuICovXG5leHBvcnQgY29uc3QgZ2V0RGF0ZSA9ICgpID0+IG5ldyBEYXRlKClcblxuLyoqXG4gKiBSZXR1cm4gY3VycmVudCB1bml4IHRpbWUuXG4gKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgZ2V0VW5peFRpbWUgPSBEYXRlLm5vd1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aW1lIChpbiBtcykgdG8gYSBodW1hbiByZWFkYWJsZSBmb3JtYXQuIEUuZy4gMTEwMCA9PiAxLjFzLiA2MHMgPT4gMW1pbi4gLjAwMSA9PiAxMM68cy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gZCBkdXJhdGlvbiBpbiBtaWxsaXNlY29uZHNcbiAqIEByZXR1cm4ge3N0cmluZ30gaHVtYW5pemVkIGFwcHJveGltYXRpb24gb2YgdGltZVxuICovXG5leHBvcnQgY29uc3QgaHVtYW5pemVEdXJhdGlvbiA9IGQgPT4ge1xuICBpZiAoZCA8IDYwMDAwKSB7XG4gICAgY29uc3QgcCA9IG1ldHJpYy5wcmVmaXgoZCwgLTEpXG4gICAgcmV0dXJuIG1hdGgucm91bmQocC5uICogMTAwKSAvIDEwMCArIHAucHJlZml4ICsgJ3MnXG4gIH1cbiAgZCA9IG1hdGguZmxvb3IoZCAvIDEwMDApXG4gIGNvbnN0IHNlY29uZHMgPSBkICUgNjBcbiAgY29uc3QgbWludXRlcyA9IG1hdGguZmxvb3IoZCAvIDYwKSAlIDYwXG4gIGNvbnN0IGhvdXJzID0gbWF0aC5mbG9vcihkIC8gMzYwMCkgJSAyNFxuICBjb25zdCBkYXlzID0gbWF0aC5mbG9vcihkIC8gODY0MDApXG4gIGlmIChkYXlzID4gMCkge1xuICAgIHJldHVybiBkYXlzICsgJ2QnICsgKChob3VycyA+IDAgfHwgbWludXRlcyA+IDMwKSA/ICcgJyArIChtaW51dGVzID4gMzAgPyBob3VycyArIDEgOiBob3VycykgKyAnaCcgOiAnJylcbiAgfVxuICBpZiAoaG91cnMgPiAwKSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICByZXR1cm4gaG91cnMgKyAnaCcgKyAoKG1pbnV0ZXMgPiAwIHx8IHNlY29uZHMgPiAzMCkgPyAnICcgKyAoc2Vjb25kcyA+IDMwID8gbWludXRlcyArIDEgOiBtaW51dGVzKSArICdtaW4nIDogJycpXG4gIH1cbiAgcmV0dXJuIG1pbnV0ZXMgKyAnbWluJyArIChzZWNvbmRzID4gMCA/ICcgJyArIHNlY29uZHMgKyAncycgOiAnJylcbn1cbiJdLCJuYW1lcyI6WyJtZXRyaWMiLCJtYXRoIiwiZ2V0RGF0ZSIsIkRhdGUiLCJnZXRVbml4VGltZSIsIm5vdyIsImh1bWFuaXplRHVyYXRpb24iLCJkIiwicCIsInByZWZpeCIsInJvdW5kIiwibiIsImZsb29yIiwic2Vjb25kcyIsIm1pbnV0ZXMiLCJob3VycyIsImRheXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/traits.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/traits.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EqualityTraitSymbol: () => (/* binding */ EqualityTraitSymbol)\n/* harmony export */ });\nconst EqualityTraitSymbol = Symbol(\"Equality\") /**\n * @typedef {{ [EqualityTraitSymbol]:(other:EqualityTrait)=>boolean }} EqualityTrait\n */ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC90cmFpdHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLHNCQUFzQkMsT0FBTyxZQUUxQzs7Q0FFQyxJQUpvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bmNkcmF3LWNsaWVudC8uL25vZGVfbW9kdWxlcy9saWIwL3RyYWl0cy5qcz9iZTQ1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBFcXVhbGl0eVRyYWl0U3ltYm9sID0gU3ltYm9sKCdFcXVhbGl0eScpXG5cbi8qKlxuICogQHR5cGVkZWYge3sgW0VxdWFsaXR5VHJhaXRTeW1ib2xdOihvdGhlcjpFcXVhbGl0eVRyYWl0KT0+Ym9vbGVhbiB9fSBFcXVhbGl0eVRyYWl0XG4gKi9cbiJdLCJuYW1lcyI6WyJFcXVhbGl0eVRyYWl0U3ltYm9sIiwiU3ltYm9sIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/traits.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/url.js":
/*!**********************************!*\
  !*** ./node_modules/lib0/url.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeQueryParams: () => (/* binding */ decodeQueryParams),\n/* harmony export */   encodeQueryParams: () => (/* binding */ encodeQueryParams)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/lib0/object.js\");\n/**\n * Utility module to work with urls.\n *\n * @module url\n */ \n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */ const decodeQueryParams = (url)=>{\n    /**\n   * @type {Object<string,string>}\n   */ const query = {};\n    const urlQuerySplit = url.split(\"?\");\n    const pairs = urlQuerySplit[urlQuerySplit.length - 1].split(\"&\");\n    for(let i = 0; i < pairs.length; i++){\n        const item = pairs[i];\n        if (item.length > 0) {\n            const pair = item.split(\"=\");\n            query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\");\n        }\n    }\n    return query;\n};\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */ const encodeQueryParams = (params)=>_object_js__WEBPACK_IMPORTED_MODULE_0__.map(params, (val, key)=>`${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join(\"&\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVvQztBQUVyQzs7Ozs7Q0FLQyxHQUNNLE1BQU1DLG9CQUFvQkMsQ0FBQUE7SUFDL0I7O0dBRUMsR0FDRCxNQUFNQyxRQUFRLENBQUM7SUFDZixNQUFNQyxnQkFBZ0JGLElBQUlHLEtBQUssQ0FBQztJQUNoQyxNQUFNQyxRQUFRRixhQUFhLENBQUNBLGNBQWNHLE1BQU0sR0FBRyxFQUFFLENBQUNGLEtBQUssQ0FBQztJQUM1RCxJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUYsTUFBTUMsTUFBTSxFQUFFQyxJQUFLO1FBQ3JDLE1BQU1DLE9BQU9ILEtBQUssQ0FBQ0UsRUFBRTtRQUNyQixJQUFJQyxLQUFLRixNQUFNLEdBQUcsR0FBRztZQUNuQixNQUFNRyxPQUFPRCxLQUFLSixLQUFLLENBQUM7WUFDeEJGLEtBQUssQ0FBQ1EsbUJBQW1CRCxJQUFJLENBQUMsRUFBRSxFQUFFLEdBQUdDLG1CQUFtQkQsSUFBSSxDQUFDLEVBQUUsSUFBSTtRQUNyRTtJQUNGO0lBQ0EsT0FBT1A7QUFDVCxFQUFDO0FBRUQ7OztDQUdDLEdBQ00sTUFBTVMsb0JBQW9CQyxDQUFBQSxTQUMvQmIsMkNBQVUsQ0FBQ2EsUUFBUSxDQUFDRSxLQUFLQyxNQUFRLENBQUMsRUFBRUMsbUJBQW1CRCxLQUFLLENBQUMsRUFBRUMsbUJBQW1CRixLQUFLLENBQUMsRUFBRUcsSUFBSSxDQUFDLEtBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC91cmwuanM/MWEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgbW9kdWxlIHRvIHdvcmsgd2l0aCB1cmxzLlxuICpcbiAqIEBtb2R1bGUgdXJsXG4gKi9cblxuaW1wb3J0ICogYXMgb2JqZWN0IGZyb20gJy4vb2JqZWN0LmpzJ1xuXG4vKipcbiAqIFBhcnNlIHF1ZXJ5IHBhcmFtZXRlcnMgZnJvbSBhbiB1cmwuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHJldHVybiB7T2JqZWN0PHN0cmluZyxzdHJpbmc+fVxuICovXG5leHBvcnQgY29uc3QgZGVjb2RlUXVlcnlQYXJhbXMgPSB1cmwgPT4ge1xuICAvKipcbiAgICogQHR5cGUge09iamVjdDxzdHJpbmcsc3RyaW5nPn1cbiAgICovXG4gIGNvbnN0IHF1ZXJ5ID0ge31cbiAgY29uc3QgdXJsUXVlcnlTcGxpdCA9IHVybC5zcGxpdCgnPycpXG4gIGNvbnN0IHBhaXJzID0gdXJsUXVlcnlTcGxpdFt1cmxRdWVyeVNwbGl0Lmxlbmd0aCAtIDFdLnNwbGl0KCcmJylcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWlycy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGl0ZW0gPSBwYWlyc1tpXVxuICAgIGlmIChpdGVtLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IHBhaXIgPSBpdGVtLnNwbGl0KCc9JylcbiAgICAgIHF1ZXJ5W2RlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSB8fCAnJylcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHF1ZXJ5XG59XG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLHN0cmluZz59IHBhcmFtc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlUXVlcnlQYXJhbXMgPSBwYXJhbXMgPT5cbiAgb2JqZWN0Lm1hcChwYXJhbXMsICh2YWwsIGtleSkgPT4gYCR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbCl9YCkuam9pbignJicpXG4iXSwibmFtZXMiOlsib2JqZWN0IiwiZGVjb2RlUXVlcnlQYXJhbXMiLCJ1cmwiLCJxdWVyeSIsInVybFF1ZXJ5U3BsaXQiLCJzcGxpdCIsInBhaXJzIiwibGVuZ3RoIiwiaSIsIml0ZW0iLCJwYWlyIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiZW5jb2RlUXVlcnlQYXJhbXMiLCJwYXJhbXMiLCJtYXAiLCJ2YWwiLCJrZXkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/webcrypto.node.js":
/*!*********************************************!*\
  !*** ./node_modules/lib0/webcrypto.node.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues),\n/* harmony export */   subtle: () => (/* binding */ subtle)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n\nconst subtle = /** @type {any} */ node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle;\nconst getRandomValues = /** @type {any} */ node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.getRandomValues.bind(node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC93ZWJjcnlwdG8ubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFFaEMsTUFBTUMsU0FBNEIsZ0JBQUgsR0FBSUQsa0RBQVNBLENBQUVDLE1BQU07QUFDcEQsTUFBTUMsa0JBQXFDLGdCQUFILEdBQUlGLGtEQUFTQSxDQUFFRSxlQUFlLENBQUNDLElBQUksQ0FBQ0gsa0RBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW5jZHJhdy1jbGllbnQvLi9ub2RlX21vZHVsZXMvbGliMC93ZWJjcnlwdG8ubm9kZS5qcz8xZWNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdlYmNyeXB0byB9IGZyb20gJ25vZGU6Y3J5cHRvJ1xuXG5leHBvcnQgY29uc3Qgc3VidGxlID0gLyoqIEB0eXBlIHthbnl9ICovICh3ZWJjcnlwdG8pLnN1YnRsZVxuZXhwb3J0IGNvbnN0IGdldFJhbmRvbVZhbHVlcyA9IC8qKiBAdHlwZSB7YW55fSAqLyAod2ViY3J5cHRvKS5nZXRSYW5kb21WYWx1ZXMuYmluZCh3ZWJjcnlwdG8pXG4iXSwibmFtZXMiOlsid2ViY3J5cHRvIiwic3VidGxlIiwiZ2V0UmFuZG9tVmFsdWVzIiwiYmluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/webcrypto.node.js\n");

/***/ })

};
;